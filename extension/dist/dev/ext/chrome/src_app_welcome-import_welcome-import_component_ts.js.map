{"version":3,"file":"src_app_welcome-import_welcome-import_component_ts.js","mappings":"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","sources":["./src/app/welcome-import/welcome-import.component.ts","./src/app/welcome-import/welcome-import.component.html"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, ReactiveFormsModule, UntypedFormGroup, Validators } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport { TranslocoModule, TranslocoService } from \"@jsverse/transloco\";\nimport { VaultService } from \"app/vault.service\";\nimport { WelcomeErrorComponent } from \"app/welcome-error/welcome-error.component\";\n\n@Component({\n    imports: [CommonModule, ReactiveFormsModule, MatButtonModule, TranslocoModule, WelcomeErrorComponent, RouterModule],\n    selector: \"welcome-import\",\n    styleUrls: [\"./welcome-import.component.scss\"],\n    templateUrl: \"./welcome-import.component.html\",\n})\nexport class WelcomeImportComponent implements OnInit {\n    errorMessage: string = \"\";\n    errorTitle: string = \"\";\n    loading: boolean = false;\n    mnemonicCount: 12 | 24 = 12;\n    mnemonicCountForm!: UntypedFormGroup;\n    mnemonicForm!: UntypedFormGroup;\n    showWords: boolean = false;\n\n    constructor(\n        private _formBuilder: FormBuilder,\n        private _router: Router,\n        private _snackbar: MatSnackBar,\n        private _translocoService: TranslocoService,\n        private _vaultService: VaultService\n    ) {}\n\n    async ngOnInit(): Promise<void> {\n        this._initForm();\n\n        this.loading = false;\n    }\n\n    private _initForm(): void {\n        this.mnemonicCountForm = this._formBuilder.group({\n            mnemonicCount: [this.mnemonicCount],\n        });\n\n        this.mnemonicCountForm.get(\"mnemonicCount\")!.valueChanges.subscribe((value) => {\n            this.mnemonicCount = value;\n\n            this._initWordsForm();\n        });\n\n        this._initWordsForm();\n    }\n\n    private _initWordsForm(): void {\n        const inputMap = {} as any;\n\n        for (let i = 0; i < this.mnemonicCount; i++) {\n            inputMap[`word${i + 1}`] = [\"\", [Validators.required, Validators.minLength(1), Validators.pattern(/^[a-zA-Z]+$/)]];\n        }\n\n        this.mnemonicForm = this._formBuilder.group(inputMap);\n    }\n\n    formControlKeys(form: UntypedFormGroup): string[] {\n        return Object.keys(form.controls);\n    }\n\n    setMnemonics(): void {\n        if (this.mnemonicCountForm.invalid || this.mnemonicForm.invalid) return;\n\n        const words = this.formControlKeys(this.mnemonicForm)\n            .map((key) => this.mnemonicForm.get(key)?.value)\n            .join(\" \");\n\n        this._vaultService.mnemonic = words;\n\n        this._router.navigate([\"/security/password\"]);\n    }\n\n    toggleShowWords(): void {\n        this.showWords = !this.showWords;\n    }\n\n    async onPaste(event: ClipboardEvent): Promise<void> {\n        event.preventDefault();\n\n        const query = event.clipboardData?.getData(\"text\");\n\n        if (!query || typeof query !== \"string\" || !query?.trim()) return;\n\n        const mnemonicCountControl = this.mnemonicCountForm.get(\"mnemonicCount\");\n\n        if (!mnemonicCountControl) return;\n\n        const formerValue = mnemonicCountControl?.value;\n        const words = query.split(\" \");\n\n        if (words.length === 24) {\n            mnemonicCountControl.patchValue(24);\n        } else if (words.length === 12) {\n            mnemonicCountControl.patchValue(12);\n        } else {\n            this._snackbar.open(this._translocoService.translate(\"errors.invalid_mnemonic\"), this._translocoService.translate(\"common.close\"), {\n                duration: 5000,\n                panelClass: \"zelf-snackbar\",\n                verticalPosition: \"top\",\n            });\n\n            return;\n        }\n\n        if (formerValue !== mnemonicCountControl.value) this._initWordsForm();\n\n        query.split(\" \").forEach((word, index) => {\n            this.mnemonicForm.get(`word${index + 1}`)!.setValue(word);\n        });\n    }\n}\n","<ng-container *ngIf=\"errorTitle\">\n    <welcome-error [errorTitle]=\"errorTitle\" [errorMessage]=\"errorMessage\"></welcome-error>\n</ng-container>\n\n<ng-container *ngIf=\"!errorTitle\">\n    <div (paste)=\"onPaste($event)\" class=\"zelf-card welcome-import__card\" *transloco=\"let t\">\n        <div class=\"zelf-card__header welcome-import__header\">\n            <div class=\"welcome-import__header-button\">\n                <button mat-icon-button class=\"zelf-icon-button zelf-icon-button--40\" [routerLink]=\"['../available']\">\n                    <svg viewBox=\"0 0 22 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M20.0898 5.8277H4.72478L8.08478 2.4677C8.53978 2.0127 8.53978 1.2777 8.08478 0.822695C7.62978 0.367695 6.89478 0.367695 6.43978 0.822695L1.08478 6.1777C0.62978 6.6327 0.62978 7.3677 1.08478 7.8227L6.43978 13.1777C6.89478 13.6327 7.62978 13.6327 8.08478 13.1777C8.53978 12.7227 8.53978 11.9877 8.08478 11.5327L4.72478 8.16103H20.0898C20.7314 8.16103 21.2564 7.63603 21.2564 6.99436C21.2564 6.3527 20.7314 5.8277 20.0898 5.8277Z\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <h2 class=\"zelf-card__title\">{{ t(\"welcome.import_title\") }}</h2>\n            <p class=\"zelf-card__subtitle\">{{ t(\"welcome.import_subtitle\") }}</p>\n\n            <div class=\"tip-box\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 11C9.45 11 9 10.55 9 10V6C9 5.45 9.45 5 10 5C10.55 5 11 5.45 11 6V10C11 10.55 10.55 11 10 11ZM11 15H9V13H11V15Z\"\n                        fill=\"#0e26ff\"\n                    />\n                </svg>\n\n                <p class=\"tip-box__text\">{{ t(\"welcome.paste_your_recovery_phrase\") }}</p>\n            </div>\n\n            <form [formGroup]=\"mnemonicCountForm\" class=\"zelf-radio-group\">\n                <label for=\"mnemonicCount12\" class=\"zelf-radio\">\n                    {{ t(\"common.12_word_phrase\") }}\n\n                    <input\n                        [checked]=\"mnemonicCountForm.get('mnemonicCount')?.value === 12\"\n                        [value]=\"12\"\n                        formControlName=\"mnemonicCount\"\n                        id=\"mnemonicCount12\"\n                        name=\"mnemonicCount\"\n                        type=\"radio\"\n                    />\n\n                    <svg viewBox=\"0 0 21 21\">\n                        <polyline points=\"5 10.75 8.5 14.25 16 6\"></polyline>\n                    </svg>\n                </label>\n\n                <label for=\"mnemonicCount24\" class=\"zelf-radio\">\n                    {{ t(\"common.24_word_phrase\") }}\n\n                    <input\n                        [checked]=\"mnemonicCountForm.get('mnemonicCount')?.value === 24\"\n                        [value]=\"24\"\n                        formControlName=\"mnemonicCount\"\n                        id=\"mnemonicCount24\"\n                        name=\"mnemonicCount\"\n                        type=\"radio\"\n                    />\n\n                    <svg viewBox=\"0 0 21 21\">\n                        <polyline points=\"5 10.75 8.5 14.25 16 6\"></polyline>\n                    </svg>\n                </label>\n            </form>\n        </div>\n\n        <form [formGroup]=\"mnemonicForm\" class=\"welcome-import__form\">\n            <div class=\"zelf-card__content\">\n                <div class=\"welcome-import__grid\">\n                    <div class=\"zelf-input welcome-import__grid-item\" *ngFor=\"let key of formControlKeys(mnemonicForm); let i = index\">\n                        <div class=\"zelf-input__prefix-text\">{{ i + 1 }}</div>\n\n                        <input\n                            [formControlName]=\"key\"\n                            [id]=\"key\"\n                            [name]=\"key\"\n                            [type]=\"showWords ? 'text' : 'password'\"\n                            class=\"zelf-input__control\"\n                            required\n                        />\n                    </div>\n                </div>\n\n                <button (click)=\"toggleShowWords()\" class=\"zelf-button zelf-button--outlined zelf-button--wide zelf-button--no-fill\">\n                    {{ showWords ? t(\"common.hide_words\") : t(\"common.show_words\") }}\n\n                    <ng-container *ngIf=\"!showWords\">\n                        <ng-container *ngTemplateOutlet=\"closedEye\"></ng-container>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"showWords\">\n                        <ng-container *ngTemplateOutlet=\"openEye\"></ng-container>\n                    </ng-container>\n                </button>\n            </div>\n\n            <div class=\"zelf-card__actions welcome-import__actions\">\n                <button\n                    (click)=\"setMnemonics()\"\n                    [disabled]=\"mnemonicForm.invalid\"\n                    class=\"zelf-button zelf-button--black zelf-button--wide\"\n                    mat-flat-button\n                >\n                    {{ t(\"common.continue\") }}\n                </button>\n            </div>\n        </form>\n    </div>\n</ng-container>\n\n<ng-template #openEye>\n    <svg\n        fill=\"none\"\n        height=\"24\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        stroke=\"#181818\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n        <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n    </svg>\n</ng-template>\n\n<ng-template #closedEye>\n    <svg\n        fill=\"none\"\n        height=\"24\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        stroke=\"#181818\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"\n        ></path>\n        <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n    </svg>\n</ng-template>\n"],"names":["CommonModule","ReactiveFormsModule","Validators","MatButtonModule","RouterModule","TranslocoModule","WelcomeErrorComponent","i0","ɵɵelementContainerStart","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","errorTitle","errorMessage","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtextInterpolate","i_r4","key_r3","showWords","ɵɵelementContainer","ɵɵtemplate","WelcomeImportComponent_ng_container_1_div_1_ng_container_32_ng_container_1_Template","closedEye_r5","WelcomeImportComponent_ng_container_1_div_1_ng_container_33_ng_container_1_Template","openEye_r6","ɵɵlistener","WelcomeImportComponent_ng_container_1_div_1_Template_div_paste_0_listener","$event","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","onPaste","WelcomeImportComponent_ng_container_1_div_1_div_29_Template","WelcomeImportComponent_ng_container_1_div_1_Template_button_click_30_listener","toggleShowWords","WelcomeImportComponent_ng_container_1_div_1_ng_container_32_Template","WelcomeImportComponent_ng_container_1_div_1_ng_container_33_Template","WelcomeImportComponent_ng_container_1_div_1_Template_button_click_35_listener","setMnemonics","ɵɵpureFunction0","_c0","t_r7","mnemonicCountForm","ɵɵtextInterpolate1","tmp_11_0","get","value","tmp_14_0","mnemonicForm","formControlKeys","invalid","WelcomeImportComponent_ng_container_1_div_1_Template","WelcomeImportComponent","_formBuilder","_router","_snackbar","_translocoService","_vaultService","loading","mnemonicCount","constructor","ngOnInit","_this","_asyncToGenerator","_initForm","group","valueChanges","subscribe","_initWordsForm","inputMap","i","required","minLength","pattern","form","Object","keys","controls","words","map","key","join","mnemonic","navigate","event","_this2","preventDefault","query","clipboardData","getData","trim","mnemonicCountControl","formerValue","split","length","patchValue","open","translate","duration","panelClass","verticalPosition","forEach","word","index","setValue","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","MatSnackBar","i4","TranslocoService","i5","VaultService","selectors","decls","vars","consts","template","WelcomeImportComponent_Template","rf","ctx","WelcomeImportComponent_ng_container_0_Template","WelcomeImportComponent_ng_container_1_Template","WelcomeImportComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","WelcomeImportComponent_ng_template_4_Template","i6","NgForOf","NgIf","NgTemplateOutlet","ɵNgNoValidate","DefaultValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i7","MatButton","MatIconButton","TranslocoDirective","RouterLink","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}