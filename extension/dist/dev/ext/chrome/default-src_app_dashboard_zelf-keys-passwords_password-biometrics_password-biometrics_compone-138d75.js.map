{"version":3,"file":"default-src_app_dashboard_zelf-keys-passwords_password-biometrics_password-biometrics_compone-138d75.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/util/Immediate.js","./src/app/dashboard/zelf-keys-passwords/password-biometrics/password-biometrics.component.ts","./src/app/dashboard/zelf-keys-passwords/password-biometrics/password-biometrics.component.html","./node_modules/rxjs/dist/esm/internal/scheduler/AsapAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/dist/esm/internal/observable/merge.js","./node_modules/rxjs/dist/esm/internal/scheduler/asap.js","./node_modules/rxjs/dist/esm/internal/scheduler/immediateProvider.js"],"sourcesContent":["let nextHandle = 1;\nlet resolved;\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        if (!resolved) {\n            resolved = Promise.resolve();\n        }\n        resolved.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, ViewChild, ElementRef, ChangeDetectorRef, Renderer2, Input } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { TranslocoModule, TranslocoService } from \"@jsverse/transloco\";\nimport { RouterModule, Router, ActivatedRoute } from \"@angular/router\";\nimport { WebcamComponent, WebcamImage, WebcamInitError, WebcamModule } from \"ngx-webcam\";\nimport { Subject, takeUntil, Observable } from \"rxjs\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { ZelfLoaderComponent } from \"app/zelf-loader/zelf-loader.component\";\nimport { HttpWrapperService } from \"app/http-wrapper.service\";\nimport { MediaStreamService } from \"app/services/media-stream.service\";\nimport { WalletService } from \"../../../wallet.service\";\nimport { environment } from \"environments/environment\";\nimport * as faceapi from \"@vladmandic/face-api\";\nimport { ChromeService } from \"../../../chrome.service\";\n\n@Component({\n\tselector: \"app-password-biometrics\",\n\tstandalone: true,\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tFlexLayoutModule,\n\t\tMatButtonModule,\n\t\tMatProgressBarModule,\n\t\tMatProgressSpinnerModule,\n\t\tTranslocoModule,\n\t\tWebcamModule,\n\t\tZelfLoaderComponent,\n\t\tRouterModule,\n\t],\n\ttemplateUrl: \"./password-biometrics.component.html\",\n\tstyleUrls: [\"./password-biometrics.component.scss\"],\n})\nexport class PasswordBiometricsComponent implements OnInit, OnDestroy {\n\t@ViewChild(\"maskResult\", { static: false }) public maskResultCanvasRef: ElementRef | undefined;\n\t@ViewChild(\"toSend\", { static: false }) public ToSendCanvasRef: ElementRef | undefined;\n\t@ViewChild(\"webcam\", { static: false }) public webcamRef?: WebcamComponent;\n\n\t@Input() isDecryptMode: boolean = false;\n\t@Output() canNavigate: EventEmitter<boolean> = new EventEmitter<boolean>();\n\t@Output() error: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() imageCaptured: EventEmitter<string> = new EventEmitter<string>();\n\t@Output() biometricsSuccess: EventEmitter<any> = new EventEmitter<any>();\n\t@Output() biometricsCancel: EventEmitter<void> = new EventEmitter<void>();\n\n\tprivate unsubscriber$: Subject<void> = new Subject<void>();\n\tprivate _takePicture: Subject<void> = new Subject<void>();\n\tprivate _intervals: any = {};\n\n\t// Camera and face detection properties\n\tcamera = {\n\t\tisLoading: true,\n\t\thasPermissions: true,\n\t\tisLowQuality: false,\n\t\tdimensions: {\n\t\t\tvideo: { width: 0, height: 0, max: { width: 800, height: 600 } },\n\t\t\tresult: { width: 0, height: 0, offsetX: 0, offsetY: 0 },\n\t\t\treal: { width: 0, height: 0, offsetX: 0, offsetY: 0 },\n\t\t},\n\t\tconfiguration: {\n\t\t\tfacingMode: \"user\",\n\t\t\twidth: { ideal: 800 },\n\t\t\theight: { ideal: 600 },\n\t\t},\n\t};\n\n\tface = {\n\t\tvideo: { center: { x: 0, y: 0 }, radius: { x: 0, y: 0 }, margin: { x: 0, y: 0 } },\n\t\treal: { center: { x: 0, y: 0 }, radius: { x: 0, y: 0 }, margin: { x: 0, y: 0 } },\n\t\tminHeight: 200,\n\t\tminPixels: 200,\n\t\tsuccessPosition: 0,\n\t\tthreshold: 0.25,\n\t};\n\n\tresponse = {\n\t\tbase64Image: \"\",\n\t\tisLoading: false,\n\t};\n\tapiKeysSessionJWT: string;\n\terrorFace: any = null;\n\tlastFace: any;\n\tpasswordData: any = {};\n\taspectRatio = 0.75;\n\tmasterPassword: string = \"\";\n\n\tconstructor(\n\t\tprivate _changeDetectorRef: ChangeDetectorRef,\n\t\tprivate _httpWrapperService: HttpWrapperService,\n\t\tprivate _mediaStreamService: MediaStreamService,\n\t\tprivate _renderer: Renderer2,\n\t\tprivate _translocoService: TranslocoService,\n\t\tprivate _walletService: WalletService,\n\t\tprivate _router: Router,\n\t\tprivate _route: ActivatedRoute,\n\t\tprivate chromeService: ChromeService\n\t) {\n\t\tthis.apiKeysSessionJWT = \"\";\n\t}\n\n\tasync ngOnInit(): Promise<void> {\n\t\t// Ensure extension is in full screen mode for better security during biometric authentication\n\t\tif (this.chromeService.isExtension) {\n\t\t\tawait this.chromeService.ensureFullScreen(\"dashboard/passwords/biometrics\");\n\t\t}\n\n\t\tthis._route.queryParams.subscribe((params) => {\n\t\t\tif (params[\"passwordData\"]) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.passwordData = JSON.parse(decodeURIComponent(params[\"passwordData\"]));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"Error parsing password data:\", e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.initZelfKeySession();\n\n\t\tthis._initializeBiometrics();\n\t}\n\n\tasync initZelfKeySession(): Promise<void> {\n\t\t// The wallet service now caches the JWT token\n\t\tawait this._walletService.initZelfKeySession();\n\n\t\t// Get the cached token\n\t\tconst jwt = this._walletService.getZelfKeyJWT();\n\n\t\tif (jwt) {\n\t\t\tthis.apiKeysSessionJWT = jwt;\n\t\t}\n\t}\n\n\t/**\n\t * Handle successful biometrics verification in decrypt mode\n\t */\n\tonBiometricsSuccess(faceBase64: string, password?: string): void {\n\t\tif (this.isDecryptMode) {\n\t\t\tthis.biometricsSuccess.emit({\n\t\t\t\tfaceBase64, // Send just the raw base64 string like store mode\n\t\t\t\tpassword: this.masterPassword || password,\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Handle biometrics cancellation in decrypt mode\n\t */\n\tonBiometricsCancel(): void {\n\t\tif (this.isDecryptMode) {\n\t\t\tthis.biometricsCancel.emit();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this._intervals.detectFace) {\n\t\t\tclearInterval(this._intervals.detectFace);\n\t\t}\n\t\tif (this._intervals.checkNgxVideo) {\n\t\t\tclearInterval(this._intervals.checkNgxVideo);\n\t\t}\n\t\tthis.unsubscriber$.next();\n\t\tthis.unsubscriber$.complete();\n\t}\n\n\tget takePicture$(): Observable<void> {\n\t\treturn this._takePicture.asObservable();\n\t}\n\n\tprivate async _initializeBiometrics(): Promise<void> {\n\t\ttry {\n\t\t\t// Always wait for the wallet service to load the models\n\t\t\tthis._walletService.faceapi$.pipe(takeUntil(this.unsubscriber$)).subscribe(async (isLoaded) => {\n\t\t\t\tif (!isLoaded) return;\n\n\t\t\t\tthis.camera.isLoading = false;\n\t\t\t\tawait this._setMaxVideoDimensions();\n\t\t\t\tthis._startNgxVideoInterval();\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"❌ Error initializing biometrics:\", error);\n\t\t\tthis.error.emit(error);\n\t\t}\n\t}\n\n\tprivate async _checkModelsLoaded(): Promise<boolean> {\n\t\t// This method is no longer needed since we use the wallet service observable\n\t\treturn true;\n\t}\n\n\tprivate _waitForModels(): void {\n\t\t// This method is no longer needed since we use the wallet service observable\n\t}\n\n\tprivate _waitForFaceApi(): void {\n\t\t// This method is no longer needed since we use the wallet service observable\n\t}\n\n\tprivate async _setMaxVideoDimensions(): Promise<void> {\n\t\tconst maxWidth = 800;\n\t\tconst maxHeight = 600;\n\n\t\t// Set initial video dimensions\n\t\tthis.camera.dimensions.video.width = maxWidth;\n\t\tthis.camera.dimensions.video.height = maxHeight;\n\n\t\t// Set result dimensions\n\t\tthis.camera.dimensions.result.width = maxWidth;\n\t\tthis.camera.dimensions.result.height = maxHeight;\n\n\t\t// Initialize face dimensions\n\t\tthis.face.video = this._getCenterAndRadius(maxHeight, maxWidth);\n\n\t\tthis._changeDetectorRef.markForCheck();\n\t}\n\n\tprivate _getCenterAndRadius(\n\t\theight: number,\n\t\twidth: number\n\t): { center: { x: number; y: number }; radius: { x: number; y: number }; margin: { x: number; y: number } } {\n\t\tconst center = {\n\t\t\tx: width / 2,\n\t\t\ty: height / 2,\n\t\t};\n\n\t\tconst margin = {\n\t\t\ty: height * 0.05,\n\t\t\tx: 0,\n\t\t};\n\n\t\tmargin.x = margin.y * 0.8;\n\n\t\tconst radius = {\n\t\t\ty: height * 0.42,\n\t\t\tx: 0,\n\t\t};\n\n\t\tradius.x = radius.y * this.aspectRatio;\n\n\t\tif (radius.x * 2 >= width) {\n\t\t\tradius.x = width * 0.48;\n\t\t\tradius.y = radius.x / this.aspectRatio;\n\t\t}\n\n\t\treturn { center, radius, margin };\n\t}\n\n\tprivate _setResultDimensions(type: string, height: number, width: number): void {\n\t\tconst dimensions = this.camera.dimensions[type as keyof typeof this.camera.dimensions] as any;\n\t\tif (!dimensions) return;\n\n\t\tdimensions.height = height;\n\t\tdimensions.offsetY = 0;\n\t\tdimensions.width = Math.min(2.8 * (this.face.real?.radius?.x || 0), width);\n\t\tdimensions.offsetX = (this.face.real?.center?.x || 0) - dimensions.width / 2;\n\t}\n\n\tprivate _setImageOnCanvas(canvas: HTMLCanvasElement, img: HTMLImageElement, dimensions: any, resultDimensions: any): void {\n\t\tconst context = canvas.getContext(\"2d\");\n\t\tif (!context) return;\n\n\t\tcanvas.width = resultDimensions.width;\n\t\tcanvas.height = resultDimensions.height;\n\n\t\tcontext.drawImage(\n\t\t\timg,\n\t\t\tdimensions.offsetX,\n\t\t\tdimensions.offsetY,\n\t\t\tdimensions.width,\n\t\t\tdimensions.height,\n\t\t\t0,\n\t\t\t0,\n\t\t\tresultDimensions.width,\n\t\t\tresultDimensions.height\n\t\t);\n\t}\n\n\tprivate _drawOvalCenterAndMask(): void {\n\t\tconst maskResultCanvas = this.maskResultCanvasRef?.nativeElement;\n\t\tif (!maskResultCanvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ctx = maskResultCanvas.getContext(\"2d\");\n\t\tif (!ctx) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst videoDim = this.camera.dimensions.video;\n\t\tif (!videoDim.width || !videoDim.height) {\n\t\t\treturn;\n\t\t}\n\t\tmaskResultCanvas.width = videoDim.width;\n\t\tmaskResultCanvas.height = videoDim.height;\n\n\t\tconst { center, radius } = this.face.video || { center: { x: 0, y: 0 }, radius: { x: 0, y: 0 } };\n\n\t\tctx.clearRect(0, 0, maskResultCanvas.width, maskResultCanvas.height);\n\n\t\tctx.fillStyle = \"rgba(255, 255, 255, 0.75)\";\n\t\tctx.fillRect(0, 0, maskResultCanvas.width, maskResultCanvas.height);\n\n\t\tctx.globalCompositeOperation = \"destination-out\";\n\n\t\tctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n\t\tctx.beginPath();\n\t\tctx.ellipse(center.x, center.y, radius.x, radius.y, 0, 0, 2 * Math.PI);\n\t\tctx.fill();\n\t\tctx.closePath();\n\n\t\tctx.globalCompositeOperation = \"source-over\";\n\t}\n\n\tprivate _drawStatusOval(ctx: any, isOk: boolean): void {\n\t\tconst { center, radius } = this.face.video || { center: { x: 0, y: 0 }, radius: { x: 0, y: 0 } };\n\n\t\tctx.beginPath();\n\t\tctx.ellipse(center.x, center.y, radius.x, radius.y, 0, 0, 2 * Math.PI);\n\t\tctx.lineWidth = 5;\n\t\tctx.strokeStyle = isOk ? \"green\" : \"red\";\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t}\n\n\tprivate _inRange(value: number, min: number, max: number): boolean {\n\t\treturn value >= min && value <= max;\n\t}\n\n\tprivate _isFaceCentered(nose: any): void {\n\t\tconst faceCenterX = nose.x;\n\t\tconst faceCenterY = nose.y;\n\n\t\tconst { center, margin } = this.face.real || { center: { x: 0, y: 0 }, margin: { x: 0, y: 0 } };\n\n\t\tconst inRangeX = this._inRange(faceCenterX, center.x - margin.x, center.x + margin.x);\n\t\tconst inRangeY = this._inRange(faceCenterY, center.y, center.y + margin.y * 2.5);\n\n\t\tconst isFaceCentered = inRangeX && inRangeY;\n\n\t\tif (isFaceCentered) return;\n\n\t\tlet direction = \"\";\n\n\t\tif (!inRangeX) direction += `${faceCenterX < center.x - margin.x ? \"←\" : \"→\"}`;\n\t\tif (!inRangeY) direction += `${faceCenterY < center.y ? \"↓\" : \"↑\"}`;\n\n\t\tthis.errorFace = {\n\t\t\tcanvas: direction,\n\t\t\tsubtitle: \"Center your face in the oval\",\n\t\t\ttitle: \"Center your face\",\n\t\t};\n\t}\n\n\tprivate _isFaceClose(landmarks: any): void {\n\t\tconst realDim = this.camera.dimensions.real || { height: 0, width: 0 };\n\t\tconst totalFaceArea = landmarks.imageHeight * landmarks.imageWidth;\n\t\tconst totalImageArea = realDim.height * realDim.width;\n\t\tconst faceProportion = totalFaceArea / totalImageArea;\n\n\t\tif (faceProportion < this.face.threshold || landmarks.imageHeight < this.face.minPixels || landmarks.imageWidth < this.face.minPixels) {\n\t\t\tthis.errorFace = {\n\t\t\t\ttitle: \"Get closer\",\n\t\t\t\tsubtitle: \"Move your face closer to the camera\",\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate _startFaceDetectionInterval(): void {\n\t\tif (this._intervals.detectFace) {\n\t\t\tclearInterval(this._intervals.detectFace);\n\t\t\tthis._intervals.detectFace = null;\n\t\t}\n\n\t\tthis._intervals.detectFace = setInterval(() => {\n\t\t\tthis._detectFace();\n\t\t}, 100);\n\t}\n\n\tprivate async _detectFace(): Promise<void> {\n\t\tconst videoNgx = this.webcamRef?.nativeVideoElement;\n\t\tif (!videoNgx || this.response.base64Image) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst detection = await faceapi.detectAllFaces(videoNgx, new faceapi.SsdMobilenetv1Options({ minConfidence: 0.2 })).withFaceLandmarks();\n\n\t\t\tconst context = this.maskResultCanvasRef?.nativeElement.getContext(\"2d\", { willReadFrequently: true });\n\t\t\tif (!context) return;\n\n\t\t\t// Always redraw the base oval mask first\n\t\t\tthis._drawOvalCenterAndMask();\n\n\t\t\tif (detection.length > 0) {\n\t\t\t\tthis.lastFace = detection[0];\n\t\t\t\tthis.errorFace = null;\n\n\t\t\t\t// Set real dimensions for face positioning calculations\n\t\t\t\tthis.camera.dimensions.real = {\n\t\t\t\t\theight: videoNgx.videoHeight,\n\t\t\t\t\twidth: videoNgx.videoWidth,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t};\n\t\t\t\tthis.face.real = this._getCenterAndRadius(videoNgx.videoHeight, videoNgx.videoWidth);\n\n\t\t\t\t// Check face positioning\n\t\t\t\tthis._isFaceCentered(this.lastFace.landmarks.getNose()[3]);\n\t\t\t\tthis._isFaceClose(this.lastFace.landmarks);\n\n\t\t\t\t// Draw status oval (green if no errors, red if errors)\n\t\t\t\tthis._drawStatusOval(context, !this.errorFace);\n\n\t\t\t\tif (!this.errorFace) {\n\t\t\t\t\t++this.face.successPosition;\n\t\t\t\t} else {\n\t\t\t\t\tthis.face.successPosition = 0;\n\t\t\t\t}\n\n\t\t\t\tif (this.face.successPosition > 2) {\n\t\t\t\t\t// Capture after 3 successful frames\n\t\t\t\t\tthis.face.successPosition = 0;\n\t\t\t\t\tthis._takePicture.next(); // Trigger image capture\n\t\t\t\t\tclearInterval(this._intervals.detectFace); // Stop detection after capture\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.face.successPosition = 0;\n\t\t\t\tthis.errorFace = {\n\t\t\t\t\ttitle: \"No face detected\",\n\t\t\t\t\tsubtitle: \"Please look at the camera\",\n\t\t\t\t};\n\t\t\t\t// Draw red oval if no face detected\n\t\t\t\tthis._drawStatusOval(context, false);\n\t\t\t}\n\n\t\t\tthis._changeDetectorRef.markForCheck();\n\t\t} catch (error: any) {\n\t\t\tconsole.error(\"Face detection error:\", error);\n\t\t\tthis.error.emit(error);\n\t\t\tconst context = this.maskResultCanvasRef?.nativeElement.getContext(\"2d\");\n\t\t\tif (context) this._drawStatusOval(context, false);\n\t\t}\n\t}\n\n\tprivate _takePictureLiveness(img: HTMLImageElement): void {\n\t\tconst maskResultCanvas = this.maskResultCanvasRef?.nativeElement;\n\t\tconst toSendCanvas = this.ToSendCanvasRef?.nativeElement;\n\n\t\tif (!maskResultCanvas || !toSendCanvas) return;\n\n\t\tif (!this.camera.dimensions.real || !this.camera.dimensions.result) {\n\t\t\tconsole.error(\"Camera dimensions not properly initialized\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis._setImageOnCanvas(maskResultCanvas, img, this.camera.dimensions.real, this.camera.dimensions.result);\n\t\tthis._setImageOnCanvas(toSendCanvas, img, this.camera.dimensions.real, this.camera.dimensions.real);\n\n\t\tthis.response.base64Image = toSendCanvas.toDataURL(\"image/jpeg\");\n\t\tthis.response.isLoading = true;\n\n\t\tthis._emitBiometricCapture();\n\t}\n\n\tprivate async _emitBiometricCapture(): Promise<void> {\n\t\ttry {\n\t\t\tconst base64Data = this.response.base64Image.split(\",\")[1];\n\n\t\t\tif (this.isDecryptMode) {\n\t\t\t\t// In decrypt mode, emit the biometric data to the parent component\n\t\t\t\tthis.onBiometricsSuccess(base64Data);\n\t\t\t} else {\n\t\t\t\t// In create mode, store the new password\n\t\t\t\tconst payload = {\n\t\t\t\t\twebsite: this.passwordData.url,\n\t\t\t\t\tusername: this.passwordData.email,\n\t\t\t\t\tpassword: this.passwordData.password,\n\t\t\t\t\tnotes: this.passwordData.notes,\n\t\t\t\t\tname: this.passwordData.title,\n\t\t\t\t\tfaceBase64: base64Data,\n\t\t\t\t};\n\n\t\t\t\tconst response = await this._httpWrapperService.sendRequest(\n\t\t\t\t\t\"post\",\n\t\t\t\t\t`${environment.keysApiUrl}/api/zelf-key/store/password`,\n\t\t\t\t\tpayload,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAuthorization: `Bearer ${this.apiKeysSessionJWT}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tthis.imageCaptured.emit(this.response.base64Image);\n\n\t\t\t\tthis._router.navigate([\"/dashboard/passwords/result\"], {\n\t\t\t\t\tqueryParams: {\n\t\t\t\t\t\tresult: JSON.stringify(response),\n\t\t\t\t\t\tpasswordData: encodeURIComponent(JSON.stringify(this.passwordData)),\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error in biometric capture:\", error);\n\t\t\tthis.error.emit(error);\n\t\t}\n\t}\n\n\tcameraError(error: WebcamInitError): void {\n\t\tconsole.error(\"Camera error:\", error);\n\t\tthis.canNavigate.emit(true);\n\t\tthis.error.emit(error);\n\n\t\tif (!error.mediaStreamError || error.mediaStreamError.name !== \"NotAllowedError\") return;\n\n\t\tthis.camera.hasPermissions = false;\n\t\tconsole.log(\"Camera permissions denied\");\n\t}\n\n\tprocessImage(webcamImage: WebcamImage): void {\n\t\tif (this.response.base64Image) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst img = new Image();\n\t\timg.src = webcamImage.imageAsDataUrl;\n\n\t\timg.onload = async () => {\n\t\t\tif (img.height < this.face.minHeight) {\n\t\t\t\tthis.camera.isLowQuality = true;\n\t\t\t\tthis.canNavigate.emit(true);\n\t\t\t\tthis.error.emit({ error: \"low_quality\" });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This is for capturing the final image after successful liveness detection\n\t\t\tthis._takePictureLiveness(img);\n\t\t};\n\t}\n\n\tonBack(): void {\n\t\tif (this.isDecryptMode) {\n\t\t\t// In decrypt mode, emit cancel event\n\t\t\tthis.onBiometricsCancel();\n\t\t} else {\n\t\t\t// In create mode, navigate back to password form\n\t\t\tthis._router.navigate([\"/dashboard/passwords/new\"], {\n\t\t\t\tqueryParams: { passwordData: encodeURIComponent(JSON.stringify(this.passwordData)) },\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _checkVideoStreamReady = () => {\n\t\tconst videoNgx = this.webcamRef?.nativeVideoElement;\n\n\t\tif (!videoNgx) return;\n\n\t\tclearInterval(this._intervals.checkNgxVideo);\n\n\t\tthis._intervals.checkNgxVideo = null;\n\n\t\tvideoNgx.addEventListener(\n\t\t\t\"loadeddata\",\n\t\t\t() => {\n\t\t\t\tthis._startFaceDetectionInterval();\n\t\t\t\tthis.canNavigate.emit(true);\n\n\t\t\t\tthis._setVideoDimensions(videoNgx);\n\t\t\t\tthis._drawOvalCenterAndMask();\n\t\t\t},\n\t\t\t{ once: true }\n\t\t);\n\n\t\tthis._setVideoDimensions(videoNgx);\n\t\tthis._drawOvalCenterAndMask();\n\t};\n\n\tprivate _setVideoDimensions(videoElement: HTMLVideoElement) {\n\t\tconst actualWidth = videoElement.clientWidth;\n\t\tconst actualHeight = videoElement.clientHeight;\n\n\t\tthis.camera.dimensions.video.height = actualHeight;\n\t\tthis.camera.dimensions.video.width = actualWidth;\n\t\tthis.camera.dimensions.result = { height: 0, width: 0, offsetX: 0, offsetY: 0 };\n\n\t\tthis._setResultDimensions(\"result\", actualHeight, actualWidth);\n\n\t\tthis.face.video = this._getCenterAndRadius(actualHeight, actualWidth);\n\n\t\tconst maskResultCanvas = this.maskResultCanvasRef?.nativeElement;\n\n\t\tif (maskResultCanvas) {\n\t\t\tmaskResultCanvas.style.marginLeft = `0px`;\n\t\t\tmaskResultCanvas.style.marginTop = `0px`;\n\t\t}\n\n\t\tthis._changeDetectorRef.markForCheck();\n\t}\n\n\tprivate _startNgxVideoInterval = (): void => {\n\t\tif (this._intervals.checkNgxVideo) {\n\t\t\tclearInterval(this._intervals.checkNgxVideo);\n\n\t\t\tthis._intervals.checkNgxVideo = null;\n\t\t}\n\n\t\tthis._intervals.checkNgxVideo = setInterval(this._checkVideoStreamReady, 100);\n\t};\n}\n","<div class=\"password-biometrics-container\">\n\t<div class=\"biometrics-header\">\n\t\t<button class=\"btn-back\" (click)=\"onBack()\">\n\t\t\t<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n\t\t\t\t<path d=\"M15 10H5M5 10L10 15M5 10L10 5\" stroke=\"#171717\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n\t\t\t</svg>\n\t\t\t<span>{{ isDecryptMode ? \"Back to Password Details\" : \"Back to Password Form\" }}</span>\n\t\t</button>\n\n\t\t<h1 class=\"biometrics-title\">{{ isDecryptMode ? \"Verify Identity to Decrypt\" : \"Biometric Verification\" }}</h1>\n\t</div>\n\n\t<div class=\"biometrics-content\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\t\t<div\n\t\t\t*ngIf=\"!camera.isLoading && camera.hasPermissions && !camera.isLowQuality\"\n\t\t\tclass=\"camera-container\"\n\t\t\tfxLayout=\"column\"\n\t\t\tfxLayoutAlign=\"center center\"\n\t\t>\n\t\t\t<!-- Camera View - Much Larger Now -->\n\t\t\t<div class=\"camera-view\" [style.width.px]=\"camera.dimensions.video.width\" [style.height.px]=\"camera.dimensions.video.height\">\n\t\t\t\t<webcam\n\t\t\t\t\t(imageCapture)=\"processImage($event)\"\n\t\t\t\t\t(initError)=\"cameraError($event)\"\n\t\t\t\t\t[allowCameraSwitch]=\"false\"\n\t\t\t\t\t[captureImageData]=\"true\"\n\t\t\t\t\t[height]=\"camera.dimensions.video.height\"\n\t\t\t\t\t[imageQuality]=\"1\"\n\t\t\t\t\t[trigger]=\"takePicture$\"\n\t\t\t\t\t[videoOptions]=\"camera.configuration\"\n\t\t\t\t\t[width]=\"camera.dimensions.video.width\"\n\t\t\t\t\t*ngIf=\"!response.base64Image\"\n\t\t\t\t\t#webcam\n\t\t\t\t\tmirrorImage=\"always\"\n\t\t\t\t></webcam>\n\n\t\t\t\t<canvas\n\t\t\t\t\t[style.height.px]=\"response.base64Image ? camera.dimensions.result.height : camera.dimensions.video.height\"\n\t\t\t\t\t[style.width.px]=\"response.base64Image ? camera.dimensions.result.width : camera.dimensions.video.width\"\n\t\t\t\t\t#maskResult\n\t\t\t\t\tclass=\"face-mask-canvas\"\n\t\t\t\t></canvas>\n\n\t\t\t\t<canvas #toSend hidden=\"true\"></canvas>\n\t\t\t</div>\n\n\t\t\t<!-- Status Messages - Positioned Below Camera -->\n\t\t\t<div class=\"status-messages\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n\t\t\t\t<div *ngIf=\"errorFace && !response.isLoading\" class=\"biometric__error\">\n\t\t\t\t\t<div class=\"biometric__error-title\">{{ errorFace.title }}</div>\n\t\t\t\t\t<div class=\"biometric__error-subtitle\">{{ errorFace.subtitle }}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"!errorFace && !response.isLoading\" class=\"biometric__instructions\">\n\t\t\t\t\t<div class=\"biometric__instruction-title\">Position your face in the center</div>\n\t\t\t\t\t<div class=\"biometric__instruction-subtitle\">Look directly at the camera and stay still</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Instructions - Compact and Strategic -->\n\t\t\t<div class=\"compact-instructions\">\n\t\t\t\t<p *ngIf=\"!isDecryptMode\">Please look at the camera to verify your identity and store your password securely</p>\n\t\t\t\t<p *ngIf=\"isDecryptMode\">Please look at the camera to verify your identity and decrypt your password</p>\n\t\t\t</div>\n\n\t\t\t<!-- Optional Password Input for Decrypt Mode -->\n\t\t\t<div *ngIf=\"isDecryptMode\" class=\"password-input-container\">\n\t\t\t\t<label for=\"masterPassword\">Master Password (Optional):</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tid=\"masterPassword\"\n\t\t\t\t\tplaceholder=\"Enter your master password if you have one\"\n\t\t\t\t\t[(ngModel)]=\"masterPassword\"\n\t\t\t\t\tclass=\"password-input\"\n\t\t\t\t/>\n\t\t\t\t<small>If you set a master password when creating this entry, enter it here</small>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"loading-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"response.base64Image || camera.isLoading\">\n\t\t\t<zelf-loader [diameter]=\"120\"></zelf-loader>\n\t\t\t<div *ngIf=\"response.isLoading\" class=\"processing-message\">Processing your biometric data...</div>\n\t\t</div>\n\n\t\t<div class=\"error-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"!camera.isLoading && camera.isLowQuality\">\n\t\t\t<img src=\"https://cdn.verifik.co/demo/nocameraenabled.svg\" alt=\"Camera Error\" class=\"camera-error-image\" />\n\t\t\t<h2 class=\"error-title\">Camera not available</h2>\n\t\t\t<p class=\"error-description\">Please ensure your camera is enabled and accessible for biometric verification</p>\n\t\t</div>\n\n\t\t<div class=\"permission-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"!camera.isLoading && !camera.hasPermissions\">\n\t\t\t<div class=\"permission-icon\">📷</div>\n\t\t\t<h2 class=\"permission-title\">Camera Permission Required</h2>\n\t\t\t<p class=\"permission-description\">Please allow camera access to continue with biometric verification</p>\n\t\t\t<button class=\"btn-retry\" (click)=\"onBack()\">Go Back</button>\n\t\t</div>\n\t</div>\n</div>\n","import { AsyncAction } from './AsyncAction';\nimport { immediateProvider } from './immediateProvider';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        var _a;\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        const { actions } = scheduler;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            immediateProvider.clearImmediate(id);\n            if (scheduler._scheduled === id) {\n                scheduler._scheduled = undefined;\n            }\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        const flushId = this._scheduled;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        action = action || actions.shift();\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\nexport function merge(...args) {\n    const scheduler = popScheduler(args);\n    const concurrent = popNumber(args, Infinity);\n    const sources = args;\n    return !sources.length\n        ?\n            EMPTY\n        : sources.length === 1\n            ?\n                innerFrom(sources[0])\n            :\n                mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { Immediate } from '../util/Immediate';\nconst { setImmediate, clearImmediate } = Immediate;\nexport const immediateProvider = {\n    setImmediate(...args) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate)(...args);\n    },\n    clearImmediate(handle) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);\n    },\n    delegate: undefined,\n};\n"],"names":["nextHandle","resolved","activeHandles","findAndClearHandle","handle","Immediate","setImmediate","cb","Promise","resolve","then","clearImmediate","TestTools","pending","Object","keys","length","EventEmitter","CommonModule","FormsModule","TranslocoModule","RouterModule","WebcamModule","Subject","takeUntil","FlexLayoutModule","MatButtonModule","MatProgressBarModule","MatProgressSpinnerModule","ZelfLoaderComponent","environment","faceapi","i0","ɵɵelementStart","ɵɵlistener","PasswordBiometricsComponent_div_10_webcam_2_Template_webcam_imageCapture_0_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","processImage","PasswordBiometricsComponent_div_10_webcam_2_Template_webcam_initError_0_listener","cameraError","ɵɵelementEnd","ɵɵproperty","camera","dimensions","video","height","takePicture$","configuration","width","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","errorFace","title","subtitle","ɵɵtwoWayListener","PasswordBiometricsComponent_div_10_div_13_Template_input_ngModelChange_3_listener","_r3","ɵɵtwoWayBindingSet","masterPassword","ɵɵtwoWayProperty","ɵɵtemplate","PasswordBiometricsComponent_div_10_webcam_2_Template","ɵɵelement","PasswordBiometricsComponent_div_10_div_8_Template","PasswordBiometricsComponent_div_10_div_9_Template","PasswordBiometricsComponent_div_10_p_11_Template","PasswordBiometricsComponent_div_10_p_12_Template","PasswordBiometricsComponent_div_10_div_13_Template","ɵɵstyleProp","response","base64Image","result","isLoading","isDecryptMode","PasswordBiometricsComponent_div_11_div_2_Template","PasswordBiometricsComponent_div_13_Template_button_click_7_listener","_r4","onBack","PasswordBiometricsComponent","_changeDetectorRef","_httpWrapperService","_mediaStreamService","_renderer","_translocoService","_walletService","_router","_route","chromeService","maskResultCanvasRef","ToSendCanvasRef","webcamRef","canNavigate","error","imageCaptured","biometricsSuccess","biometricsCancel","unsubscriber$","_takePicture","_intervals","hasPermissions","isLowQuality","max","offsetX","offsetY","real","facingMode","ideal","face","center","x","y","radius","margin","minHeight","minPixels","successPosition","threshold","apiKeysSessionJWT","lastFace","passwordData","aspectRatio","constructor","ngOnInit","_this","_asyncToGenerator","isExtension","ensureFullScreen","queryParams","subscribe","params","JSON","parse","decodeURIComponent","e","console","initZelfKeySession","_initializeBiometrics","_this2","jwt","getZelfKeyJWT","onBiometricsSuccess","faceBase64","password","emit","onBiometricsCancel","ngOnDestroy","detectFace","clearInterval","checkNgxVideo","next","complete","asObservable","_this3","faceapi$","pipe","_ref","isLoaded","_setMaxVideoDimensions","_startNgxVideoInterval","_x","apply","arguments","_checkModelsLoaded","_waitForModels","_waitForFaceApi","_this4","maxWidth","maxHeight","_getCenterAndRadius","markForCheck","_setResultDimensions","type","Math","min","_setImageOnCanvas","canvas","img","resultDimensions","context","getContext","drawImage","_drawOvalCenterAndMask","maskResultCanvas","nativeElement","ctx","videoDim","clearRect","fillStyle","fillRect","globalCompositeOperation","beginPath","ellipse","PI","fill","closePath","_drawStatusOval","isOk","lineWidth","strokeStyle","stroke","_inRange","value","_isFaceCentered","nose","faceCenterX","faceCenterY","inRangeX","inRangeY","isFaceCentered","direction","_isFaceClose","landmarks","realDim","totalFaceArea","imageHeight","imageWidth","totalImageArea","faceProportion","_startFaceDetectionInterval","setInterval","_detectFace","_this5","videoNgx","nativeVideoElement","detection","detectAllFaces","SsdMobilenetv1Options","minConfidence","withFaceLandmarks","willReadFrequently","videoHeight","videoWidth","getNose","_takePictureLiveness","toSendCanvas","toDataURL","_emitBiometricCapture","_this6","base64Data","split","payload","website","url","username","email","notes","name","sendRequest","keysApiUrl","headers","Authorization","navigate","stringify","encodeURIComponent","mediaStreamError","log","webcamImage","_this7","Image","src","imageAsDataUrl","onload","_checkVideoStreamReady","addEventListener","_setVideoDimensions","once","videoElement","actualWidth","clientWidth","actualHeight","clientHeight","style","marginLeft","marginTop","ɵɵdirectiveInject","ChangeDetectorRef","i1","HttpWrapperService","i2","MediaStreamService","Renderer2","i3","TranslocoService","i4","WalletService","i5","Router","ActivatedRoute","i6","ChromeService","selectors","viewQuery","PasswordBiometricsComponent_Query","rf","PasswordBiometricsComponent_Template_button_click_2_listener","PasswordBiometricsComponent_div_10_Template","PasswordBiometricsComponent_div_11_Template","PasswordBiometricsComponent_div_12_Template","PasswordBiometricsComponent_div_13_Template","i7","NgIf","i8","DefaultValueAccessor","NgControlStatus","NgModel","i9","DefaultLayoutDirective","DefaultLayoutAlignDirective","i10","WebcamComponent","styles","AsyncAction","immediateProvider","AsapAction","scheduler","work","requestAsyncId","id","delay","actions","push","_scheduled","flush","bind","undefined","recycleAsyncId","_a","AsyncScheduler","AsapScheduler","action","_active","flushId","shift","execute","state","unsubscribe","mergeAll","innerFrom","EMPTY","popNumber","popScheduler","from","merge","args","concurrent","Infinity","sources","asapScheduler","asap","delegate"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,3,4,5,6,7]}