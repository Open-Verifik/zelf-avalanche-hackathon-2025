{"version":3,"file":"src_app_dashboard_zelf-keys-passwords_password-detail_password-detail_component_ts.js","mappings":"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","sources":["./src/app/dashboard/zelf-keys-passwords/password-detail/password-detail.component.ts","./src/app/dashboard/zelf-keys-passwords/password-detail/password-detail.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { WalletService } from \"../../../wallet.service\";\nimport { PasswordDataService } from \"../../../services/password-data.service\";\nimport { PasswordBiometricsComponent } from \"../password-biometrics/password-biometrics.component\";\n\n@Component({\n\tselector: \"app-password-detail\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule, PasswordBiometricsComponent],\n\ttemplateUrl: \"./password-detail.component.html\",\n\tstyleUrls: [\"./password-detail.component.scss\"],\n})\nexport class PasswordDetailComponent implements OnInit, OnDestroy {\n\tpassword: any = null;\n\tloading = false;\n\terror: string | null = null;\n\tshowBiometrics = false;\n\tdecryptedData: any = null;\n\tdecrypting = false;\n\n\tprivate destroy$ = new Subject<void>();\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate walletService: WalletService,\n\t\tprivate passwordDataService: PasswordDataService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.loadPasswordData();\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.destroy$.next();\n\t\tthis.destroy$.complete();\n\t}\n\n\tasync loadPasswordData(): Promise<void> {\n\t\tthis.loading = true;\n\t\tthis.error = null;\n\n\t\ttry {\n\t\t\t// Get password data from the service\n\t\t\tconst passwordData = this.passwordDataService.getCurrentPassword();\n\t\t\tif (passwordData) {\n\t\t\t\tthis.password = passwordData;\n\t\t\t\tconsole.log(\"Password data loaded from service:\", this.password);\n\t\t\t} else {\n\t\t\t\t// Fallback: try to get from route params if needed\n\t\t\t\tconsole.error(\"No password data found in service\");\n\t\t\t\tthis.error = \"Password data not found\";\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error loading password data:\", error);\n\t\t\tthis.error = \"Failed to load password data\";\n\t\t} finally {\n\t\t\tthis.loading = false;\n\t\t}\n\t}\n\n\tonDecryptClick(): void {\n\t\tthis.showBiometrics = true;\n\t}\n\n\tonBiometricsSuccess(biometricData: any): void {\n\t\tthis.decryptPassword(biometricData);\n\t}\n\n\tonBiometricsCancel(): void {\n\t\tthis.showBiometrics = false;\n\t}\n\n\tasync decryptPassword(biometricData: any): Promise<void> {\n\t\tthis.decrypting = true;\n\t\tthis.error = null;\n\n\t\ttry {\n\t\t\tconst payload = {\n\t\t\t\tzelfProof: this.password.publicData.zelfProof,\n\t\t\t\tfaceBase64: biometricData.faceBase64,\n\t\t\t\tpassword: biometricData.password || undefined, // Optional\n\t\t\t};\n\n\t\t\tconst response = await this.walletService.retrievePassword(payload);\n\t\t\tconsole.log(\"Retrieve API response:\", response);\n\n\t\t\tif (response?.data?.metadata) {\n\t\t\t\t// The decrypted data is in response.data.metadata\n\t\t\t\tthis.decryptedData = {\n\t\t\t\t\t...response.data.metadata,\n\t\t\t\t\t// Also include some public data for display\n\t\t\t\t\twebsite: response.data.publicData?.website,\n\t\t\t\t\tzelfName: response.data.publicData?.zelfName,\n\t\t\t\t\ttimestamp: response.data.publicData?.timestamp,\n\t\t\t\t\ttype: response.data.publicData?.type,\n\t\t\t\t\tcategory: response.data.publicData?.category,\n\t\t\t\t\tdifficulty: response.data.difficulty,\n\t\t\t\t};\n\t\t\t\tthis.showBiometrics = false;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Failed to decrypt password data\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error decrypting password:\", error);\n\t\t\tthis.error = \"Failed to decrypt password. Please try again.\";\n\t\t} finally {\n\t\t\tthis.decrypting = false;\n\t\t}\n\t}\n\n\tonBackToList(): void {\n\t\t// Clear the password data from service\n\t\tthis.passwordDataService.clearCurrentPassword();\n\t\tthis.router.navigate([\"/dashboard/passwords\"]);\n\t}\n\n\tonEditPassword(): void {\n\t\t// Navigate to edit password with the current data\n\t\tthis.router.navigate([\"/dashboard/passwords/edit\"], {\n\t\t\tstate: { password: this.password },\n\t\t});\n\t}\n\n\tonCopyPassword(): void {\n\t\tif (this.decryptedData?.password) {\n\t\t\tnavigator.clipboard\n\t\t\t\t.writeText(this.decryptedData.password)\n\t\t\t\t.then(() => {\n\t\t\t\t\t// Could add a toast notification here\n\t\t\t\t\tconsole.log(\"Password copied to clipboard\");\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.error(\"Failed to copy password:\", err);\n\t\t\t\t});\n\t\t}\n\t}\n}\n","<div class=\"password-detail\">\n\t<!-- Header -->\n\t<div class=\"header\">\n\t\t<button class=\"btn-back\" (click)=\"onBackToList()\">← Back to Passwords</button>\n\t\t<h2>Password Details</h2>\n\t</div>\n\n\t<!-- Loading State -->\n\t<div *ngIf=\"loading\" class=\"loading-state\">\n\t\t<div class=\"spinner\"></div>\n\t\t<p>Loading password details...</p>\n\t</div>\n\n\t<!-- Error State -->\n\t<div *ngIf=\"error && !loading\" class=\"error-state\">\n\t\t<div class=\"icon\">⚠️</div>\n\t\t<h3>Error loading password</h3>\n\t\t<p>{{ error }}</p>\n\t\t<button class=\"btn-secondary\" (click)=\"onBackToList()\">Go Back</button>\n\t</div>\n\n\t<!-- Password Details -->\n\t<div *ngIf=\"!loading && !error && password\" class=\"content\">\n\t\t<!-- Password Card -->\n\t\t<div class=\"password-card\">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<div class=\"icon\">🔐</div>\n\t\t\t\t<div class=\"title-info\">\n\t\t\t\t\t<h3>{{ password.publicData?.website || \"Untitled Password\" }}</h3>\n\t\t\t\t\t<p class=\"subtitle\">{{ password.publicData?.type || \"password\" }}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t<button class=\"btn-primary\" (click)=\"onDecryptClick()\" [disabled]=\"decrypting\">\n\t\t\t\t\t\t{{ decrypting ? \"Decrypting...\" : \"Decrypt Password\" }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"card-content\">\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Username:</label>\n\t\t\t\t\t<span>{{ password.publicData?.username || \"No username\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Category:</label>\n\t\t\t\t\t<span>{{ password.publicData?.category || \"No category\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Created:</label>\n\t\t\t\t\t<span>{{ password.publicData?.timestamp ? (password.publicData.timestamp | date: \"medium\") : \"Unknown date\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Zelf Name:</label>\n\t\t\t\t\t<span>{{ password.publicData?.zelfName || \"No zelf name\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>IPFS Hash:</label>\n\t\t\t\t\t<span class=\"hash\">{{ password.id }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Decrypted Data (when available) -->\n\t\t<div *ngIf=\"decryptedData\" class=\"decrypted-data\">\n\t\t\t<h3>Decrypted Information</h3>\n\t\t\t<div class=\"data-card\">\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Website:</label>\n\t\t\t\t\t<span>{{ decryptedData.website || \"N/A\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Username:</label>\n\t\t\t\t\t<span>{{ decryptedData.username || \"N/A\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Password:</label>\n\t\t\t\t\t<span class=\"password-field\">\n\t\t\t\t\t\t{{ decryptedData.password || \"N/A\" }}\n\t\t\t\t\t\t<button class=\"btn-copy\" title=\"Copy password\" (click)=\"onCopyPassword()\">📋</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\" *ngIf=\"decryptedData.notes\">\n\t\t\t\t\t<label>Notes:</label>\n\t\t\t\t\t<span>{{ decryptedData.notes }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\" *ngIf=\"decryptedData.difficulty\">\n\t\t\t\t\t<label>Difficulty:</label>\n\t\t\t\t\t<span class=\"difficulty-badge\">{{ decryptedData.difficulty }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- Biometrics Modal -->\n\t<div *ngIf=\"showBiometrics\" class=\"biometrics-modal\">\n\t\t<div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\">\n\t\t\t\t<h3>Verify Your Identity</h3>\n\t\t\t\t<p>Please verify your face to decrypt this password</p>\n\t\t\t</div>\n\t\t\t<div class=\"modal-body\">\n\t\t\t\t<app-password-biometrics\n\t\t\t\t\t[isDecryptMode]=\"true\"\n\t\t\t\t\t(biometricsSuccess)=\"onBiometricsSuccess($event)\"\n\t\t\t\t\t(biometricsCancel)=\"onBiometricsCancel()\"\n\t\t\t\t>\n\t\t\t\t</app-password-biometrics>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["CommonModule","TranslocoModule","RouterModule","Subject","PasswordBiometricsComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PasswordDetailComponent_div_7_Template_button_click_7_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onBackToList","ɵɵadvance","ɵɵtextInterpolate","error","decryptedData","notes","difficulty","PasswordDetailComponent_div_8_div_40_Template_button_click_19_listener","_r4","onCopyPassword","ɵɵtemplate","PasswordDetailComponent_div_8_div_40_div_21_Template","PasswordDetailComponent_div_8_div_40_div_22_Template","website","username","ɵɵtextInterpolate1","password","ɵɵproperty","PasswordDetailComponent_div_8_Template_button_click_11_listener","_r3","onDecryptClick","PasswordDetailComponent_div_8_div_40_Template","publicData","type","decrypting","category","timestamp","ɵɵpipeBind2","zelfName","id","PasswordDetailComponent_div_9_Template_app_password_biometrics_biometricsSuccess_8_listener","$event","_r5","onBiometricsSuccess","PasswordDetailComponent_div_9_Template_app_password_biometrics_biometricsCancel_8_listener","onBiometricsCancel","PasswordDetailComponent","router","route","walletService","passwordDataService","loading","showBiometrics","destroy$","constructor","ngOnInit","loadPasswordData","ngOnDestroy","next","complete","_this","_asyncToGenerator","passwordData","getCurrentPassword","console","log","biometricData","decryptPassword","_this2","payload","zelfProof","faceBase64","undefined","response","retrievePassword","data","metadata","Error","clearCurrentPassword","navigate","onEditPassword","state","navigator","clipboard","writeText","then","catch","err","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","WalletService","i3","PasswordDataService","selectors","decls","vars","consts","template","PasswordDetailComponent_Template","rf","ctx","PasswordDetailComponent_Template_button_click_2_listener","PasswordDetailComponent_div_6_Template","PasswordDetailComponent_div_7_Template","PasswordDetailComponent_div_8_Template","PasswordDetailComponent_div_9_Template","i4","NgIf","DatePipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}