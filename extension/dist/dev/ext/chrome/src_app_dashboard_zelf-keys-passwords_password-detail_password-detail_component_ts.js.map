{"version":3,"file":"src_app_dashboard_zelf-keys-passwords_password-detail_password-detail_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAC+C;AACM;AACkB;AAC7B;AAGuC;;;;;;;;;ICChFK,4DAAA,aAA2C;IAC1CA,uDAAA,aAA2B;IAC3BA,4DAAA,QAAG;IAAAA,oDAAA,kCAA2B;IAC/BA,0DAD+B,EAAI,EAC7B;;;;;;IAILA,4DADD,aAAmD,cAChC;IAAAA,oDAAA,mBAAE;IAAAA,0DAAA,EAAM;IAC1BA,4DAAA,SAAI;IAAAA,oDAAA,6BAAsB;IAAAA,0DAAA,EAAK;IAC/BA,4DAAA,QAAG;IAAAA,oDAAA,GAAW;IAAAA,0DAAA,EAAI;IAClBA,4DAAA,iBAAuD;IAAzBA,wDAAA,mBAAAM,+DAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAG,YAAA,EAAc;IAAA,EAAC;IAACZ,oDAAA,cAAO;IAC/DA,0DAD+D,EAAS,EAClE;;;;IAFFA,uDAAA,GAAW;IAAXA,+DAAA,CAAAS,MAAA,CAAAM,KAAA,CAAW;;;;;IAiEXf,4DADD,cAAkD,YAC1C;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAQ;IACrBA,4DAAA,WAAM;IAAAA,oDAAA,GAAyB;IAChCA,0DADgC,EAAO,EACjC;;;;IADCA,uDAAA,GAAyB;IAAzBA,+DAAA,CAAAS,MAAA,CAAAO,aAAA,CAAAC,KAAA,CAAyB;;;;;IAG/BjB,4DADD,cAAuD,YAC/C;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAQ;IAC1BA,4DAAA,eAA+B;IAAAA,oDAAA,GAA8B;IAC9DA,0DAD8D,EAAO,EAC/D;;;;IAD0BA,uDAAA,GAA8B;IAA9BA,+DAAA,CAAAS,MAAA,CAAAO,aAAA,CAAAE,UAAA,CAA8B;;;;;;IAvB/DlB,4DADD,cAAkD,SAC7C;IAAAA,oDAAA,4BAAqB;IAAAA,0DAAA,EAAK;IAG5BA,4DAFF,cAAuB,cACA,YACd;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAQ;IACvBA,4DAAA,WAAM;IAAAA,oDAAA,GAAoC;IAC3CA,0DAD2C,EAAO,EAC5C;IAELA,4DADD,cAAsB,aACd;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAQ;IACxBA,4DAAA,YAAM;IAAAA,oDAAA,IAAqC;IAC5CA,0DAD4C,EAAO,EAC7C;IAELA,4DADD,eAAsB,aACd;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAQ;IACxBA,4DAAA,gBAA6B;IAC5BA,oDAAA,IACA;IAAAA,4DAAA,kBAA0E;IAA3BA,wDAAA,mBAAAmB,uEAAA;MAAAnB,2DAAA,CAAAoB,GAAA;MAAA,MAAAX,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAY,cAAA,EAAgB;IAAA,EAAC;IAACrB,oDAAA,oBAAE;IAE9EA,0DAF8E,EAAS,EAC/E,EACF;IAKNA,wDAJA,KAAAuB,oDAAA,kBAAkD,KAAAC,oDAAA,kBAIK;IAKzDxB,0DADC,EAAM,EACD;;;;IAtBGA,uDAAA,GAAoC;IAApCA,+DAAA,CAAAS,MAAA,CAAAO,aAAA,CAAAS,OAAA,UAAoC;IAIpCzB,uDAAA,GAAqC;IAArCA,+DAAA,CAAAS,MAAA,CAAAO,aAAA,CAAAU,QAAA,UAAqC;IAK1C1B,uDAAA,GACA;IADAA,gEAAA,MAAAS,MAAA,CAAAO,aAAA,CAAAY,QAAA,eACA;IAGqB5B,uDAAA,GAAyB;IAAzBA,wDAAA,SAAAS,MAAA,CAAAO,aAAA,CAAAC,KAAA,CAAyB;IAIzBjB,uDAAA,EAA8B;IAA9BA,wDAAA,SAAAS,MAAA,CAAAO,aAAA,CAAAE,UAAA,CAA8B;;;;;;IA3DrDlB,4DAJH,cAA4D,cAEhC,cACD,cACN;IAAAA,oDAAA,mBAAE;IAAAA,0DAAA,EAAM;IAEzBA,4DADD,cAAwB,SACnB;IAAAA,oDAAA,GAAyD;IAAAA,0DAAA,EAAK;IAClEA,4DAAA,YAAoB;IAAAA,oDAAA,GAA6C;IAClEA,0DADkE,EAAI,EAChE;IAELA,4DADD,eAAqB,kBAC2D;IAAnDA,wDAAA,mBAAA8B,gEAAA;MAAA9B,2DAAA,CAAA+B,GAAA;MAAA,MAAAtB,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAuB,cAAA,EAAgB;IAAA,EAAC;IACrDhC,oDAAA,IACD;IAEFA,0DAFE,EAAS,EACJ,EACD;IAIJA,4DAFF,eAA0B,eACH,aACd;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAQ;IACxBA,4DAAA,YAAM;IAAAA,oDAAA,IAAoD;IAC3DA,0DAD2D,EAAO,EAC5D;IAELA,4DADD,eAAsB,aACd;IAAAA,oDAAA,iBAAS;IAAAA,0DAAA,EAAQ;IACxBA,4DAAA,YAAM;IAAAA,oDAAA,IAAoD;IAC3DA,0DAD2D,EAAO,EAC5D;IAELA,4DADD,eAAsB,aACd;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAQ;IACvBA,4DAAA,YAAM;IAAAA,oDAAA,IAAwG;;IAC/GA,0DAD+G,EAAO,EAChH;IAELA,4DADD,eAAsB,aACd;IAAAA,oDAAA,kBAAU;IAAAA,0DAAA,EAAQ;IACzBA,4DAAA,YAAM;IAAAA,oDAAA,IAAqD;IAC5DA,0DAD4D,EAAO,EAC7D;IAELA,4DADD,eAAsB,aACd;IAAAA,oDAAA,kBAAU;IAAAA,0DAAA,EAAQ;IACzBA,4DAAA,gBAAmB;IAAAA,oDAAA,IAAiB;IAGvCA,0DAHuC,EAAO,EACtC,EACD,EACD;IAGNA,wDAAA,KAAAiC,6CAAA,mBAAkD;IA4BnDjC,0DAAA,EAAM;;;;IA/DEA,uDAAA,GAAyD;IAAzDA,+DAAA,EAAAS,MAAA,CAAAmB,QAAA,CAAAM,UAAA,kBAAAzB,MAAA,CAAAmB,QAAA,CAAAM,UAAA,CAAAT,OAAA,yBAAyD;IACzCzB,uDAAA,GAA6C;IAA7CA,+DAAA,EAAAS,MAAA,CAAAmB,QAAA,CAAAM,UAAA,kBAAAzB,MAAA,CAAAmB,QAAA,CAAAM,UAAA,CAAAC,IAAA,gBAA6C;IAGVnC,uDAAA,GAAuB;IAAvBA,wDAAA,aAAAS,MAAA,CAAA2B,UAAA,CAAuB;IAC7EpC,uDAAA,EACD;IADCA,gEAAA,MAAAS,MAAA,CAAA2B,UAAA,6CACD;IAOMpC,uDAAA,GAAoD;IAApDA,+DAAA,EAAAS,MAAA,CAAAmB,QAAA,CAAAM,UAAA,kBAAAzB,MAAA,CAAAmB,QAAA,CAAAM,UAAA,CAAAR,QAAA,mBAAoD;IAIpD1B,uDAAA,GAAoD;IAApDA,+DAAA,EAAAS,MAAA,CAAAmB,QAAA,CAAAM,UAAA,kBAAAzB,MAAA,CAAAmB,QAAA,CAAAM,UAAA,CAAAG,QAAA,mBAAoD;IAIpDrC,uDAAA,GAAwG;IAAxGA,+DAAA,EAAAS,MAAA,CAAAmB,QAAA,CAAAM,UAAA,kBAAAzB,MAAA,CAAAmB,QAAA,CAAAM,UAAA,CAAAI,SAAA,IAAAtC,yDAAA,SAAAS,MAAA,CAAAmB,QAAA,CAAAM,UAAA,CAAAI,SAAA,6BAAwG;IAIxGtC,uDAAA,GAAqD;IAArDA,+DAAA,EAAAS,MAAA,CAAAmB,QAAA,CAAAM,UAAA,kBAAAzB,MAAA,CAAAmB,QAAA,CAAAM,UAAA,CAAAM,QAAA,oBAAqD;IAIxCxC,uDAAA,GAAiB;IAAjBA,+DAAA,CAAAS,MAAA,CAAAmB,QAAA,CAAAa,EAAA,CAAiB;IAMjCzC,uDAAA,EAAmB;IAAnBA,wDAAA,SAAAS,MAAA,CAAAO,aAAA,CAAmB;;;;;;IAkCvBhB,4DAHH,cAAqD,cACzB,cACA,SACrB;IAAAA,oDAAA,2BAAoB;IAAAA,0DAAA,EAAK;IAC7BA,4DAAA,QAAG;IAAAA,oDAAA,uDAAgD;IACpDA,0DADoD,EAAI,EAClD;IAELA,4DADD,cAAwB,8BAMtB;IADAA,wDADA,+BAAA0C,wFAAAC,MAAA;MAAA3C,2DAAA,CAAA4C,GAAA;MAAA,MAAAnC,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAAqBS,MAAA,CAAAoC,mBAAA,CAAAF,MAAA,CAA2B;IAAA,EAAC,8BAAAG,uFAAA;MAAA9C,2DAAA,CAAA4C,GAAA;MAAA,MAAAnC,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAC7BS,MAAA,CAAAsC,kBAAA,EAAoB;IAAA,EAAC;IAK7C/C,0DAHG,EAAsB,EACjB,EACD,EACD;;;;IARFA,uDAAA,GAAsB;IACtBA,wDADA,uBAAsB,aAAAS,MAAA,CAAAmB,QAAA,CACD;;;ADtFpB,MAAOoB,uBAAuB;EAW1BC,MAAA;EACAC,KAAA;EACAC,aAAA;EACAC,mBAAA;EACAC,aAAA;EAdTzB,QAAQ,GAAQ,IAAI;EACpB0B,OAAO,GAAG,KAAK;EACfvC,KAAK,GAAkB,IAAI;EAC3BwC,cAAc,GAAG,KAAK;EACtBvC,aAAa,GAAQ,IAAI;EACzBoB,UAAU,GAAG,KAAK;EAEVoB,QAAQ,GAAG,IAAI1D,yCAAO,EAAQ;EAEtC2D,YACSR,MAAc,EACdC,KAAqB,EACrBC,aAA4B,EAC5BC,mBAAwC,EACxCC,aAA4B;IAJ5B,KAAAJ,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,aAAa,GAAbA,aAAa;EACnB;EAEGK,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,sMAAA;MACb;MACA,IAAID,KAAI,CAACN,aAAa,CAACQ,WAAW,EAAE;QACnC,MAAMF,KAAI,CAACN,aAAa,CAACS,gBAAgB,CAAC,4BAA4B,CAAC;MACxE;MAEAH,KAAI,CAACI,gBAAgB,EAAE;IAAC;EACzB;EAEAC,WAAWA,CAAA;IACV,IAAI,CAACR,QAAQ,CAACS,IAAI,EAAE;IACpB,IAAI,CAACT,QAAQ,CAACU,QAAQ,EAAE;EACzB;EAEMH,gBAAgBA,CAAA;IAAA,IAAAI,MAAA;IAAA,OAAAP,sMAAA;MACrBO,MAAI,CAACb,OAAO,GAAG,IAAI;MACnBa,MAAI,CAACpD,KAAK,GAAG,IAAI;MAEjB,IAAI;QACH;QACA,MAAMqD,YAAY,GAAGD,MAAI,CAACf,mBAAmB,CAACiB,kBAAkB,EAAE;QAElE,IAAI,CAACD,YAAY,EAAE;UAClBD,MAAI,CAACpD,KAAK,GAAG,yBAAyB;UACtC;QACD;QAEAoD,MAAI,CAACvC,QAAQ,GAAGwC,YAAY;MAC7B,CAAC,CAAC,OAAOrD,KAAK,EAAE;QACfoD,MAAI,CAACpD,KAAK,GAAG,8BAA8B;MAC5C,CAAC,SAAS;QACToD,MAAI,CAACb,OAAO,GAAG,KAAK;MACrB;IAAC;EACF;EAEAtB,cAAcA,CAAA;IACb,IAAI,CAACuB,cAAc,GAAG,IAAI;EAC3B;EAEAV,mBAAmBA,CAACyB,aAAkB;IACrC;IACA,IAAIA,aAAa,CAACC,aAAa,EAAE;MAChC,IAAI,CAACvD,aAAa,GAAG;QACpB,GAAGsD,aAAa,CAACC,aAAa,CAACC,QAAQ;QACvC;QACA/C,OAAO,EAAE6C,aAAa,CAACC,aAAa,CAACrC,UAAU,EAAET,OAAO;QACxDe,QAAQ,EAAE8B,aAAa,CAACC,aAAa,CAACrC,UAAU,EAAEM,QAAQ;QAC1DF,SAAS,EAAEgC,aAAa,CAACC,aAAa,CAACrC,UAAU,EAAEI,SAAS;QAC5DH,IAAI,EAAEmC,aAAa,CAACC,aAAa,CAACrC,UAAU,EAAEC,IAAI;QAClDE,QAAQ,EAAEiC,aAAa,CAACC,aAAa,CAACrC,UAAU,EAAEG,QAAQ;QAC1DnB,UAAU,EAAEoD,aAAa,CAACC,aAAa,CAACrD;OACxC;MACD,IAAI,CAACqC,cAAc,GAAG,KAAK;IAC5B,CAAC,MAAM;MACNkB,OAAO,CAAC1D,KAAK,CAAC,gDAAgD,CAAC;MAC/D,IAAI,CAACA,KAAK,GAAG,kCAAkC;IAChD;EACD;EAEAgC,kBAAkBA,CAAA;IACjB,IAAI,CAACQ,cAAc,GAAG,KAAK;EAC5B;EAEMmB,eAAeA,CAACJ,aAAkB;IAAA,IAAAK,MAAA;IAAA,OAAAf,sMAAA;MACvCe,MAAI,CAACvC,UAAU,GAAG,IAAI;MACtBuC,MAAI,CAAC5D,KAAK,GAAG,IAAI;MAEjB,IAAI;QACH,MAAM6D,OAAO,GAAG;UACfC,SAAS,EAAEF,MAAI,CAAC/C,QAAQ,CAACM,UAAU,CAAC2C,SAAS;UAC7CC,UAAU,EAAER,aAAa,CAACQ,UAAU;UACpClD,QAAQ,EAAE0C,aAAa,CAAC1C,QAAQ,IAAImD,SAAS,CAAE;SAC/C;QAED,MAAMC,QAAQ,SAASL,MAAI,CAACxB,aAAa,CAAC8B,gBAAgB,CAACL,OAAO,CAAC;QAEnE,IAAII,QAAQ,EAAEE,IAAI,EAAEV,QAAQ,EAAE;UAC7B;UACAG,MAAI,CAAC3D,aAAa,GAAG;YACpB,GAAGgE,QAAQ,CAACE,IAAI,CAACV,QAAQ;YACzB;YACA/C,OAAO,EAAEuD,QAAQ,CAACE,IAAI,CAAChD,UAAU,EAAET,OAAO;YAC1Ce,QAAQ,EAAEwC,QAAQ,CAACE,IAAI,CAAChD,UAAU,EAAEM,QAAQ;YAC5CF,SAAS,EAAE0C,QAAQ,CAACE,IAAI,CAAChD,UAAU,EAAEI,SAAS;YAC9CH,IAAI,EAAE6C,QAAQ,CAACE,IAAI,CAAChD,UAAU,EAAEC,IAAI;YACpCE,QAAQ,EAAE2C,QAAQ,CAACE,IAAI,CAAChD,UAAU,EAAEG,QAAQ;YAC5CnB,UAAU,EAAE8D,QAAQ,CAACE,IAAI,CAAChE;WAC1B;UACDyD,MAAI,CAACpB,cAAc,GAAG,KAAK;QAC5B,CAAC,MAAM;UACN,MAAM,IAAI4B,KAAK,CAAC,iCAAiC,CAAC;QACnD;MACD,CAAC,CAAC,OAAOpE,KAAK,EAAE;QACf0D,OAAO,CAAC1D,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD4D,MAAI,CAAC5D,KAAK,GAAG,+CAA+C;MAC7D,CAAC,SAAS;QACT4D,MAAI,CAACvC,UAAU,GAAG,KAAK;MACxB;IAAC;EACF;EAEAxB,YAAYA,CAAA;IACX;IACA,IAAI,CAACwC,mBAAmB,CAACgC,oBAAoB,EAAE;IAC/C,IAAI,CAACnC,MAAM,CAACoC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC;EAC/C;EAEAC,cAAcA,CAAA;IACb;IACA,IAAI,CAACrC,MAAM,CAACoC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,EAAE;MACnDE,KAAK,EAAE;QAAE3D,QAAQ,EAAE,IAAI,CAACA;MAAQ;KAChC,CAAC;EACH;EAEAP,cAAcA,CAAA;IACb,IAAI,IAAI,CAACL,aAAa,EAAEY,QAAQ,EAAE;MACjC4D,SAAS,CAACC,SAAS,CACjBC,SAAS,CAAC,IAAI,CAAC1E,aAAa,CAACY,QAAQ,CAAC,CACtC+D,IAAI,CAAC,MAAK;QACV;QACAlB,OAAO,CAACmB,GAAG,CAAC,8BAA8B,CAAC;MAC5C,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAI;QACdrB,OAAO,CAAC1D,KAAK,CAAC,0BAA0B,EAAE+E,GAAG,CAAC;MAC/C,CAAC,CAAC;IACJ;EACD;;qCA/IY9C,uBAAuB,EAAAhD,+DAAA,CAAAgG,mDAAA,GAAAhG,+DAAA,CAAAgG,2DAAA,GAAAhG,+DAAA,CAAAmG,0DAAA,GAAAnG,+DAAA,CAAAqG,gFAAA,GAAArG,+DAAA,CAAAuG,0DAAA;EAAA;;UAAvBvD,uBAAuB;IAAAyD,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCdlC/G,4DAHF,aAA6B,aAER,gBAC+B;QAAzBA,wDAAA,mBAAAiH,yDAAA;UAAA,OAASD,GAAA,CAAApG,YAAA,EAAc;QAAA,EAAC;QAACZ,oDAAA,+BAAmB;QAAAA,0DAAA,EAAS;QAC9EA,4DAAA,SAAI;QAAAA,oDAAA,uBAAgB;QACrBA,0DADqB,EAAK,EACpB;QAyFNA,wDAtFA,IAAAkH,sCAAA,iBAA2C,IAAAC,sCAAA,iBAMQ,IAAAC,sCAAA,mBAQS,IAAAC,sCAAA,iBAwEP;QAiBtDrH,0DAAA,EAAM;;;QAvGCA,uDAAA,GAAa;QAAbA,wDAAA,SAAAgH,GAAA,CAAA1D,OAAA,CAAa;QAMbtD,uDAAA,EAAuB;QAAvBA,wDAAA,SAAAgH,GAAA,CAAAjG,KAAA,KAAAiG,GAAA,CAAA1D,OAAA,CAAuB;QAQvBtD,uDAAA,EAAoC;QAApCA,wDAAA,UAAAgH,GAAA,CAAA1D,OAAA,KAAA0D,GAAA,CAAAjG,KAAA,IAAAiG,GAAA,CAAApF,QAAA,CAAoC;QAwEpC5B,uDAAA,EAAoB;QAApBA,wDAAA,SAAAgH,GAAA,CAAAzD,cAAA,CAAoB;;;mBDjFhB5D,yDAAY,EAAA2H,iDAAA,EAAAA,qDAAA,EAAE1H,+DAAe,EAAEC,0DAAY,EAAEE,sFAAuB;IAAA0H,MAAA;EAAA","sources":["./src/app/dashboard/zelf-keys-passwords/password-detail/password-detail.component.ts","./src/app/dashboard/zelf-keys-passwords/password-detail/password-detail.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router, ActivatedRoute } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { WalletService } from \"../../../wallet.service\";\nimport { PasswordDataService } from \"../../../services/password-data.service\";\nimport { DataBiometricsComponent } from \"../../shared/data-biometrics.component\";\nimport { ChromeService } from \"../../../chrome.service\";\n\n@Component({\n\tselector: \"app-password-detail\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule, DataBiometricsComponent],\n\ttemplateUrl: \"./password-detail.component.html\",\n\tstyleUrls: [\"./password-detail.component.scss\"],\n})\nexport class PasswordDetailComponent implements OnInit, OnDestroy {\n\tpassword: any = null;\n\tloading = false;\n\terror: string | null = null;\n\tshowBiometrics = false;\n\tdecryptedData: any = null;\n\tdecrypting = false;\n\n\tprivate destroy$ = new Subject<void>();\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate walletService: WalletService,\n\t\tprivate passwordDataService: PasswordDataService,\n\t\tprivate chromeService: ChromeService\n\t) {}\n\n\tasync ngOnInit(): Promise<void> {\n\t\t// Ensure extension is in full screen mode for better security when viewing password details\n\t\tif (this.chromeService.isExtension) {\n\t\t\tawait this.chromeService.ensureFullScreen(\"dashboard/passwords/detail\");\n\t\t}\n\n\t\tthis.loadPasswordData();\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.destroy$.next();\n\t\tthis.destroy$.complete();\n\t}\n\n\tasync loadPasswordData(): Promise<void> {\n\t\tthis.loading = true;\n\t\tthis.error = null;\n\n\t\ttry {\n\t\t\t// Get password data from the service\n\t\t\tconst passwordData = this.passwordDataService.getCurrentPassword();\n\n\t\t\tif (!passwordData) {\n\t\t\t\tthis.error = \"Password data not found\";\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.password = passwordData;\n\t\t} catch (error) {\n\t\t\tthis.error = \"Failed to load password data\";\n\t\t} finally {\n\t\t\tthis.loading = false;\n\t\t}\n\t}\n\n\tonDecryptClick(): void {\n\t\tthis.showBiometrics = true;\n\t}\n\n\tonBiometricsSuccess(biometricData: any): void {\n\t\t// Use the data that was already retrieved from the biometrics component\n\t\tif (biometricData.retrievedData) {\n\t\t\tthis.decryptedData = {\n\t\t\t\t...biometricData.retrievedData.metadata,\n\t\t\t\t// Also include some public data for display\n\t\t\t\twebsite: biometricData.retrievedData.publicData?.website,\n\t\t\t\tzelfName: biometricData.retrievedData.publicData?.zelfName,\n\t\t\t\ttimestamp: biometricData.retrievedData.publicData?.timestamp,\n\t\t\t\ttype: biometricData.retrievedData.publicData?.type,\n\t\t\t\tcategory: biometricData.retrievedData.publicData?.category,\n\t\t\t\tdifficulty: biometricData.retrievedData.difficulty,\n\t\t\t};\n\t\t\tthis.showBiometrics = false;\n\t\t} else {\n\t\t\tconsole.error(\"No retrieved data found in biometrics response\");\n\t\t\tthis.error = \"Failed to retrieve password data\";\n\t\t}\n\t}\n\n\tonBiometricsCancel(): void {\n\t\tthis.showBiometrics = false;\n\t}\n\n\tasync decryptPassword(biometricData: any): Promise<void> {\n\t\tthis.decrypting = true;\n\t\tthis.error = null;\n\n\t\ttry {\n\t\t\tconst payload = {\n\t\t\t\tzelfProof: this.password.publicData.zelfProof,\n\t\t\t\tfaceBase64: biometricData.faceBase64,\n\t\t\t\tpassword: biometricData.password || undefined, // Optional\n\t\t\t};\n\n\t\t\tconst response = await this.walletService.retrievePassword(payload);\n\n\t\t\tif (response?.data?.metadata) {\n\t\t\t\t// The decrypted data is in response.data.metadata\n\t\t\t\tthis.decryptedData = {\n\t\t\t\t\t...response.data.metadata,\n\t\t\t\t\t// Also include some public data for display\n\t\t\t\t\twebsite: response.data.publicData?.website,\n\t\t\t\t\tzelfName: response.data.publicData?.zelfName,\n\t\t\t\t\ttimestamp: response.data.publicData?.timestamp,\n\t\t\t\t\ttype: response.data.publicData?.type,\n\t\t\t\t\tcategory: response.data.publicData?.category,\n\t\t\t\t\tdifficulty: response.data.difficulty,\n\t\t\t\t};\n\t\t\t\tthis.showBiometrics = false;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Failed to decrypt password data\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error decrypting password:\", error);\n\t\t\tthis.error = \"Failed to decrypt password. Please try again.\";\n\t\t} finally {\n\t\t\tthis.decrypting = false;\n\t\t}\n\t}\n\n\tonBackToList(): void {\n\t\t// Clear the password data from service\n\t\tthis.passwordDataService.clearCurrentPassword();\n\t\tthis.router.navigate([\"/dashboard/passwords\"]);\n\t}\n\n\tonEditPassword(): void {\n\t\t// Navigate to edit password with the current data\n\t\tthis.router.navigate([\"/dashboard/passwords/edit\"], {\n\t\t\tstate: { password: this.password },\n\t\t});\n\t}\n\n\tonCopyPassword(): void {\n\t\tif (this.decryptedData?.password) {\n\t\t\tnavigator.clipboard\n\t\t\t\t.writeText(this.decryptedData.password)\n\t\t\t\t.then(() => {\n\t\t\t\t\t// Could add a toast notification here\n\t\t\t\t\tconsole.log(\"Password copied to clipboard\");\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.error(\"Failed to copy password:\", err);\n\t\t\t\t});\n\t\t}\n\t}\n}\n","<div class=\"password-detail\">\n\t<!-- Header -->\n\t<div class=\"header\">\n\t\t<button class=\"btn-back\" (click)=\"onBackToList()\">← Back to Passwords</button>\n\t\t<h2>Password Details</h2>\n\t</div>\n\n\t<!-- Loading State -->\n\t<div *ngIf=\"loading\" class=\"loading-state\">\n\t\t<div class=\"spinner\"></div>\n\t\t<p>Loading password details...</p>\n\t</div>\n\n\t<!-- Error State -->\n\t<div *ngIf=\"error && !loading\" class=\"error-state\">\n\t\t<div class=\"icon\">⚠️</div>\n\t\t<h3>Error loading password</h3>\n\t\t<p>{{ error }}</p>\n\t\t<button class=\"btn-secondary\" (click)=\"onBackToList()\">Go Back</button>\n\t</div>\n\n\t<!-- Password Details -->\n\t<div *ngIf=\"!loading && !error && password\" class=\"content\">\n\t\t<!-- Password Card -->\n\t\t<div class=\"password-card\">\n\t\t\t<div class=\"card-header\">\n\t\t\t\t<div class=\"icon\">🔐</div>\n\t\t\t\t<div class=\"title-info\">\n\t\t\t\t\t<h3>{{ password.publicData?.website || \"Untitled Password\" }}</h3>\n\t\t\t\t\t<p class=\"subtitle\">{{ password.publicData?.type || \"password\" }}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"actions\">\n\t\t\t\t\t<button class=\"btn-primary\" (click)=\"onDecryptClick()\" [disabled]=\"decrypting\">\n\t\t\t\t\t\t{{ decrypting ? \"Decrypting...\" : \"Decrypt Password\" }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"card-content\">\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Username:</label>\n\t\t\t\t\t<span>{{ password.publicData?.username || \"No username\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Category:</label>\n\t\t\t\t\t<span>{{ password.publicData?.category || \"No category\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Created:</label>\n\t\t\t\t\t<span>{{ password.publicData?.timestamp ? (password.publicData.timestamp | date: \"medium\") : \"Unknown date\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Zelf Name:</label>\n\t\t\t\t\t<span>{{ password.publicData?.zelfName || \"No zelf name\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>IPFS Hash:</label>\n\t\t\t\t\t<span class=\"hash\">{{ password.id }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Decrypted Data (when available) -->\n\t\t<div *ngIf=\"decryptedData\" class=\"decrypted-data\">\n\t\t\t<h3>Decrypted Information</h3>\n\t\t\t<div class=\"data-card\">\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Website:</label>\n\t\t\t\t\t<span>{{ decryptedData.website || \"N/A\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Username:</label>\n\t\t\t\t\t<span>{{ decryptedData.username || \"N/A\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\">\n\t\t\t\t\t<label>Password:</label>\n\t\t\t\t\t<span class=\"password-field\">\n\t\t\t\t\t\t{{ decryptedData.password || \"N/A\" }}\n\t\t\t\t\t\t<button class=\"btn-copy\" title=\"Copy password\" (click)=\"onCopyPassword()\">📋</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\" *ngIf=\"decryptedData.notes\">\n\t\t\t\t\t<label>Notes:</label>\n\t\t\t\t\t<span>{{ decryptedData.notes }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-row\" *ngIf=\"decryptedData.difficulty\">\n\t\t\t\t\t<label>Difficulty:</label>\n\t\t\t\t\t<span class=\"difficulty-badge\">{{ decryptedData.difficulty }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<!-- Biometrics Modal -->\n\t<div *ngIf=\"showBiometrics\" class=\"biometrics-modal\">\n\t\t<div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\">\n\t\t\t\t<h3>Verify Your Identity</h3>\n\t\t\t\t<p>Please verify your face to decrypt this password</p>\n\t\t\t</div>\n\t\t\t<div class=\"modal-body\">\n\t\t\t\t<app-data-biometrics\n\t\t\t\t\t[isDecryptMode]=\"true\"\n\t\t\t\t\t[itemData]=\"password\"\n\t\t\t\t\t(biometricsSuccess)=\"onBiometricsSuccess($event)\"\n\t\t\t\t\t(biometricsCancel)=\"onBiometricsCancel()\"\n\t\t\t\t>\n\t\t\t\t</app-data-biometrics>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["CommonModule","TranslocoModule","RouterModule","Subject","DataBiometricsComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PasswordDetailComponent_div_7_Template_button_click_7_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onBackToList","ɵɵadvance","ɵɵtextInterpolate","error","decryptedData","notes","difficulty","PasswordDetailComponent_div_8_div_40_Template_button_click_19_listener","_r4","onCopyPassword","ɵɵtemplate","PasswordDetailComponent_div_8_div_40_div_21_Template","PasswordDetailComponent_div_8_div_40_div_22_Template","website","username","ɵɵtextInterpolate1","password","ɵɵproperty","PasswordDetailComponent_div_8_Template_button_click_11_listener","_r3","onDecryptClick","PasswordDetailComponent_div_8_div_40_Template","publicData","type","decrypting","category","timestamp","ɵɵpipeBind2","zelfName","id","PasswordDetailComponent_div_9_Template_app_data_biometrics_biometricsSuccess_8_listener","$event","_r5","onBiometricsSuccess","PasswordDetailComponent_div_9_Template_app_data_biometrics_biometricsCancel_8_listener","onBiometricsCancel","PasswordDetailComponent","router","route","walletService","passwordDataService","chromeService","loading","showBiometrics","destroy$","constructor","ngOnInit","_this","_asyncToGenerator","isExtension","ensureFullScreen","loadPasswordData","ngOnDestroy","next","complete","_this2","passwordData","getCurrentPassword","biometricData","retrievedData","metadata","console","decryptPassword","_this3","payload","zelfProof","faceBase64","undefined","response","retrievePassword","data","Error","clearCurrentPassword","navigate","onEditPassword","state","navigator","clipboard","writeText","then","log","catch","err","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","WalletService","i3","PasswordDataService","i4","ChromeService","selectors","decls","vars","consts","template","PasswordDetailComponent_Template","rf","ctx","PasswordDetailComponent_Template_button_click_2_listener","PasswordDetailComponent_div_6_Template","PasswordDetailComponent_div_7_Template","PasswordDetailComponent_div_8_Template","PasswordDetailComponent_div_9_Template","i5","NgIf","DatePipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}