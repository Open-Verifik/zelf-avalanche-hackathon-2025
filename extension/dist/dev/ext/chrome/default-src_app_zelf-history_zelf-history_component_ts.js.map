{"version":3,"file":"default-src_app_zelf-history_zelf-history_component_ts.js","mappings":"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","sources":["./src/app/pipes/address-mask.pipe.ts","./src/app/zelf-history/zelf-history.component.ts","./src/app/zelf-history/zelf-history.component.html"],"sourcesContent":["import { Pipe, type PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"addressMask\",\n})\nexport class AddressMaskPipe implements PipeTransform {\n    transform(value?: string): unknown {\n        if (typeof value !== \"string\" || !value || !value.trim()) return \"\";\n\n        const firstPart = value.slice(0, 8);\n        const lastPart = value.slice(-8);\n\n        return `${firstPart}...${lastPart}`;\n    }\n}\n","import { CurrencyPipe, DatePipe, DecimalPipe, NgClass, NgFor, NgIf, NgTemplateOutlet } from \"@angular/common\";\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatRippleModule } from \"@angular/material/core\";\nimport { Router } from \"@angular/router\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { AddressMaskPipe } from \"app/pipes/address-mask.pipe\";\nimport { BlockchainTransactionsService } from \"app/services/blockchain-transactions.service\";\nimport { Transaction } from \"app/wallet\";\nimport { WalletService } from \"app/wallet.service\";\nimport { ZelfLoaderComponent } from \"app/zelf-loader/zelf-loader.component\";\n\ntype TransactionType = \"send\" | \"receive\" | \"swap\" | \"approve\" | \"\";\n\ntype Signee = {\n    address: string;\n    amount: number;\n    image: string;\n    symbol: string;\n    token: string;\n};\n\ntype ProcessedTransaction = {\n    fiatAmount: number;\n    hash: string;\n    network: string;\n    from: Signee;\n    to: Signee;\n    type: TransactionType;\n};\n\n@Component({\n    imports: [\n        AddressMaskPipe,\n        CurrencyPipe,\n        DatePipe,\n        DecimalPipe,\n        MatRippleModule,\n        MatButtonModule,\n        NgClass,\n        NgFor,\n        NgIf,\n        NgTemplateOutlet,\n        TranslocoModule,\n        ZelfLoaderComponent,\n    ],\n    selector: \"zelf-history\",\n    styleUrls: [\"./zelf-history.component.scss\"],\n    templateUrl: \"./zelf-history.component.html\",\n})\nexport class ZelfHistoryComponent implements OnInit {\n    @Input(\"token\") token?: string = \"\";\n\n    private currentPage = 0;\n\n    public history: Record<string, ProcessedTransaction[]> | null = null;\n    public loading = false;\n    public noMoreTransactions = false;\n    public transactionHashMap: Record<string, boolean> = {};\n\n    constructor(\n        private _blockchainTransactions: BlockchainTransactionsService,\n        private _router: Router,\n        private _walletService: WalletService\n    ) {}\n\n    async ngOnInit(): Promise<void> {\n        this._loadFirstTransactions();\n    }\n\n    get orderedHistory(): { date: string; transactions: ProcessedTransaction[] }[] {\n        if (!this.history) return [];\n\n        return Object.entries(this.history)\n            .map(([date, transactions]) => ({\n                date,\n                transactions,\n            }))\n            .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    }\n\n    private async _loadFirstTransactions(): Promise<void> {\n        this.loading = true;\n\n        const wallet = await this._walletService.getCurrentWallet();\n\n        (this.token\n            ? this._blockchainTransactions.getAddressDataByToken(wallet, this.token)\n            : this._blockchainTransactions.getAddressData(wallet)\n        ).subscribe({\n            next: async (response) => {\n                if (!response) {\n                    this.currentPage = 0;\n                    this.loading = false;\n                    this.noMoreTransactions = true;\n\n                    return;\n                }\n\n                await this._processTransactions(response.transactions);\n\n                this.loading = false;\n            },\n            error: (error) => {\n                console.error(\"Error loading transactions:\", error);\n            },\n        });\n    }\n\n    private async _processTransactions(transactions: Transaction[], isPagination = false): Promise<void> {\n        if (!transactions || !transactions.length) return;\n\n        transactions.sort(\n            (a, b) =>\n                new Date(typeof b.date === \"string\" ? b.date : b.date * 1000).getTime() -\n                new Date(typeof a.date === \"string\" ? a.date : a.date * 1000).getTime()\n        );\n\n        const groupedByDate: Record<string, any[]> = isPagination ? { ...this.history } : {};\n        const wallet = await this._walletService.getCurrentWallet();\n\n        transactions.forEach((tx) => {\n            if (this.transactionHashMap[tx.hash] || !wallet) return;\n\n            if (!tx.from || !tx.to || !tx.date) return;\n            if (this.token && tx.asset !== this.token) return;\n\n            const dateStr = new Date(tx.date).toLocaleDateString(\"en-US\");\n\n            if (!groupedByDate[dateStr]) groupedByDate[dateStr] = [];\n\n            const type = tx.method?.toLowerCase().includes(\"swap\") ? \"swap\" : tx.traffic === \"OUT\" ? \"send\" : \"receive\";\n            const tokenImage = tx.image || this._walletService.getAssetImage(tx.asset);\n\n            const processedTx = {\n                fiatAmount: tx.fiatAmount,\n                hash: tx.hash,\n                network: tx.network,\n                type,\n                from: {\n                    address: Array.isArray(tx.from) ? tx.from[0] : tx.from,\n                    amount: tx.amount,\n                    symbol: tx.asset,\n                    image: tokenImage,\n                    token: tx.asset,\n                },\n                to: {\n                    address: Array.isArray(tx.to) ? tx.to[0] : tx.to,\n                    amount: tx.amount,\n                    symbol: tx.asset,\n                    image: tokenImage,\n                    token: tx.asset,\n                },\n            };\n\n            groupedByDate[dateStr].push(processedTx);\n\n            this.transactionHashMap[tx.hash] = true;\n        });\n\n        this.history = groupedByDate;\n    }\n\n    async loadMoreTransactions(): Promise<void> {\n        this.loading = true;\n        this.currentPage += 1;\n\n        const wallet = await this._walletService.getCurrentWallet();\n\n        this._blockchainTransactions.getTransactionHistory(wallet, { page: this.currentPage }).subscribe({\n            next: async (response) => {\n                if (!response) {\n                    this.noMoreTransactions = true;\n                    this.currentPage = 0;\n                    this.loading = false;\n\n                    return;\n                }\n\n                await this._processTransactions(response, true);\n\n                this.loading = false;\n            },\n            error: (error) => {\n                console.error(\"Error loading transactions:\", error);\n            },\n        });\n    }\n\n    async navigateToTransaction(transaction: ProcessedTransaction): Promise<void> {\n        this._router.navigate([\"/transaction\", transaction.hash], { queryParams: { symbol: transaction.from.symbol, network: transaction.network } });\n    }\n}\n","<div class=\"zelf-history\" *transloco=\"let t\">\n    <div class=\"zelf-history__no-results\" *ngIf=\"!history && !loading\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"150px\" viewBox=\"0 -960 960 960\" width=\"150px\" fill=\"#e3e3e3\">\n            <path\n                d=\"M675-160H140q-24 0-42-18t-18-42v-520q0-24 18-42t42-18h680q24 0 42 18t18 42v520q0 24-18 42t-42 18h-60.36L557-367q-21 18-45 26t-51 8q-70 0-120.5-49T290-502.5q0-71.5 50.5-120T461-671q70 0 118.5 48.5T628-502q0 25.2-7.5 47.6Q613-432 599-410l186 190h35v-520H140v520h475l60 60ZM461-393q46 0 76.5-31t30.5-78.5q0-47.5-30.5-78T461-611q-46 0-78.5 30.5t-32.5 78q0 47.5 32.5 78.5t78.5 31ZM140-220v-520 520Z\"\n            />\n        </svg>\n\n        <p class=\"zelf-history__no-results-text\">{{ t(\"activity.no_history_found\") }}</p>\n    </div>\n\n    <ng-container *ngIf=\"history\">\n        <ng-container *ngFor=\"let data of orderedHistory\">\n            <p class=\"zelf-history__date\">{{ data.date | date: \"dd MMM, yyyy\" }}</p>\n\n            <ng-container *ngFor=\"let transaction of data.transactions\">\n                <div (click)=\"navigateToTransaction(transaction)\" [matRippleColor]=\"'rgba(0, 0, 0, 0.1)'\" class=\"zelf-history__transaction\" matRipple>\n                    <div class=\"zelf-history__left\">\n                        <img\n                            class=\"zelf-history__image\"\n                            [src]=\"transaction.to.image\"\n                            [alt]=\"transaction.to.symbol\"\n                            *ngIf=\"transaction.type === 'receive' || transaction.type === 'approve'\"\n                        />\n\n                        <img\n                            class=\"zelf-history__image\"\n                            [src]=\"transaction.from.image\"\n                            [alt]=\"transaction.from.symbol\"\n                            *ngIf=\"transaction.type === 'send'\"\n                        />\n\n                        <img\n                            class=\"zelf-history__image\"\n                            [src]=\"transaction.to.image\"\n                            [alt]=\"transaction.to.symbol\"\n                            *ngIf=\"transaction.type === 'swap' && !transaction.from.image\"\n                        />\n\n                        <div class=\"zelf-history__swap-images\" *ngIf=\"transaction.type === 'swap' && transaction.from.image\">\n                            <img class=\"zelf-history__swap-image-a\" [src]=\"transaction.from.image\" [alt]=\"transaction.from.symbol\" />\n                            <img class=\"zelf-history__swap-image-b\" [src]=\"transaction.to.image\" [alt]=\"transaction.to.symbol\" />\n                        </div>\n\n                        <div class=\"zelf-history__col\">\n                            <div class=\"zelf-history__icon-container\">\n                                <div class=\"zelf-history__icon\" [ngClass]=\"'zelf-history__icon--' + transaction.type\">\n                                    <ng-container *ngIf=\"transaction.type === 'receive'\">\n                                        <ng-container *ngTemplateOutlet=\"incomingIcon\"></ng-container>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"transaction.type === 'send'\">\n                                        <ng-container *ngTemplateOutlet=\"outgoingIcon\"></ng-container>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"transaction.type === 'swap'\">\n                                        <ng-container *ngTemplateOutlet=\"swapIcon\"></ng-container>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"transaction.type === 'approve'\">\n                                        <ng-container *ngTemplateOutlet=\"checkIcon\"></ng-container>\n                                    </ng-container>\n                                </div>\n\n                                <p class=\"zelf-history__type\">{{ t(\"activity.\" + transaction.type) }}</p>\n                            </div>\n\n                            <p class=\"zelf-history__type-subtitle\" *ngIf=\"transaction.type === 'swap'\">{{ transaction.from.token }}</p>\n                            <p class=\"zelf-history__type-subtitle\" *ngIf=\"transaction.type === 'approve'\">{{ transaction.to.token }}</p>\n\n                            <p class=\"zelf-history__type-subtitle\" *ngIf=\"transaction.type !== 'approve'\">\n                                <ng-container *ngIf=\"transaction.type === 'receive'\">{{ transaction.from.address | addressMask }}</ng-container>\n                                <ng-container *ngIf=\"transaction.type === 'send'\">{{ transaction.to.address | addressMask }}</ng-container>\n                                <ng-container *ngIf=\"transaction.type === 'swap'\">{{ transaction.to.address | addressMask }}</ng-container>\n                            </p>\n                        </div>\n                    </div>\n\n                    <div class=\"zelf-history__right\">\n                        <ng-container *ngIf=\"transaction.type === 'receive'\">\n                            <p class=\"zelf-history__received\">+ {{ transaction.from.amount | number: \"1.1-18\" }} {{ transaction.from.symbol }}</p>\n                            <p class=\"zelf-history__received-fiat\">\n                                {{ transaction.fiatAmount | currency: \"USD\" : \"symbol\" : \"1.2-2\" }}\n                            </p>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"transaction.type === 'send'\">\n                            <p class=\"zelf-history__send\">+ {{ transaction.to.amount | number: \"1.1-18\" }} {{ transaction.to.symbol }}</p>\n                            <p class=\"zelf-history__send-fiat\">\n                                {{ transaction.fiatAmount | currency: \"USD\" : \"symbol\" : \"1.2-2\" }}\n                            </p>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"transaction.type === 'swap'\">\n                            <p class=\"zelf-history__send\">+ {{ transaction.to.amount | number: \"1.1-18\" }} {{ transaction.to.symbol }}</p>\n                            <p class=\"zelf-history__send-fiat\">- {{ transaction.from.amount | number: \"1.1-18\" }} {{ transaction.from.symbol }}</p>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"transaction.type === 'approve'\">\n                            <p class=\"zelf-history__approve-text\">{{ t(\"\") }}</p>\n                        </ng-container>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n\n        <button\n            [disabled]=\"loading || noMoreTransactions\"\n            (click)=\"loadMoreTransactions()\"\n            class=\"zelf-button zelf-button--wide zelf-button--black zelf-history__load-more\"\n        >\n            {{ t(\"common.load_more\") }}\n        </button>\n    </ng-container>\n</div>\n\n<zelf-loader *ngIf=\"loading\"></zelf-loader>\n\n<ng-template #incomingIcon>\n    <svg width=\"8\" height=\"8\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.0075 1.00148C14.6175 0.611484 13.9875 0.611484 13.5975 1.00148L2.70752 11.8815V6.29148C2.70752 5.74148 2.25752 5.29148 1.70752 5.29148C1.15752 5.29148 0.70752 5.74148 0.70752 6.29148V14.2915C0.70752 14.8415 1.15752 15.2915 1.70752 15.2915H9.70752C10.2575 15.2915 10.7075 14.8415 10.7075 14.2915C10.7075 13.7415 10.2575 13.2915 9.70752 13.2915H4.11752L15.0075 2.40148C15.3875 2.02148 15.3875 1.38148 15.0075 1.00148Z\"\n        />\n    </svg>\n</ng-template>\n\n<ng-template #outgoingIcon>\n    <svg width=\"8\" height=\"8\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M5.29636 1.70361C5.29636 2.26361 5.74636 2.70361 6.29636 2.70361H11.8864L0.996357 13.5936C0.606357 13.9836 0.606357 14.6136 0.996357 15.0036C1.38636 15.3936 2.01636 15.3936 2.40636 15.0036L13.2964 4.11361V9.70361C13.2964 10.2536 13.7464 10.7036 14.2964 10.7036C14.8464 10.7036 15.2964 10.2536 15.2964 9.70361V1.70361C15.2964 1.15361 14.8464 0.703613 14.2964 0.703613H6.29636C5.74636 0.703613 5.29636 1.15361 5.29636 1.70361Z\"\n        />\n    </svg>\n</ng-template>\n\n<ng-template #checkIcon>\n    <svg width=\"8\" height=\"6\" viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M5.79506 10.8754L2.32506 7.40539C1.93506 7.01539 1.30506 7.01539 0.915059 7.40539C0.525059 7.79539 0.525059 8.42539 0.915059 8.81539L5.09506 12.9954C5.48506 13.3854 6.11506 13.3854 6.50506 12.9954L17.0851 2.41539C17.4751 2.02539 17.4751 1.39539 17.0851 1.00539C16.6951 0.615391 16.0651 0.615391 15.6751 1.00539L5.79506 10.8754Z\"\n        />\n    </svg>\n</ng-template>\n\n<ng-template #swapIcon>\n    <svg width=\"8\" height=\"6\" viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M3.13563 6.85496L0.355635 9.64496C0.165635 9.84496 0.165635 10.155 0.355635 10.355L3.13563 13.145C3.44563 13.465 3.98563 13.235 3.98563 12.795V10.995H9.99564C10.5456 10.995 10.9956 10.545 10.9956 9.99496C10.9956 9.44496 10.5456 8.99496 9.99564 8.99496H3.98563V7.20496C3.98563 6.75496 3.44563 6.53496 3.13563 6.85496ZM17.6456 3.64496L14.8656 0.854961C14.5556 0.534961 14.0156 0.764961 14.0156 1.20496V2.99496H7.99564C7.44563 2.99496 6.99564 3.44496 6.99564 3.99496C6.99564 4.54496 7.44563 4.99496 7.99564 4.99496H14.0056V6.78496C14.0056 7.23496 14.5456 7.45496 14.8556 7.13496L17.6356 4.34496C17.8356 4.15496 17.8356 3.83496 17.6456 3.64496Z\"\n        />\n    </svg>\n</ng-template>\n"],"names":["AddressMaskPipe","transform","value","trim","firstPart","slice","lastPart","pure","CurrencyPipe","DatePipe","DecimalPipe","NgClass","NgFor","NgIf","NgTemplateOutlet","MatButtonModule","MatRippleModule","TranslocoModule","ZelfLoaderComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","t_r1","ɵɵproperty","transaction_r4","to","image","ɵɵsanitizeUrl","symbol","from","ɵɵelementContainer","ɵɵelementContainerStart","ɵɵtemplate","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_10_ng_container_1_Template","incomingIcon_r6","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_11_ng_container_1_Template","outgoingIcon_r7","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_12_ng_container_1_Template","swapIcon_r8","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_13_ng_container_1_Template","checkIcon_r9","token","ɵɵpipeBind1","address","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_p_18_ng_container_1_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_p_18_ng_container_2_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_p_18_ng_container_3_Template","type","ɵɵtextInterpolate2","ɵɵpipeBind2","amount","ɵɵtextInterpolate1","ɵɵpipeBind4","fiatAmount","ɵɵlistener","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_Template_div_click_1_listener","ɵɵrestoreView","_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","navigateToTransaction","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_img_3_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_img_4_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_img_5_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_div_6_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_10_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_11_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_12_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_13_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_p_16_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_p_17_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_p_18_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_20_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_21_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_22_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_ng_container_23_Template","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_ng_container_4_Template","data_r10","date","transactions","ZelfHistoryComponent_div_0_ng_container_2_ng_container_1_Template","ZelfHistoryComponent_div_0_ng_container_2_Template_button_click_2_listener","_r2","loadMoreTransactions","orderedHistory","loading","noMoreTransactions","ZelfHistoryComponent_div_0_div_1_Template","ZelfHistoryComponent_div_0_ng_container_2_Template","history","ZelfHistoryComponent","_blockchainTransactions","_router","_walletService","currentPage","transactionHashMap","constructor","ngOnInit","_this","_asyncToGenerator","_loadFirstTransactions","Object","entries","map","sort","a","b","Date","getTime","_this2","wallet","getCurrentWallet","getAddressDataByToken","getAddressData","subscribe","next","_ref","response","_processTransactions","_x","apply","arguments","error","console","_x2","_this3","isPagination","length","groupedByDate","forEach","tx","hash","asset","dateStr","toLocaleDateString","method","toLowerCase","includes","traffic","tokenImage","getAssetImage","processedTx","network","Array","isArray","push","_this4","getTransactionHistory","page","_ref2","_x3","transaction","_this5","navigate","queryParams","ɵɵdirectiveInject","i1","BlockchainTransactionsService","i2","Router","i3","WalletService","selectors","inputs","decls","vars","consts","template","ZelfHistoryComponent_Template","rf","ctx","ZelfHistoryComponent_div_0_Template","ZelfHistoryComponent_zelf_loader_1_Template","ZelfHistoryComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","ZelfHistoryComponent_ng_template_4_Template","ZelfHistoryComponent_ng_template_6_Template","ZelfHistoryComponent_ng_template_8_Template","i4","MatRipple","i5","TranslocoDirective","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}