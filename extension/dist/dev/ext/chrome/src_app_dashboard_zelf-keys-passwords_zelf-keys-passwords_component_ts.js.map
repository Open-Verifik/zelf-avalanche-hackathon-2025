{"version":3,"file":"src_app_dashboard_zelf-keys-passwords_zelf-keys-passwords_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAC+C;AACM;AACE;AACb;AAIwB;;;;;;;;;ICAhEK,4DAAA,aAA2C;IAC1CA,uDAAA,aAA2B;IAC3BA,4DAAA,QAAG;IAAAA,oDAAA,gCAAyB;IAC7BA,0DAD6B,EAAI,EAC3B;;;;;;IAILA,4DADD,aAAmD,cAChC;IAAAA,oDAAA,mBAAE;IAAAA,0DAAA,EAAM;IAC1BA,4DAAA,SAAI;IAAAA,oDAAA,8BAAuB;IAAAA,0DAAA,EAAK;IAChCA,4DAAA,QAAG;IAAAA,oDAAA,GAAW;IAAAA,0DAAA,EAAI;IAClBA,4DAAA,iBAAoD;IAAtBA,wDAAA,mBAAAM,kEAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAG,SAAA,EAAW;IAAA,EAAC;IAACZ,oDAAA,gBAAS;IAC9DA,0DAD8D,EAAS,EACjE;;;;IAFFA,uDAAA,GAAW;IAAXA,+DAAA,CAAAS,MAAA,CAAAM,KAAA,CAAW;;;;;;IAMdf,4DADD,cAAoF,cACjE;IAAAA,oDAAA,mBAAE;IAAAA,0DAAA,EAAM;IAC1BA,4DAAA,SAAI;IAAAA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAK;IACzBA,4DAAA,QAAG;IAAAA,oDAAA,4EAAqE;IAAAA,0DAAA,EAAI;IAC5EA,4DAAA,iBAAsD;IAA1BA,wDAAA,mBAAAgB,kEAAA;MAAAhB,2DAAA,CAAAiB,GAAA;MAAA,MAAAR,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAS,aAAA,EAAe;IAAA,EAAC;IAAClB,oDAAA,mBAAY;IACnEA,0DADmE,EAAS,EACtE;;;;;;IAUJA,4DAAA,wBAOC;IADAA,wDAFA,uBAAAmB,8FAAAC,MAAA;MAAApB,2DAAA,CAAAqB,GAAA;MAAA,MAAAZ,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAAaS,MAAA,CAAAa,eAAA,CAAAF,MAAA,CAAuB;IAAA,EAAC,yBAAAG,gGAAAH,MAAA;MAAApB,2DAAA,CAAAqB,GAAA;MAAA,MAAAZ,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CACtBS,MAAA,CAAAa,eAAA,CAAAF,MAAA,CAAuB;IAAA,EAAC,0BAAAI,iGAAAJ,MAAA;MAAApB,2DAAA,CAAAqB,GAAA;MAAA,MAAAZ,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CACvBS,MAAA,CAAAa,eAAA,CAAAF,MAAA,CAAuB;IAAA,EAAC;IAEzCpB,0DAAA,EAAgB;;;;IANfA,wDAAA,SAAA0B,WAAA,CAAiB;;;;;;IAPlB1B,4DAFF,cAAqF,cAC3D,SACpB;IAAAA,oDAAA,GAAyF;IAAAA,0DAAA,EAAK;IAClGA,4DAAA,iBAAoD;IAAtBA,wDAAA,mBAAA2B,mEAAA;MAAA3B,2DAAA,CAAA4B,GAAA;MAAA,MAAAnB,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAG,SAAA,EAAW;IAAA,EAAC;IAACZ,oDAAA,cAAO;IAC5DA,0DAD4D,EAAS,EAC/D;IAENA,4DAAA,cAA4B;IAC3BA,wDAAA,IAAA8B,0DAAA,4BAOC;IAEF9B,0DAAA,EAAM;IAGLA,4DADD,cAAsB,iBACiC;IAA1BA,wDAAA,mBAAA+B,mEAAA;MAAA/B,2DAAA,CAAA4B,GAAA;MAAA,MAAAnB,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAS,aAAA,EAAe;IAAA,EAAC;IAAClB,oDAAA,4BAAoB;IAE5EA,0DAF4E,EAAS,EAC9E,EACD;;;;IAnBAA,uDAAA,GAAyF;IAAzFA,gEAAA,KAAAS,MAAA,CAAAwB,eAAA,CAAAC,MAAA,sBAAAzB,MAAA,CAAAwB,eAAA,CAAAC,MAAA,sBAAyF;IAMvElC,uDAAA,GAAoB;IAAAA,wDAApB,YAAAS,MAAA,CAAAwB,eAAA,CAAoB,iBAAAxB,MAAA,CAAA0B,eAAA,CAAwB;;;ADrBhE,MAAOC,0BAA0B;EAO7BC,MAAA;EACAC,aAAA;EACAC,mBAAA;EACAC,aAAA;EATTP,eAAe,GAAU,EAAE;EAC3BQ,OAAO,GAAG,KAAK;EACf1B,KAAK,GAAkB,IAAI;EACnB2B,QAAQ,GAAG,IAAI5C,yCAAO,EAAQ;EAEtC6C,YACSN,MAAc,EACdC,aAA4B,EAC5BC,mBAAwC,EACxCC,aAA4B;IAH5B,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,aAAa,GAAbA,aAAa;EACnB;EAEGI,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,sMAAA;MACb;MACA;MACA,IAAID,KAAI,CAACL,aAAa,CAACO,WAAW,EAAE;QACnC,MAAMF,KAAI,CAACL,aAAa,CAACQ,gBAAgB,CAAC,qBAAqB,CAAC;MACjE;MAEAH,KAAI,CAACI,mBAAmB,EAAE;IAAC;EAC5B;EAEAC,WAAWA,CAAA;IACV,IAAI,CAACR,QAAQ,CAACS,IAAI,EAAE;IACpB,IAAI,CAACT,QAAQ,CAACU,QAAQ,EAAE;EACzB;EAEMH,mBAAmBA,CAAA;IAAA,IAAAI,MAAA;IAAA,OAAAP,sMAAA;MACxBO,MAAI,CAACZ,OAAO,GAAG,IAAI;MACnBY,MAAI,CAACtC,KAAK,GAAG,IAAI;MAEjB,IAAI;QACH,MAAMuC,QAAQ,SAASD,MAAI,CAACf,aAAa,CAACiB,mBAAmB,EAAE;QAE/DC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAAC;QAEvC,IAAIA,QAAQ,EAAEI,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAAC,EAAE;UACnDL,MAAI,CAACpB,eAAe,GAAGqB,QAAQ,CAACI,IAAI;UACpCF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,MAAI,CAACpB,eAAe,CAAC;QACvD,CAAC,MAAM,IAAIqB,QAAQ,EAAEI,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,EAAE;UAC/D;UACAL,MAAI,CAACpB,eAAe,GAAGqB,QAAQ,CAACI,IAAI,CAACA,IAAI;UACzCF,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEJ,MAAI,CAACpB,eAAe,CAAC;QAChE,CAAC,MAAM;UACNuB,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;UACxDJ,MAAI,CAACpB,eAAe,GAAG,EAAE;QAC1B;MACD,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACfyC,OAAO,CAACzC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDsC,MAAI,CAACtC,KAAK,GAAG,oDAAoD;QACjEsC,MAAI,CAACpB,eAAe,GAAG,EAAE;MAC1B,CAAC,SAAS;QACToB,MAAI,CAACZ,OAAO,GAAG,KAAK;MACrB;IAAC;EACF;EAEAvB,aAAaA,CAAA;IACZ,IAAI,CAACmB,MAAM,CAACwB,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC;EACnD;EAEAjD,SAASA,CAAA;IACR,IAAI,CAACqC,mBAAmB,EAAE;EAC3B;EAEA3B,eAAeA,CAACwC,QAAa;IAC5B;IACA,IAAI,CAACvB,mBAAmB,CAACwB,kBAAkB,CAACD,QAAQ,CAAC;IACrDN,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEK,QAAQ,CAAC;IAEzD;IACA,IAAI,CAACzB,MAAM,CAACwB,QAAQ,CAAC,CAAC,6BAA6B,CAAC,CAAC;EACtD;EAEA1B,eAAeA,CAAC6B,KAAa,EAAEF,QAAa;IAC3C,OAAOA,QAAQ,CAACG,UAAU,EAAEC,EAAE,IAAIJ,QAAQ,CAACG,UAAU,EAAEE,KAAK,IAAIH,KAAK;EACtE;;qCA5EY5B,0BAA0B,EAAApC,+DAAA,CAAAqE,mDAAA,GAAArE,+DAAA,CAAAuE,0DAAA,GAAAvE,+DAAA,CAAAyE,gFAAA,GAAAzE,+DAAA,CAAA2E,0DAAA;EAAA;;UAA1BvC,0BAA0B;IAAAyC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCfrCnF,4DAFF,aAAiC,aACZ,SACf;QAAAA,oDAAA,gBAAS;QAAAA,0DAAA,EAAK;QAClBA,4DAAA,QAAG;QAAAA,oDAAA,mDAA4C;QAChDA,0DADgD,EAAI,EAC9C;QAENA,4DAAA,aAAqB;QAwBpBA,wDAtBA,IAAAqF,yCAAA,iBAA2C,IAAAC,yCAAA,iBAMQ,IAAAC,yCAAA,iBAQiC,KAAAC,0CAAA,kBAQC;QAuBvFxF,0DADC,EAAM,EACD;;;QA7CEA,uDAAA,GAAa;QAAbA,wDAAA,SAAAoF,GAAA,CAAA3C,OAAA,CAAa;QAMbzC,uDAAA,EAAuB;QAAvBA,wDAAA,SAAAoF,GAAA,CAAArE,KAAA,KAAAqE,GAAA,CAAA3C,OAAA,CAAuB;QAQvBzC,uDAAA,EAAwD;QAAxDA,wDAAA,UAAAoF,GAAA,CAAA3C,OAAA,KAAA2C,GAAA,CAAArE,KAAA,IAAAqE,GAAA,CAAAnD,eAAA,CAAAC,MAAA,OAAwD;QAQxDlC,uDAAA,EAAsD;QAAtDA,wDAAA,UAAAoF,GAAA,CAAA3C,OAAA,KAAA2C,GAAA,CAAArE,KAAA,IAAAqE,GAAA,CAAAnD,eAAA,CAAAC,MAAA,KAAsD;;;mBDjBnDvC,yDAAY,EAAA8F,oDAAA,EAAAA,iDAAA,EAAE7F,+DAAe,EAAEC,0DAAY,EAAEE,0EAAiB;IAAA6F,MAAA;EAAA","sources":["./src/app/dashboard/zelf-keys-passwords/zelf-keys-passwords.component.ts","./src/app/dashboard/zelf-keys-passwords/zelf-keys-passwords.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { WalletService } from \"../../wallet.service\";\nimport { PasswordDataService } from \"../../services/password-data.service\";\nimport { ChromeService } from \"../../chrome.service\";\nimport { DataCardComponent } from \"../shared/data-card.component\";\n\n@Component({\n\tselector: \"app-zelf-keys-passwords\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule, DataCardComponent],\n\ttemplateUrl: \"./zelf-keys-passwords.component.html\",\n\tstyleUrls: [\"./zelf-keys-passwords.component.scss\"],\n})\nexport class ZelfKeysPasswordsComponent implements OnInit, OnDestroy {\n\tstoredPasswords: any[] = [];\n\tloading = false;\n\terror: string | null = null;\n\tprivate destroy$ = new Subject<void>();\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate walletService: WalletService,\n\t\tprivate passwordDataService: PasswordDataService,\n\t\tprivate chromeService: ChromeService\n\t) {}\n\n\tasync ngOnInit(): Promise<void> {\n\t\t// Ensure extension is in full screen mode for better security and user experience\n\t\t// This is especially important for password management\n\t\tif (this.chromeService.isExtension) {\n\t\t\tawait this.chromeService.ensureFullScreen(\"dashboard/passwords\");\n\t\t}\n\n\t\tthis.loadStoredPasswords();\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.destroy$.next();\n\t\tthis.destroy$.complete();\n\t}\n\n\tasync loadStoredPasswords(): Promise<void> {\n\t\tthis.loading = true;\n\t\tthis.error = null;\n\n\t\ttry {\n\t\t\tconst response = await this.walletService.listStoredPasswords();\n\n\t\t\tconsole.log(\"Full response:\", response);\n\n\t\t\tif (response?.data && Array.isArray(response.data)) {\n\t\t\t\tthis.storedPasswords = response.data;\n\t\t\t\tconsole.log(\"Stored passwords:\", this.storedPasswords);\n\t\t\t} else if (response?.data && Array.isArray(response.data.data)) {\n\t\t\t\t// Handle nested data structure\n\t\t\t\tthis.storedPasswords = response.data.data;\n\t\t\t\tconsole.log(\"Stored passwords (nested):\", this.storedPasswords);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"No valid data structure found in response\");\n\t\t\t\tthis.storedPasswords = [];\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error loading stored passwords:\", error);\n\t\t\tthis.error = \"Failed to load stored passwords. Please try again.\";\n\t\t\tthis.storedPasswords = [];\n\t\t} finally {\n\t\t\tthis.loading = false;\n\t\t}\n\t}\n\n\tonAddPassword(): void {\n\t\tthis.router.navigate([\"/dashboard/passwords/new\"]);\n\t}\n\n\tonRefresh(): void {\n\t\tthis.loadStoredPasswords();\n\t}\n\n\tonPasswordClick(password: any): void {\n\t\t// Store the password data in the service\n\t\tthis.passwordDataService.setCurrentPassword(password);\n\t\tconsole.log(\"Password data stored in service:\", password);\n\n\t\t// Navigate to password detail view\n\t\tthis.router.navigate([\"/dashboard/passwords/detail\"]);\n\t}\n\n\ttrackByPassword(index: number, password: any): any {\n\t\treturn password.publicData?.id || password.publicData?.title || index;\n\t}\n}\n","<div class=\"zelf-keys-passwords\">\n\t<div class=\"header\">\n\t\t<h2>Passwords</h2>\n\t\t<p>Manage your secure passwords and credentials</p>\n\t</div>\n\n\t<div class=\"content\">\n\t\t<!-- Loading State -->\n\t\t<div *ngIf=\"loading\" class=\"loading-state\">\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<p>Loading your passwords...</p>\n\t\t</div>\n\n\t\t<!-- Error State -->\n\t\t<div *ngIf=\"error && !loading\" class=\"error-state\">\n\t\t\t<div class=\"icon\">‚ö†Ô∏è</div>\n\t\t\t<h3>Error loading passwords</h3>\n\t\t\t<p>{{ error }}</p>\n\t\t\t<button class=\"btn-secondary\" (click)=\"onRefresh()\">Try Again</button>\n\t\t</div>\n\n\t\t<!-- Empty State -->\n\t\t<div *ngIf=\"!loading && !error && storedPasswords.length === 0\" class=\"empty-state\">\n\t\t\t<div class=\"icon\">üîê</div>\n\t\t\t<h3>No passwords yet</h3>\n\t\t\t<p>Start adding your passwords to keep them secure and easily accessible</p>\n\t\t\t<button class=\"btn-primary\" (click)=\"onAddPassword()\">Add Password</button>\n\t\t</div>\n\n\t\t<!-- Passwords Grid -->\n\t\t<div *ngIf=\"!loading && !error && storedPasswords.length > 0\" class=\"passwords-grid\">\n\t\t\t<div class=\"list-header\">\n\t\t\t\t<h3>{{ storedPasswords.length }} stored password{{ storedPasswords.length !== 1 ? \"s\" : \"\" }}</h3>\n\t\t\t\t<button class=\"btn-secondary\" (click)=\"onRefresh()\">Refresh</button>\n\t\t\t</div>\n\n\t\t\t<div class=\"password-cards\">\n\t\t\t\t<app-data-card\n\t\t\t\t\t*ngFor=\"let password of storedPasswords; trackBy: trackByPassword\"\n\t\t\t\t\t[item]=\"password\"\n\t\t\t\t\tcategory=\"password\"\n\t\t\t\t\t(cardClick)=\"onPasswordClick($event)\"\n\t\t\t\t\t(launchClick)=\"onPasswordClick($event)\"\n\t\t\t\t\t(optionsClick)=\"onPasswordClick($event)\"\n\t\t\t\t>\n\t\t\t\t</app-data-card>\n\t\t\t</div>\n\n\t\t\t<div class=\"add-more\">\n\t\t\t\t<button class=\"btn-primary\" (click)=\"onAddPassword()\">Add Another Password</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["CommonModule","TranslocoModule","RouterModule","Subject","DataCardComponent","i0","…µ…µelementStart","…µ…µelement","…µ…µtext","…µ…µelementEnd","…µ…µlistener","ZelfKeysPasswordsComponent_div_8_Template_button_click_7_listener","…µ…µrestoreView","_r1","ctx_r1","…µ…µnextContext","…µ…µresetView","onRefresh","…µ…µadvance","…µ…µtextInterpolate","error","ZelfKeysPasswordsComponent_div_9_Template_button_click_7_listener","_r3","onAddPassword","ZelfKeysPasswordsComponent_div_10_app_data_card_7_Template_app_data_card_cardClick_0_listener","$event","_r5","onPasswordClick","ZelfKeysPasswordsComponent_div_10_app_data_card_7_Template_app_data_card_launchClick_0_listener","ZelfKeysPasswordsComponent_div_10_app_data_card_7_Template_app_data_card_optionsClick_0_listener","…µ…µproperty","password_r6","ZelfKeysPasswordsComponent_div_10_Template_button_click_4_listener","_r4","…µ…µtemplate","ZelfKeysPasswordsComponent_div_10_app_data_card_7_Template","ZelfKeysPasswordsComponent_div_10_Template_button_click_9_listener","…µ…µtextInterpolate2","storedPasswords","length","trackByPassword","ZelfKeysPasswordsComponent","router","walletService","passwordDataService","chromeService","loading","destroy$","constructor","ngOnInit","_this","_asyncToGenerator","isExtension","ensureFullScreen","loadStoredPasswords","ngOnDestroy","next","complete","_this2","response","listStoredPasswords","console","log","data","Array","isArray","navigate","password","setCurrentPassword","index","publicData","id","title","…µ…µdirectiveInject","i1","Router","i2","WalletService","i3","PasswordDataService","i4","ChromeService","selectors","decls","vars","consts","template","ZelfKeysPasswordsComponent_Template","rf","ctx","ZelfKeysPasswordsComponent_div_7_Template","ZelfKeysPasswordsComponent_div_8_Template","ZelfKeysPasswordsComponent_div_9_Template","ZelfKeysPasswordsComponent_div_10_Template","i5","NgForOf","NgIf","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}