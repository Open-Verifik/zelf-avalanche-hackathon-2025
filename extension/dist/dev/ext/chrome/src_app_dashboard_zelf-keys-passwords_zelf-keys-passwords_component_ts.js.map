{"version":3,"file":"src_app_dashboard_zelf-keys-passwords_zelf-keys-passwords_component_ts.js","mappings":"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","sources":["./src/app/dashboard/zelf-keys-passwords/zelf-keys-passwords.component.ts","./src/app/dashboard/zelf-keys-passwords/zelf-keys-passwords.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { WalletService } from \"../../wallet.service\";\nimport { PasswordDataService } from \"../../services/password-data.service\";\n\n@Component({\n\tselector: \"app-zelf-keys-passwords\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule],\n\ttemplateUrl: \"./zelf-keys-passwords.component.html\",\n\tstyleUrls: [\"./zelf-keys-passwords.component.scss\"],\n})\nexport class ZelfKeysPasswordsComponent implements OnInit, OnDestroy {\n\tstoredPasswords: any[] = [];\n\tloading = false;\n\terror: string | null = null;\n\tprivate destroy$ = new Subject<void>();\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate walletService: WalletService,\n\t\tprivate passwordDataService: PasswordDataService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.loadStoredPasswords();\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.destroy$.next();\n\t\tthis.destroy$.complete();\n\t}\n\n\tasync loadStoredPasswords(): Promise<void> {\n\t\tthis.loading = true;\n\t\tthis.error = null;\n\n\t\ttry {\n\t\t\tconst response = await this.walletService.listStoredPasswords();\n\n\t\t\tfor (const password of response.data) {\n\t\t\t\tconsole.log(\"password\", password);\n\t\t\t}\n\n\t\t\tif (response?.data) {\n\t\t\t\tthis.storedPasswords = response.data;\n\t\t\t} else {\n\t\t\t\tthis.storedPasswords = [];\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error loading stored passwords:\", error);\n\t\t\tthis.error = \"Failed to load stored passwords. Please try again.\";\n\t\t\tthis.storedPasswords = [];\n\t\t} finally {\n\t\t\tthis.loading = false;\n\t\t}\n\t}\n\n\tonAddPassword(): void {\n\t\tthis.router.navigate([\"/dashboard/passwords/new\"]);\n\t}\n\n\tonRefresh(): void {\n\t\tthis.loadStoredPasswords();\n\t}\n\n\tonPasswordClick(password: any): void {\n\t\t// Store the password data in the service\n\t\tthis.passwordDataService.setCurrentPassword(password);\n\t\tconsole.log(\"Password data stored in service:\", password);\n\n\t\t// Navigate to password detail view\n\t\tthis.router.navigate([\"/dashboard/passwords/detail\"]);\n\t}\n\n\ttrackByPassword(index: number, password: any): any {\n\t\treturn password.publicData?.id || password.publicData?.title || index;\n\t}\n}\n","<div class=\"zelf-keys-passwords\">\n\t<div class=\"header\">\n\t\t<h2>Passwords</h2>\n\t\t<p>Manage your secure passwords and credentials</p>\n\t</div>\n\n\t<div class=\"content\">\n\t\t<!-- Loading State -->\n\t\t<div *ngIf=\"loading\" class=\"loading-state\">\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<p>Loading your passwords...</p>\n\t\t</div>\n\n\t\t<!-- Error State -->\n\t\t<div *ngIf=\"error && !loading\" class=\"error-state\">\n\t\t\t<div class=\"icon\">‚ö†Ô∏è</div>\n\t\t\t<h3>Error loading passwords</h3>\n\t\t\t<p>{{ error }}</p>\n\t\t\t<button class=\"btn-secondary\" (click)=\"onRefresh()\">Try Again</button>\n\t\t</div>\n\n\t\t<!-- Empty State -->\n\t\t<div *ngIf=\"!loading && !error && storedPasswords.length === 0\" class=\"empty-state\">\n\t\t\t<div class=\"icon\">üîê</div>\n\t\t\t<h3>No passwords yet</h3>\n\t\t\t<p>Start adding your passwords to keep them secure and easily accessible</p>\n\t\t\t<button class=\"btn-primary\" (click)=\"onAddPassword()\">Add Password</button>\n\t\t</div>\n\n\t\t<!-- Passwords List -->\n\t\t<div *ngIf=\"!loading && !error && storedPasswords.length > 0\" class=\"passwords-list\">\n\t\t\t<div class=\"list-header\">\n\t\t\t\t<h3>{{ storedPasswords.length }} stored password{{ storedPasswords.length !== 1 ? \"s\" : \"\" }}</h3>\n\t\t\t\t<button class=\"btn-secondary\" (click)=\"onRefresh()\">Refresh</button>\n\t\t\t</div>\n\n\t\t\t<div class=\"password-items\">\n\t\t\t\t<div *ngFor=\"let password of storedPasswords; trackBy: trackByPassword\" class=\"password-item\" (click)=\"onPasswordClick(password)\">\n\t\t\t\t\t<div class=\"password-info\">\n\t\t\t\t\t\t<div class=\"password-title\">\n\t\t\t\t\t\t\t<span class=\"icon\">üîê</span>\n\t\t\t\t\t\t\t<span class=\"title\">{{ password.publicData?.website || \"Untitled Password\" }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"password-meta\">\n\t\t\t\t\t\t\t<span class=\"username\">{{ password.publicData?.username || \"No username\" }}</span>\n\t\t\t\t\t\t\t<span class=\"separator\">‚Ä¢</span>\n\t\t\t\t\t\t\t<span class=\"type\">{{ password.publicData?.type || \"password\" }}</span>\n\t\t\t\t\t\t\t<span class=\"separator\">‚Ä¢</span>\n\t\t\t\t\t\t\t<span class=\"date\">{{\n\t\t\t\t\t\t\t\tpassword.publicData?.timestamp ? (password.publicData.timestamp | date: \"short\") : \"Unknown date\"\n\t\t\t\t\t\t\t}}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"password-actions\">\n\t\t\t\t\t\t<button class=\"btn-icon\" title=\"View details\">üëÅÔ∏è</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"add-more\">\n\t\t\t\t<button class=\"btn-primary\" (click)=\"onAddPassword()\">Add Another Password</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["CommonModule","TranslocoModule","RouterModule","Subject","i0","…µ…µelementStart","…µ…µelement","…µ…µtext","…µ…µelementEnd","…µ…µlistener","ZelfKeysPasswordsComponent_div_8_Template_button_click_7_listener","…µ…µrestoreView","_r1","ctx_r1","…µ…µnextContext","…µ…µresetView","onRefresh","…µ…µadvance","…µ…µtextInterpolate","error","ZelfKeysPasswordsComponent_div_9_Template_button_click_7_listener","_r3","onAddPassword","ZelfKeysPasswordsComponent_div_10_div_7_Template_div_click_0_listener","password_r6","_r5","$implicit","onPasswordClick","publicData","website","username","type","timestamp","…µ…µpipeBind2","ZelfKeysPasswordsComponent_div_10_Template_button_click_4_listener","_r4","…µ…µtemplate","ZelfKeysPasswordsComponent_div_10_div_7_Template","ZelfKeysPasswordsComponent_div_10_Template_button_click_9_listener","…µ…µtextInterpolate2","storedPasswords","length","…µ…µproperty","trackByPassword","ZelfKeysPasswordsComponent","router","walletService","passwordDataService","loading","destroy$","constructor","ngOnInit","loadStoredPasswords","ngOnDestroy","next","complete","_this","_asyncToGenerator","response","listStoredPasswords","password","data","console","log","navigate","setCurrentPassword","index","id","title","…µ…µdirectiveInject","i1","Router","i2","WalletService","i3","PasswordDataService","selectors","decls","vars","consts","template","ZelfKeysPasswordsComponent_Template","rf","ctx","ZelfKeysPasswordsComponent_div_7_Template","ZelfKeysPasswordsComponent_div_8_Template","ZelfKeysPasswordsComponent_div_9_Template","ZelfKeysPasswordsComponent_div_10_Template","i4","NgForOf","NgIf","DatePipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}