{"version":3,"file":"src_app_dashboard_zelf-keys-passwords_password-result_password-result_component_ts.js","mappings":"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","sources":["./src/app/dashboard/zelf-keys-passwords/password-result/password-result.component.ts","./src/app/dashboard/zelf-keys-passwords/password-result/password-result.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n\tselector: \"app-password-result\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule],\n\ttemplateUrl: \"./password-result.component.html\",\n\tstyleUrls: [\"./password-result.component.scss\"],\n})\nexport class PasswordResultComponent implements OnInit {\n\tapiResult: any = {};\n\tpasswordData: any = {};\n\tloading = true;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute\n\t) {}\n\n\tngOnInit(): void {\n\t\t// Get result data from route query params\n\t\tthis.route.queryParams.subscribe((params) => {\n\t\t\tif (params[\"result\"]) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.apiResult = JSON.parse(params[\"result\"]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"Error parsing API result:\", e);\n\t\t\t\t\tthis.apiResult = { error: \"Failed to parse API response\" };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params[\"passwordData\"]) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.passwordData = JSON.parse(decodeURIComponent(params[\"passwordData\"]));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"Error parsing password data:\", e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.loading = false;\n\t\t});\n\t}\n\n\tonBackToPasswords(): void {\n\t\tthis.router.navigate([\"/dashboard/passwords\"]);\n\t}\n\n\tonAddAnotherPassword(): void {\n\t\tthis.router.navigate([\"/dashboard/passwords/new\"]);\n\t}\n\n\tgetResultStatus(): \"success\" | \"error\" | \"unknown\" {\n\t\tif (this.apiResult.error || this.apiResult.status === \"error\") {\n\t\t\treturn \"error\";\n\t\t}\n\t\tif (this.apiResult.status === \"success\" || this.apiResult.data) {\n\t\t\treturn \"success\";\n\t\t}\n\t\treturn \"unknown\";\n\t}\n\n\tgetStatusIcon(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"✅\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"❌\";\n\t\t\tdefault:\n\t\t\t\treturn \"❓\";\n\t\t}\n\t}\n\n\tgetStatusTitle(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"Password Stored Successfully!\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"Error Storing Password\";\n\t\t\tdefault:\n\t\t\t\treturn \"Unknown Status\";\n\t\t}\n\t}\n\n\tgetStatusMessage(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"Your password has been securely stored with biometric verification.\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"There was an error storing your password. Please try again.\";\n\t\t\tdefault:\n\t\t\t\treturn \"The status of your password storage request is unclear.\";\n\t\t}\n\t}\n}\n","<div class=\"password-result-container\">\n\t<div class=\"result-card\">\n\t\t<div class=\"result-header\">\n\t\t\t<div class=\"status-icon\">{{ getStatusIcon() }}</div>\n\t\t\t<h1 class=\"result-title\">{{ getStatusTitle() }}</h1>\n\t\t\t<p class=\"result-message\">{{ getStatusMessage() }}</p>\n\t\t</div>\n\n\t\t<div class=\"result-content\" *ngIf=\"!loading\">\n\t\t\t<!-- Password Data Summary -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\">Password Details</h3>\n\t\t\t\t<div class=\"data-grid\">\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Website</label>\n\t\t\t\t\t\t<span>{{ passwordData.url || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t\t<span>{{ passwordData.title || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Email</label>\n\t\t\t\t\t\t<span>{{ passwordData.email || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Notes</label>\n\t\t\t\t\t\t<span>{{ passwordData.notes || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- API Response Debug -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\">API Response</h3>\n\t\t\t\t<div class=\"api-response\">\n\t\t\t\t\t<pre class=\"json-display\">{{ apiResult | json }}</pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Next Steps -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\">Next Steps</h3>\n\t\t\t\t<div class=\"next-steps\">\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'success'\">\n\t\t\t\t\t\tYour password is now securely stored. You can view it in your passwords list or add another password.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'error'\">\n\t\t\t\t\t\tPlease review the error details above and try again. If the problem persists, contact support.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'unknown'\">\n\t\t\t\t\t\tThe system couldn't determine the status. Please check the API response above for details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Loading State -->\n\t\t<div class=\"loading-state\" *ngIf=\"loading\">\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<p>Loading result...</p>\n\t\t</div>\n\n\t\t<!-- Action Buttons -->\n\t\t<div class=\"result-actions\">\n\t\t\t<button class=\"btn-secondary\" (click)=\"onBackToPasswords()\">Back to Passwords</button>\n\t\t\t<button class=\"btn-primary\" (click)=\"onAddAnotherPassword()\">Add Another Password</button>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["CommonModule","TranslocoModule","RouterModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","PasswordResultComponent_div_9_p_36_Template","PasswordResultComponent_div_9_p_37_Template","PasswordResultComponent_div_9_p_38_Template","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","passwordData","url","title","email","notes","ɵɵpipeBind1","apiResult","ɵɵproperty","getResultStatus","ɵɵelement","PasswordResultComponent","router","route","loading","constructor","ngOnInit","queryParams","subscribe","params","JSON","parse","e","console","error","decodeURIComponent","onBackToPasswords","navigate","onAddAnotherPassword","status","data","getStatusIcon","getStatusTitle","getStatusMessage","ɵɵdirectiveInject","i1","Router","ActivatedRoute","selectors","decls","vars","consts","template","PasswordResultComponent_Template","rf","ctx","PasswordResultComponent_div_9_Template","PasswordResultComponent_div_10_Template","ɵɵlistener","PasswordResultComponent_Template_button_click_12_listener","PasswordResultComponent_Template_button_click_14_listener","i2","NgIf","JsonPipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}