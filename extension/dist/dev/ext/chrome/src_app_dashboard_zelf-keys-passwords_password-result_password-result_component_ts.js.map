{"version":3,"file":"src_app_dashboard_zelf-keys-passwords_password-result_password-result_component_ts.js","mappings":"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","sources":["./src/app/services/data-passing.service.ts","./src/app/dashboard/zelf-keys-passwords/password-result/password-result.component.ts","./src/app/dashboard/zelf-keys-passwords/password-result/password-result.component.html"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ChromeService } from \"../chrome.service\";\n\nexport interface FormData {\n\t[key: string]: any;\n}\n\nexport interface ApiResult {\n\tsuccess: boolean;\n\tzelfProof: string;\n\tzelfQR: string;\n\tNFT?: {\n\t\tsuccess: boolean;\n\t\ttokenId: string;\n\t\ttransactionHash: string;\n\t\trecipient: string;\n\t\tcost: string;\n\t\tmetadata: any;\n\t\tmetadataUrl: string;\n\t\texplorerUrl: string;\n\t\towner: string;\n\t\tcontractAddress: string;\n\t};\n\tipfs?: {\n\t\thash: string;\n\t\tgatewayUrl: string;\n\t\tpinSize: number;\n\t\ttimestamp: string;\n\t\tname: string;\n\t\tmetadata: any;\n\t};\n\tpublicData?: any;\n\tmessage: string;\n}\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class DataPassingService {\n\tprivate dataStore: { [key: string]: FormData } = {};\n\tprivate resultStore: { [key: string]: ApiResult } = {};\n\n\tconstructor(private chromeService: ChromeService) {\n\t\t// Load any existing data from localStorage on service initialization\n\t\t// Use setTimeout to avoid blocking constructor\n\t\tsetTimeout(() => {\n\t\t\tthis.loadFromStorage();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Store form data for a specific form type\n\t */\n\tasync storeData(formType: string, data: FormData): Promise<void> {\n\t\tthis.dataStore[formType] = data;\n\t\tawait this.saveToStorage();\n\t}\n\n\t/**\n\t * Retrieve form data for a specific form type\n\t */\n\tgetData(formType: string): FormData | null {\n\t\tconst data = this.dataStore[formType];\n\t\treturn data || null;\n\t}\n\n\t/**\n\t * Store API result for a specific form type\n\t */\n\tasync storeResult(formType: string, result: ApiResult): Promise<void> {\n\t\tthis.resultStore[formType] = result;\n\t\tawait this.saveToStorage();\n\t}\n\n\t/**\n\t * Retrieve API result for a specific form type\n\t */\n\tgetResult(formType: string): ApiResult | null {\n\t\tconst result = this.resultStore[formType];\n\t\treturn result || null;\n\t}\n\n\t/**\n\t * Clear form data for a specific form type\n\t */\n\tclearData(formType: string): void {\n\t\t// also store it from the chrome storage\n\t\tthis.chromeService.removeItem(`zelfDataPassing`);\n\t\tdelete this.dataStore[formType];\n\t}\n\n\t/**\n\t * Clear result data for a specific form type\n\t */\n\tclearResult(formType: string): void {\n\t\tdelete this.resultStore[formType];\n\t}\n\n\t/**\n\t * Clear all data for a specific form type (both form and result)\n\t */\n\tasync clearAll(formType: string): Promise<void> {\n\t\tthis.clearData(formType);\n\t\tthis.clearResult(formType);\n\t\tawait this.saveToStorage();\n\t}\n\n\t/**\n\t * Check if form data exists for a specific form type\n\t */\n\thasData(formType: string): boolean {\n\t\treturn !!this.dataStore[formType];\n\t}\n\n\t/**\n\t * Check if result data exists for a specific form type\n\t */\n\thasResult(formType: string): boolean {\n\t\treturn !!this.resultStore[formType];\n\t}\n\n\t/**\n\t * Get all stored data for debugging\n\t */\n\tgetAllData(): { formData: { [key: string]: FormData }; resultData: { [key: string]: ApiResult } } {\n\t\treturn {\n\t\t\tformData: { ...this.dataStore },\n\t\t\tresultData: { ...this.resultStore },\n\t\t};\n\t}\n\n\t/**\n\t * Save data to localStorage for persistence\n\t */\n\tprivate async saveToStorage(): Promise<void> {\n\t\ttry {\n\t\t\tconst storageData = {\n\t\t\t\tdataStore: this.dataStore,\n\t\t\t\tresultStore: this.resultStore,\n\t\t\t\ttimestamp: Date.now(),\n\t\t\t};\n\n\t\t\tif (this.chromeService.isExtension) {\n\t\t\t\t// Use Chrome storage for extension\n\t\t\t\tawait this.chromeService.setItem(\"zelfDataPassing\", storageData);\n\t\t\t} else {\n\t\t\t\t// Use localStorage for web\n\t\t\t\tlocalStorage.setItem(\"zelfDataPassing\", JSON.stringify(storageData));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error saving to storage:\", error);\n\t\t}\n\t}\n\n\t/**\n\t * Load data from localStorage on service initialization\n\t */\n\tprivate async loadFromStorage(): Promise<void> {\n\t\ttry {\n\t\t\tlet storageData: any = null;\n\n\t\t\tif (this.chromeService.isExtension) {\n\t\t\t\t// Use Chrome storage for extension\n\t\t\t\tstorageData = await this.chromeService.getItem(\"zelfDataPassing\");\n\t\t\t} else {\n\t\t\t\t// Use localStorage for web\n\t\t\t\tconst localData = localStorage.getItem(\"zelfDataPassing\");\n\t\t\t\tstorageData = localData ? JSON.parse(localData) : null;\n\t\t\t}\n\n\t\t\tif (storageData) {\n\t\t\t\tconst maxAge = 24 * 60 * 60 * 1000; // 24 hours\n\n\t\t\t\t// Check if data is not too old\n\t\t\t\tif (Date.now() - storageData.timestamp < maxAge) {\n\t\t\t\t\tthis.dataStore = storageData.dataStore || {};\n\t\t\t\t\tthis.resultStore = storageData.resultStore || {};\n\t\t\t\t} else {\n\t\t\t\t\tthis.clearAllStorage();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error loading from storage:\", error);\n\t\t\t// Clear potentially corrupted data\n\t\t\tthis.clearAllStorage();\n\t\t}\n\t}\n\n\t/**\n\t * Clear all data from both memory and storage\n\t */\n\tclearAllStorage(): void {\n\t\tthis.dataStore = {};\n\t\tthis.resultStore = {};\n\n\t\ttry {\n\t\t\tif (this.chromeService.isExtension) {\n\t\t\t\tthis.chromeService.removeItem(\"zelfDataPassing\");\n\t\t\t} else {\n\t\t\t\tlocalStorage.removeItem(\"zelfDataPassing\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error clearing storage:\", error);\n\t\t}\n\t}\n\n\t/**\n\t * Manually clear storage for a specific form type\n\t */\n\tasync clearStorageForType(formType: string): Promise<void> {\n\t\tawait this.clearAll(formType);\n\t}\n\n\t/**\n\t * Get storage info for debugging\n\t */\n\tgetStorageInfo(): { isExtension: boolean; hasChromeService: boolean; storageKeys: string[] } {\n\t\treturn {\n\t\t\tisExtension: this.chromeService.isExtension,\n\t\t\thasChromeService: !!this.chromeService,\n\t\t\tstorageKeys: Object.keys(this.dataStore).concat(Object.keys(this.resultStore)),\n\t\t};\n\t}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router, ActivatedRoute } from \"@angular/router\";\nimport { ChromeService } from \"../../../chrome.service\";\nimport { DataPassingService, ApiResult } from \"../../../services/data-passing.service\";\n\n@Component({\n\tselector: \"app-password-result\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule],\n\ttemplateUrl: \"./password-result.component.html\",\n\tstyleUrls: [\"./password-result.component.scss\"],\n})\nexport class PasswordResultComponent implements OnInit {\n\tapiResult: any = {};\n\tpasswordData: any = {};\n\tloading = true;\n\tshowDebug = false;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate chromeService: ChromeService,\n\t\tprivate dataPassingService: DataPassingService\n\t) {}\n\n\tasync ngOnInit(): Promise<void> {\n\t\t// Ensure extension is in full screen mode for better security when showing password results\n\t\tif (this.chromeService.isExtension) {\n\t\t\tawait this.chromeService.ensureFullScreen(\"dashboard/passwords/result\");\n\t\t}\n\n\t\t// Get data from service instead of query params\n\n\t\t// Get API result from service\n\t\tconst apiResult = this.dataPassingService.getResult(\"passwords\");\n\t\tif (apiResult) {\n\t\t\tthis.apiResult = apiResult;\n\t\t} else {\n\t\t\tthis.apiResult = { error: \"No API result available\" };\n\t\t}\n\n\t\t// Get password form data from service\n\t\tconst passwordData = this.dataPassingService.getData(\"passwords\");\n\t\tif (passwordData) {\n\t\t\tthis.passwordData = passwordData;\n\t\t}\n\n\t\tthis.loading = false;\n\t}\n\n\tonBackToPasswords(): void {\n\t\tthis.router.navigate([\"/dashboard/passwords\"]);\n\t}\n\n\tasync onAddAnotherPassword(): Promise<void> {\n\t\t// Clear the stored data when starting fresh\n\t\tawait this.dataPassingService.clearAll(\"passwords\");\n\t\tthis.router.navigate([\"/dashboard/passwords/new\"]);\n\t}\n\n\ttoggleDebugView(): void {\n\t\tthis.showDebug = !this.showDebug;\n\t}\n\n\tasync copyZelfProof(): Promise<void> {\n\t\tif (this.apiResult.zelfProof) {\n\t\t\ttry {\n\t\t\t\tawait navigator.clipboard.writeText(this.apiResult.zelfProof);\n\t\t\t\t// You could add a toast notification here\n\t\t\t} catch (error) {\n\t\t\t\t// Fallback for older browsers\n\t\t\t\tconst textArea = document.createElement(\"textarea\");\n\t\t\t\ttextArea.value = this.apiResult.zelfProof;\n\t\t\t\tdocument.body.appendChild(textArea);\n\t\t\t\ttextArea.select();\n\t\t\t\tdocument.execCommand(\"copy\");\n\t\t\t\tdocument.body.removeChild(textArea);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetResultStatus(): \"success\" | \"error\" | \"unknown\" {\n\t\tif (this.apiResult.error || this.apiResult.status === \"error\") {\n\t\t\treturn \"error\";\n\t\t}\n\t\tif (this.apiResult.status === \"success\" || this.apiResult.data) {\n\t\t\treturn \"success\";\n\t\t}\n\t\treturn \"unknown\";\n\t}\n\n\tgetStatusIcon(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"✅\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"❌\";\n\t\t\tdefault:\n\t\t\t\treturn \"❓\";\n\t\t}\n\t}\n\n\tgetStatusTitle(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"Password Stored Successfully!\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"Error Storing Password\";\n\t\t\tdefault:\n\t\t\t\treturn \"Unknown Status\";\n\t\t}\n\t}\n\n\tgetStatusMessage(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"Your password has been securely stored with biometric verification.\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"There was an error storing your password. Please try again.\";\n\t\t\tdefault:\n\t\t\t\treturn \"The status of your password storage request is unclear.\";\n\t\t}\n\t}\n}\n","<div class=\"password-result-container\">\n\t<div class=\"result-card\">\n\t\t<div class=\"result-header\">\n\t\t\t<div class=\"status-icon\">{{ getStatusIcon() }}</div>\n\t\t\t<h1 class=\"result-title\">{{ getStatusTitle() }}</h1>\n\t\t\t<p class=\"result-message\">{{ getStatusMessage() }}</p>\n\t\t</div>\n\n\t\t<div class=\"result-content\" *ngIf=\"!loading\">\n\t\t\t<!-- Success Summary -->\n\t\t\t<div class=\"data-section\" *ngIf=\"getResultStatus() === 'success'\">\n\t\t\t\t<h3 class=\"section-title\">🎉 Storage Successful!</h3>\n\t\t\t\t<div class=\"success-summary\">\n\t\t\t\t\t<p class=\"success-message\">{{ apiResult.message || \"Password stored successfully!\" }}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Password Data Summary -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\">📝 Stored Password Details</h3>\n\t\t\t\t<div class=\"data-grid\">\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Website</label>\n\t\t\t\t\t\t<span>{{ apiResult.publicData?.website || passwordData.url || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Username</label>\n\t\t\t\t\t\t<span>{{ apiResult.publicData?.username || passwordData.email || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Type</label>\n\t\t\t\t\t\t<span class=\"type-badge\">{{ apiResult.publicData?.type || \"password\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Category</label>\n\t\t\t\t\t\t<span class=\"category-badge\">{{ apiResult.publicData?.category || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Zelf Name</label>\n\t\t\t\t\t\t<span>{{ apiResult.publicData?.zelfName || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Timestamp</label>\n\t\t\t\t\t\t<span>{{ apiResult.publicData?.timestamp ? (apiResult.publicData.timestamp | date: \"medium\") : \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- NFT Information -->\n\t\t\t<div class=\"data-section\" *ngIf=\"apiResult.NFT?.success\">\n\t\t\t\t<h3 class=\"section-title\">🖼️ NFT Created</h3>\n\t\t\t\t<div class=\"nft-info\">\n\t\t\t\t\t<div class=\"nft-image\">\n\t\t\t\t\t\t<img [src]=\"apiResult.NFT.metadata.image\" alt=\"ZelfKey NFT\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"nft-details\">\n\t\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t\t<label>Token ID</label>\n\t\t\t\t\t\t\t<span class=\"token-id\">#{{ apiResult.NFT.tokenId }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t\t<label>Cost</label>\n\t\t\t\t\t\t\t<span class=\"cost\">{{ apiResult.NFT.cost }} AVAX</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t\t<label>Contract</label>\n\t\t\t\t\t\t\t<span class=\"contract-address\">{{ apiResult.NFT.contractAddress }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t\t<label>Transaction</label>\n\t\t\t\t\t\t\t<a [href]=\"apiResult.NFT.explorerUrl\" target=\"_blank\" class=\"tx-link\">\n\t\t\t\t\t\t\t\t{{ apiResult.NFT.transactionHash | slice: 0 : 10 }}...{{ apiResult.NFT.transactionHash | slice: -10 }}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- IPFS Information -->\n\t\t\t<div class=\"data-section\" *ngIf=\"apiResult.ipfs\">\n\t\t\t\t<h3 class=\"section-title\">🌐 IPFS Storage</h3>\n\t\t\t\t<div class=\"ipfs-info\">\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>IPFS Hash</label>\n\t\t\t\t\t\t<span class=\"hash\">{{ apiResult.ipfs.hash }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Gateway URL</label>\n\t\t\t\t\t\t<a [href]=\"apiResult.ipfs.gatewayUrl\" target=\"_blank\" class=\"gateway-link\"> View on IPFS Gateway </a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>File Size</label>\n\t\t\t\t\t\t<span>{{ apiResult.ipfs.pinSize }} bytes</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Uploaded</label>\n\t\t\t\t\t\t<span>{{ apiResult.ipfs.timestamp ? (apiResult.ipfs.timestamp | date: \"medium\") : \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- ZelfProof Information -->\n\t\t\t<div class=\"data-section\" *ngIf=\"apiResult.zelfProof\">\n\t\t\t\t<h3 class=\"section-title\">🔐 ZelfProof Generated</h3>\n\t\t\t\t<div class=\"zelfproof-info\">\n\t\t\t\t\t<div class=\"data-item full-width\">\n\t\t\t\t\t\t<label>ZelfProof String</label>\n\t\t\t\t\t\t<span class=\"zelfproof-string\" (click)=\"copyZelfProof()\" title=\"Click to copy\">{{ apiResult.zelfProof }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item full-width\">\n\t\t\t\t\t\t<label>QR Code</label>\n\t\t\t\t\t\t<div class=\"qr-code\">\n\t\t\t\t\t\t\t<img [src]=\"apiResult.zelfQR\" alt=\"ZelfProof QR Code\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- API Response Debug (Collapsible) -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\" (click)=\"toggleDebugView()\" class=\"debug-toggle\">\n\t\t\t\t\t🔍 Debug Information <span class=\"toggle-icon\">{{ showDebug ? \"▼\" : \"▶\" }}</span>\n\t\t\t\t</h3>\n\t\t\t\t<div class=\"api-response\" *ngIf=\"showDebug\">\n\t\t\t\t\t<pre class=\"json-display\">{{ apiResult | json }}</pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Next Steps -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\">Next Steps</h3>\n\t\t\t\t<div class=\"next-steps\">\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'success'\">\n\t\t\t\t\t\tYour password is now securely stored. You can view it in your passwords list or add another password.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'error'\">\n\t\t\t\t\t\tPlease review the error details above and try again. If the problem persists, contact support.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'unknown'\">\n\t\t\t\t\t\tThe system couldn't determine the status. Please check the API response above for details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Loading State -->\n\t\t<div class=\"loading-state\" *ngIf=\"loading\">\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<p>Loading result...</p>\n\t\t</div>\n\n\t\t<!-- Action Buttons -->\n\t\t<div class=\"result-actions\">\n\t\t\t<button class=\"btn-secondary\" (click)=\"onBackToPasswords()\">Back to Passwords</button>\n\t\t\t<button class=\"btn-primary\" (click)=\"onAddAnotherPassword()\">Add Another Password</button>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["DataPassingService","chromeService","dataStore","resultStore","constructor","setTimeout","loadFromStorage","storeData","formType","data","_this","_asyncToGenerator","saveToStorage","getData","storeResult","result","_this2","getResult","clearData","removeItem","clearResult","clearAll","_this3","hasData","hasResult","getAllData","formData","resultData","_this4","storageData","timestamp","Date","now","isExtension","setItem","localStorage","JSON","stringify","error","console","_this5","getItem","localData","parse","maxAge","clearAllStorage","clearStorageForType","_this6","getStorageInfo","hasChromeService","storageKeys","Object","keys","concat","i0","ɵɵinject","i1","ChromeService","factory","ɵfac","providedIn","CommonModule","TranslocoModule","RouterModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","apiResult","message","ɵɵelement","ɵɵproperty","NFT","metadata","image","ɵɵsanitizeUrl","ɵɵtextInterpolate1","tokenId","cost","contractAddress","explorerUrl","ɵɵtextInterpolate2","ɵɵpipeBind3","transactionHash","ɵɵpipeBind2","ipfs","hash","gatewayUrl","pinSize","ɵɵlistener","PasswordResultComponent_div_9_div_39_Template_span_click_7_listener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","copyZelfProof","zelfProof","zelfQR","ɵɵpipeBind1","ɵɵtemplate","PasswordResultComponent_div_9_div_1_Template","PasswordResultComponent_div_9_div_37_Template","PasswordResultComponent_div_9_div_38_Template","PasswordResultComponent_div_9_div_39_Template","PasswordResultComponent_div_9_Template_h3_click_41_listener","_r1","toggleDebugView","PasswordResultComponent_div_9_div_45_Template","PasswordResultComponent_div_9_p_50_Template","PasswordResultComponent_div_9_p_51_Template","PasswordResultComponent_div_9_p_52_Template","getResultStatus","publicData","website","passwordData","url","username","email","type","category","zelfName","success","showDebug","PasswordResultComponent","router","route","dataPassingService","loading","ngOnInit","ensureFullScreen","onBackToPasswords","navigate","onAddAnotherPassword","navigator","clipboard","writeText","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","status","getStatusIcon","getStatusTitle","getStatusMessage","ɵɵdirectiveInject","Router","ActivatedRoute","i2","i3","selectors","decls","vars","consts","template","PasswordResultComponent_Template","rf","ctx","PasswordResultComponent_div_9_Template","PasswordResultComponent_div_10_Template","PasswordResultComponent_Template_button_click_12_listener","PasswordResultComponent_Template_button_click_14_listener","i4","NgIf","JsonPipe","SlicePipe","DatePipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}