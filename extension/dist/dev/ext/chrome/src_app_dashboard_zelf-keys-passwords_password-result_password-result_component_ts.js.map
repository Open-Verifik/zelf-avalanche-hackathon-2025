{"version":3,"file":"src_app_dashboard_zelf-keys-passwords_password-result_password-result_component_ts.js","mappings":"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","sources":["./src/app/dashboard/zelf-keys-passwords/password-result/password-result.component.ts","./src/app/dashboard/zelf-keys-passwords/password-result/password-result.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router, ActivatedRoute } from \"@angular/router\";\n\n@Component({\n\tselector: \"app-password-result\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule],\n\ttemplateUrl: \"./password-result.component.html\",\n\tstyleUrls: [\"./password-result.component.scss\"],\n})\nexport class PasswordResultComponent implements OnInit {\n\tapiResult: any = {};\n\tpasswordData: any = {};\n\tloading = true;\n\tshowDebug = false;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute\n\t) {}\n\n\tngOnInit(): void {\n\t\t// Get result data from route query params\n\t\tthis.route.queryParams.subscribe((params) => {\n\t\t\tif (params[\"result\"]) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.apiResult = JSON.parse(params[\"result\"]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"Error parsing API result:\", e);\n\t\t\t\t\tthis.apiResult = { error: \"Failed to parse API response\" };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (params[\"passwordData\"]) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.passwordData = JSON.parse(decodeURIComponent(params[\"passwordData\"]));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(\"Error parsing password data:\", e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.loading = false;\n\t\t});\n\t}\n\n\tonBackToPasswords(): void {\n\t\tthis.router.navigate([\"/dashboard/passwords\"]);\n\t}\n\n\tonAddAnotherPassword(): void {\n\t\tthis.router.navigate([\"/dashboard/passwords/new\"]);\n\t}\n\n\ttoggleDebugView(): void {\n\t\tthis.showDebug = !this.showDebug;\n\t}\n\n\tgetResultStatus(): \"success\" | \"error\" | \"unknown\" {\n\t\tif (this.apiResult.error || this.apiResult.status === \"error\") {\n\t\t\treturn \"error\";\n\t\t}\n\t\tif (this.apiResult.status === \"success\" || this.apiResult.data) {\n\t\t\treturn \"success\";\n\t\t}\n\t\treturn \"unknown\";\n\t}\n\n\tgetStatusIcon(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"✅\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"❌\";\n\t\t\tdefault:\n\t\t\t\treturn \"❓\";\n\t\t}\n\t}\n\n\tgetStatusTitle(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"Password Stored Successfully!\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"Error Storing Password\";\n\t\t\tdefault:\n\t\t\t\treturn \"Unknown Status\";\n\t\t}\n\t}\n\n\tgetStatusMessage(): string {\n\t\tswitch (this.getResultStatus()) {\n\t\t\tcase \"success\":\n\t\t\t\treturn \"Your password has been securely stored with biometric verification.\";\n\t\t\tcase \"error\":\n\t\t\t\treturn \"There was an error storing your password. Please try again.\";\n\t\t\tdefault:\n\t\t\t\treturn \"The status of your password storage request is unclear.\";\n\t\t}\n\t}\n}\n","<div class=\"password-result-container\">\n\t<div class=\"result-card\">\n\t\t<div class=\"result-header\">\n\t\t\t<div class=\"status-icon\">{{ getStatusIcon() }}</div>\n\t\t\t<h1 class=\"result-title\">{{ getStatusTitle() }}</h1>\n\t\t\t<p class=\"result-message\">{{ getStatusMessage() }}</p>\n\t\t</div>\n\n\t\t<div class=\"result-content\" *ngIf=\"!loading\">\n\t\t\t<!-- Success Summary -->\n\t\t\t<div class=\"data-section\" *ngIf=\"getResultStatus() === 'success'\">\n\t\t\t\t<h3 class=\"section-title\">🎉 Storage Successful!</h3>\n\t\t\t\t<div class=\"success-summary\">\n\t\t\t\t\t<p class=\"success-message\">{{ apiResult.message || \"Password stored successfully!\" }}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Password Data Summary -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\">📝 Stored Password Details</h3>\n\t\t\t\t<div class=\"data-grid\">\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Website</label>\n\t\t\t\t\t\t<span>{{ apiResult.publicData?.website || passwordData.url || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Username</label>\n\t\t\t\t\t\t<span>{{ apiResult.publicData?.username || passwordData.email || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Type</label>\n\t\t\t\t\t\t<span class=\"type-badge\">{{ apiResult.publicData?.type || \"password\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Category</label>\n\t\t\t\t\t\t<span class=\"category-badge\">{{ apiResult.publicData?.category || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Zelf Name</label>\n\t\t\t\t\t\t<span>{{ apiResult.publicData?.zelfName || \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Timestamp</label>\n\t\t\t\t\t\t<span>{{ apiResult.publicData?.timestamp ? (apiResult.publicData.timestamp | date: \"medium\") : \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- NFT Information -->\n\t\t\t<div class=\"data-section\" *ngIf=\"apiResult.NFT?.success\">\n\t\t\t\t<h3 class=\"section-title\">🖼️ NFT Created</h3>\n\t\t\t\t<div class=\"nft-info\">\n\t\t\t\t\t<div class=\"nft-image\">\n\t\t\t\t\t\t<img [src]=\"apiResult.NFT.metadata.image\" alt=\"ZelfKey NFT\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"nft-details\">\n\t\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t\t<label>Token ID</label>\n\t\t\t\t\t\t\t<span class=\"token-id\">#{{ apiResult.NFT.tokenId }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t\t<label>Cost</label>\n\t\t\t\t\t\t\t<span class=\"cost\">{{ apiResult.NFT.cost }} AVAX</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t\t<label>Contract</label>\n\t\t\t\t\t\t\t<span class=\"contract-address\">{{ apiResult.NFT.contractAddress }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t\t<label>Transaction</label>\n\t\t\t\t\t\t\t<a [href]=\"apiResult.NFT.explorerUrl\" target=\"_blank\" class=\"tx-link\">\n\t\t\t\t\t\t\t\t{{ apiResult.NFT.transactionHash | slice: 0 : 10 }}...{{ apiResult.NFT.transactionHash | slice: -10 }}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- IPFS Information -->\n\t\t\t<div class=\"data-section\" *ngIf=\"apiResult.ipfs\">\n\t\t\t\t<h3 class=\"section-title\">🌐 IPFS Storage</h3>\n\t\t\t\t<div class=\"ipfs-info\">\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>IPFS Hash</label>\n\t\t\t\t\t\t<span class=\"hash\">{{ apiResult.ipfs.hash }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Gateway URL</label>\n\t\t\t\t\t\t<a [href]=\"apiResult.ipfs.gatewayUrl\" target=\"_blank\" class=\"gateway-link\"> View on IPFS Gateway </a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>File Size</label>\n\t\t\t\t\t\t<span>{{ apiResult.ipfs.pinSize }} bytes</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>Uploaded</label>\n\t\t\t\t\t\t<span>{{ apiResult.ipfs.timestamp ? (apiResult.ipfs.timestamp | date: \"medium\") : \"N/A\" }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- ZelfProof Information -->\n\t\t\t<div class=\"data-section\" *ngIf=\"apiResult.zelfProof\">\n\t\t\t\t<h3 class=\"section-title\">🔐 ZelfProof Generated</h3>\n\t\t\t\t<div class=\"zelfproof-info\">\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>ZelfProof</label>\n\t\t\t\t\t\t<span class=\"zelfproof-string\">{{ apiResult.zelfProof | slice: 0 : 50 }}...</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item\">\n\t\t\t\t\t\t<label>QR Code</label>\n\t\t\t\t\t\t<div class=\"qr-code\">\n\t\t\t\t\t\t\t<img [src]=\"apiResult.zelfQR\" alt=\"ZelfProof QR Code\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- API Response Debug (Collapsible) -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\" (click)=\"toggleDebugView()\" class=\"debug-toggle\">\n\t\t\t\t\t🔍 Debug Information <span class=\"toggle-icon\">{{ showDebug ? \"▼\" : \"▶\" }}</span>\n\t\t\t\t</h3>\n\t\t\t\t<div class=\"api-response\" *ngIf=\"showDebug\">\n\t\t\t\t\t<pre class=\"json-display\">{{ apiResult | json }}</pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Next Steps -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\">Next Steps</h3>\n\t\t\t\t<div class=\"next-steps\">\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'success'\">\n\t\t\t\t\t\tYour password is now securely stored. You can view it in your passwords list or add another password.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'error'\">\n\t\t\t\t\t\tPlease review the error details above and try again. If the problem persists, contact support.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p *ngIf=\"getResultStatus() === 'unknown'\">\n\t\t\t\t\t\tThe system couldn't determine the status. Please check the API response above for details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Loading State -->\n\t\t<div class=\"loading-state\" *ngIf=\"loading\">\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<p>Loading result...</p>\n\t\t</div>\n\n\t\t<!-- Action Buttons -->\n\t\t<div class=\"result-actions\">\n\t\t\t<button class=\"btn-secondary\" (click)=\"onBackToPasswords()\">Back to Passwords</button>\n\t\t\t<button class=\"btn-primary\" (click)=\"onAddAnotherPassword()\">Add Another Password</button>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["CommonModule","TranslocoModule","RouterModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","apiResult","message","ɵɵelement","ɵɵproperty","NFT","metadata","image","ɵɵsanitizeUrl","ɵɵtextInterpolate1","tokenId","cost","contractAddress","explorerUrl","ɵɵtextInterpolate2","ɵɵpipeBind3","transactionHash","ɵɵpipeBind2","ipfs","hash","gatewayUrl","pinSize","timestamp","zelfProof","zelfQR","ɵɵpipeBind1","ɵɵtemplate","PasswordResultComponent_div_9_div_1_Template","PasswordResultComponent_div_9_div_37_Template","PasswordResultComponent_div_9_div_38_Template","PasswordResultComponent_div_9_div_39_Template","ɵɵlistener","PasswordResultComponent_div_9_Template_h3_click_41_listener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","toggleDebugView","PasswordResultComponent_div_9_div_45_Template","PasswordResultComponent_div_9_p_50_Template","PasswordResultComponent_div_9_p_51_Template","PasswordResultComponent_div_9_p_52_Template","getResultStatus","publicData","website","passwordData","url","username","email","type","category","zelfName","success","showDebug","PasswordResultComponent","router","route","loading","constructor","ngOnInit","queryParams","subscribe","params","JSON","parse","e","console","error","decodeURIComponent","onBackToPasswords","navigate","onAddAnotherPassword","status","data","getStatusIcon","getStatusTitle","getStatusMessage","ɵɵdirectiveInject","i1","Router","ActivatedRoute","selectors","decls","vars","consts","template","PasswordResultComponent_Template","rf","ctx","PasswordResultComponent_div_9_Template","PasswordResultComponent_div_10_Template","PasswordResultComponent_Template_button_click_12_listener","PasswordResultComponent_Template_button_click_14_listener","i2","NgIf","JsonPipe","SlicePipe","DatePipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}