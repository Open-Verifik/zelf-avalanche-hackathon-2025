{"version":3,"file":"src_app_dashboard_zelf-keys-notes_note-result_note-result_component_ts.js","mappings":"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","sources":["./src/app/services/data-passing.service.ts","./src/app/dashboard/zelf-keys-notes/note-result/note-result.component.ts","./src/app/dashboard/zelf-keys-notes/note-result/note-result.component.html"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { ChromeService } from \"../chrome.service\";\n\nexport interface FormData {\n\t[key: string]: any;\n}\n\nexport interface ApiResult {\n\tsuccess: boolean;\n\tzelfProof: string;\n\tzelfQR: string;\n\tNFT?: {\n\t\tsuccess: boolean;\n\t\ttokenId: string;\n\t\ttransactionHash: string;\n\t\trecipient: string;\n\t\tcost: string;\n\t\tmetadata: any;\n\t\tmetadataUrl: string;\n\t\texplorerUrl: string;\n\t\towner: string;\n\t\tcontractAddress: string;\n\t};\n\tipfs?: {\n\t\thash: string;\n\t\tgatewayUrl: string;\n\t\tpinSize: number;\n\t\ttimestamp: string;\n\t\tname: string;\n\t\tmetadata: any;\n\t};\n\tpublicData?: any;\n\tmessage: string;\n}\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class DataPassingService {\n\tprivate dataStore: { [key: string]: FormData } = {};\n\tprivate resultStore: { [key: string]: ApiResult } = {};\n\n\tconstructor(private chromeService: ChromeService) {\n\t\t// Load any existing data from localStorage on service initialization\n\t\t// Use setTimeout to avoid blocking constructor\n\t\tsetTimeout(() => {\n\t\t\tthis.loadFromStorage();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Store form data for a specific form type\n\t */\n\tasync storeData(formType: string, data: FormData): Promise<void> {\n\t\tthis.dataStore[formType] = data;\n\t\tawait this.saveToStorage();\n\t}\n\n\t/**\n\t * Retrieve form data for a specific form type\n\t */\n\tgetData(formType: string): FormData | null {\n\t\tconst data = this.dataStore[formType];\n\t\treturn data || null;\n\t}\n\n\t/**\n\t * Store API result for a specific form type\n\t */\n\tasync storeResult(formType: string, result: ApiResult): Promise<void> {\n\t\tthis.resultStore[formType] = result;\n\t\tawait this.saveToStorage();\n\t}\n\n\t/**\n\t * Retrieve API result for a specific form type\n\t */\n\tgetResult(formType: string): ApiResult | null {\n\t\tconst result = this.resultStore[formType];\n\t\treturn result || null;\n\t}\n\n\t/**\n\t * Clear form data for a specific form type\n\t */\n\tclearData(formType: string): void {\n\t\t// also store it from the chrome storage\n\t\tthis.chromeService.removeItem(`zelfDataPassing`);\n\t\tdelete this.dataStore[formType];\n\t}\n\n\t/**\n\t * Clear result data for a specific form type\n\t */\n\tclearResult(formType: string): void {\n\t\tdelete this.resultStore[formType];\n\t}\n\n\t/**\n\t * Clear all data for a specific form type (both form and result)\n\t */\n\tasync clearAll(formType: string): Promise<void> {\n\t\tthis.clearData(formType);\n\t\tthis.clearResult(formType);\n\t\tawait this.saveToStorage();\n\t}\n\n\t/**\n\t * Check if form data exists for a specific form type\n\t */\n\thasData(formType: string): boolean {\n\t\treturn !!this.dataStore[formType];\n\t}\n\n\t/**\n\t * Check if result data exists for a specific form type\n\t */\n\thasResult(formType: string): boolean {\n\t\treturn !!this.resultStore[formType];\n\t}\n\n\t/**\n\t * Get all stored data for debugging\n\t */\n\tgetAllData(): { formData: { [key: string]: FormData }; resultData: { [key: string]: ApiResult } } {\n\t\treturn {\n\t\t\tformData: { ...this.dataStore },\n\t\t\tresultData: { ...this.resultStore },\n\t\t};\n\t}\n\n\t/**\n\t * Save data to localStorage for persistence\n\t */\n\tprivate async saveToStorage(): Promise<void> {\n\t\ttry {\n\t\t\tconst storageData = {\n\t\t\t\tdataStore: this.dataStore,\n\t\t\t\tresultStore: this.resultStore,\n\t\t\t\ttimestamp: Date.now(),\n\t\t\t};\n\n\t\t\tif (this.chromeService.isExtension) {\n\t\t\t\t// Use Chrome storage for extension\n\t\t\t\tawait this.chromeService.setItem(\"zelfDataPassing\", storageData);\n\t\t\t} else {\n\t\t\t\t// Use localStorage for web\n\t\t\t\tlocalStorage.setItem(\"zelfDataPassing\", JSON.stringify(storageData));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error saving to storage:\", error);\n\t\t}\n\t}\n\n\t/**\n\t * Load data from localStorage on service initialization\n\t */\n\tprivate async loadFromStorage(): Promise<void> {\n\t\ttry {\n\t\t\tlet storageData: any = null;\n\n\t\t\tif (this.chromeService.isExtension) {\n\t\t\t\t// Use Chrome storage for extension\n\t\t\t\tstorageData = await this.chromeService.getItem(\"zelfDataPassing\");\n\t\t\t} else {\n\t\t\t\t// Use localStorage for web\n\t\t\t\tconst localData = localStorage.getItem(\"zelfDataPassing\");\n\t\t\t\tstorageData = localData ? JSON.parse(localData) : null;\n\t\t\t}\n\n\t\t\tif (storageData) {\n\t\t\t\tconst maxAge = 24 * 60 * 60 * 1000; // 24 hours\n\n\t\t\t\t// Check if data is not too old\n\t\t\t\tif (Date.now() - storageData.timestamp < maxAge) {\n\t\t\t\t\tthis.dataStore = storageData.dataStore || {};\n\t\t\t\t\tthis.resultStore = storageData.resultStore || {};\n\t\t\t\t} else {\n\t\t\t\t\tthis.clearAllStorage();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error loading from storage:\", error);\n\t\t\t// Clear potentially corrupted data\n\t\t\tthis.clearAllStorage();\n\t\t}\n\t}\n\n\t/**\n\t * Clear all data from both memory and storage\n\t */\n\tclearAllStorage(): void {\n\t\tthis.dataStore = {};\n\t\tthis.resultStore = {};\n\n\t\ttry {\n\t\t\tif (this.chromeService.isExtension) {\n\t\t\t\tthis.chromeService.removeItem(\"zelfDataPassing\");\n\t\t\t} else {\n\t\t\t\tlocalStorage.removeItem(\"zelfDataPassing\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error clearing storage:\", error);\n\t\t}\n\t}\n\n\t/**\n\t * Manually clear storage for a specific form type\n\t */\n\tasync clearStorageForType(formType: string): Promise<void> {\n\t\tawait this.clearAll(formType);\n\t}\n\n\t/**\n\t * Get storage info for debugging\n\t */\n\tgetStorageInfo(): { isExtension: boolean; hasChromeService: boolean; storageKeys: string[] } {\n\t\treturn {\n\t\t\tisExtension: this.chromeService.isExtension,\n\t\t\thasChromeService: !!this.chromeService,\n\t\t\tstorageKeys: Object.keys(this.dataStore).concat(Object.keys(this.resultStore)),\n\t\t};\n\t}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router, ActivatedRoute } from \"@angular/router\";\nimport { ChromeService } from \"../../../chrome.service\";\nimport { DataPassingService, ApiResult } from \"../../../services/data-passing.service\";\n\n@Component({\n\tselector: \"app-note-result\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule],\n\ttemplateUrl: \"./note-result.component.html\",\n\tstyleUrls: [\"./note-result.component.scss\"],\n})\nexport class NoteResultComponent implements OnInit {\n\tapiResult: any = null;\n\tloading = false;\n\terror: string | null = null;\n\tshowDebug = false;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate chromeService: ChromeService,\n\t\tprivate dataPassingService: DataPassingService\n\t) {}\n\n\tasync ngOnInit(): Promise<void> {\n\t\t// Ensure extension is in full screen mode for better user experience\n\t\tif (this.chromeService.isExtension) {\n\t\t\tawait this.chromeService.ensureFullScreen(\"dashboard/notes/result\");\n\t\t}\n\n\t\t// Get data from service instead of query params\n\n\t\t// Get API result from service\n\t\tconst apiResult = this.dataPassingService.getResult(\"notes\");\n\t\tif (apiResult) {\n\t\t\tthis.apiResult = apiResult;\n\t\t} else {\n\t\t\tthis.error = \"No API result available\";\n\t\t}\n\t}\n\n\tgetResultStatus(): \"success\" | \"error\" | \"unknown\" {\n\t\tif (this.error) return \"error\";\n\t\tif (this.apiResult?.success) return \"success\";\n\t\treturn \"unknown\";\n\t}\n\n\ttoggleDebugView(): void {\n\t\tthis.showDebug = !this.showDebug;\n\t}\n\n\tonBackToNotes(): void {\n\t\tthis.router.navigate([\"/dashboard/notes\"]);\n\t}\n\n\tasync onAddAnotherNote(): Promise<void> {\n\t\t// Clear the stored data when starting fresh\n\t\tawait this.dataPassingService.clearAll(\"notes\");\n\t\tthis.router.navigate([\"/dashboard/notes/new\"]);\n\t}\n\n\tasync copyZelfProof(): Promise<void> {\n\t\tif (this.apiResult?.zelfProof) {\n\t\t\ttry {\n\t\t\t\tawait navigator.clipboard.writeText(this.apiResult.zelfProof);\n\t\t\t} catch (error) {\n\t\t\t\t// Fallback for older browsers\n\t\t\t\tconst textArea = document.createElement(\"textarea\");\n\t\t\t\ttextArea.value = this.apiResult.zelfProof;\n\t\t\t\tdocument.body.appendChild(textArea);\n\t\t\t\ttextArea.select();\n\t\t\t\tdocument.execCommand(\"copy\");\n\t\t\t\tdocument.body.removeChild(textArea);\n\t\t\t}\n\t\t}\n\t}\n}\n","<div class=\"note-result\">\n\t<div class=\"result-container\">\n\t\t<!-- Success State -->\n\t\t<div *ngIf=\"getResultStatus() === 'success'\" class=\"success-state\">\n\t\t\t<div class=\"success-icon\">✅</div>\n\t\t\t<h2>Note Created Successfully!</h2>\n\t\t\t<p>Your note has been securely stored and encrypted</p>\n\n\t\t\t<!-- Note Information -->\n\t\t\t<div class=\"note-info\">\n\t\t\t\t<div class=\"info-item\">\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<span>{{ apiResult?.publicData?.title || \"Untitled Note\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-item\">\n\t\t\t\t\t<label>Type</label>\n\t\t\t\t\t<span>{{ apiResult?.publicData?.type || \"notes\" }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"info-item\">\n\t\t\t\t\t<label>Created</label>\n\t\t\t\t\t<span>{{ apiResult?.publicData?.timestamp | date: \"medium\" }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- ZelfProof Information -->\n\t\t\t<div class=\"data-section\" *ngIf=\"apiResult.zelfProof\">\n\t\t\t\t<h3 class=\"section-title\">🔐 ZelfProof Generated</h3>\n\t\t\t\t<div class=\"zelfproof-info\">\n\t\t\t\t\t<div class=\"data-item full-width\">\n\t\t\t\t\t\t<label>ZelfProof String</label>\n\t\t\t\t\t\t<span class=\"zelfproof-string\" (click)=\"copyZelfProof()\" title=\"Click to copy\">{{ apiResult.zelfProof }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"data-item full-width\">\n\t\t\t\t\t\t<label>QR Code</label>\n\t\t\t\t\t\t<div class=\"qr-code\">\n\t\t\t\t\t\t\t<img [src]=\"apiResult.zelfQR\" alt=\"ZelfProof QR Code\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- API Response Debug (Collapsible) -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\" (click)=\"toggleDebugView()\" class=\"debug-toggle\">\n\t\t\t\t\t🔍 Debug Information <span class=\"toggle-icon\">{{ showDebug ? \"▼\" : \"▶\" }}</span>\n\t\t\t\t</h3>\n\t\t\t\t<div class=\"api-response\" *ngIf=\"showDebug\">\n\t\t\t\t\t<pre class=\"json-display\">{{ apiResult | json }}</pre>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Next Steps -->\n\t\t\t<div class=\"data-section\">\n\t\t\t\t<h3 class=\"section-title\">Next Steps</h3>\n\t\t\t\t<div class=\"next-steps\">\n\t\t\t\t\t<p>Your note is now securely stored. You can view it in your notes list or add another note.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<!-- Error State -->\n\t\t<div *ngIf=\"getResultStatus() === 'error'\" class=\"error-state\">\n\t\t\t<div class=\"error-icon\">❌</div>\n\t\t\t<h2>Error Creating Note</h2>\n\t\t\t<p>{{ error || \"An error occurred while creating your note\" }}</p>\n\t\t</div>\n\n\t\t<!-- Unknown State -->\n\t\t<div *ngIf=\"getResultStatus() === 'unknown'\" class=\"unknown-state\">\n\t\t\t<div class=\"unknown-icon\">❓</div>\n\t\t\t<h2>Unknown Status</h2>\n\t\t\t<p>The system couldn't determine the status. Please check the result details.</p>\n\t\t</div>\n\n\t\t<!-- Action Buttons -->\n\t\t<div class=\"result-actions\">\n\t\t\t<button class=\"btn-secondary\" (click)=\"onBackToNotes()\">Back to Notes</button>\n\t\t\t<button class=\"btn-primary\" (click)=\"onAddAnotherNote()\">Add Another Note</button>\n\t\t</div>\n\t</div>\n</div>\n"],"names":["DataPassingService","chromeService","dataStore","resultStore","constructor","setTimeout","loadFromStorage","storeData","formType","data","_this","_asyncToGenerator","saveToStorage","getData","storeResult","result","_this2","getResult","clearData","removeItem","clearResult","clearAll","_this3","hasData","hasResult","getAllData","formData","resultData","_this4","storageData","timestamp","Date","now","isExtension","setItem","localStorage","JSON","stringify","error","console","_this5","getItem","localData","parse","maxAge","clearAllStorage","clearStorageForType","_this6","getStorageInfo","hasChromeService","storageKeys","Object","keys","concat","i0","ɵɵinject","i1","ChromeService","factory","ɵfac","providedIn","CommonModule","TranslocoModule","RouterModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NoteResultComponent_div_2_div_24_Template_span_click_7_listener","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","copyZelfProof","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","apiResult","zelfProof","ɵɵproperty","zelfQR","ɵɵsanitizeUrl","ɵɵpipeBind1","ɵɵtemplate","NoteResultComponent_div_2_div_24_Template","NoteResultComponent_div_2_Template_h3_click_26_listener","_r1","toggleDebugView","NoteResultComponent_div_2_div_30_Template","publicData","title","type","ɵɵpipeBind2","showDebug","NoteResultComponent","router","route","dataPassingService","loading","ngOnInit","ensureFullScreen","getResultStatus","success","onBackToNotes","navigate","onAddAnotherNote","navigator","clipboard","writeText","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","ɵɵdirectiveInject","Router","ActivatedRoute","i2","i3","selectors","decls","vars","consts","template","NoteResultComponent_Template","rf","ctx","NoteResultComponent_div_2_Template","NoteResultComponent_div_3_Template","NoteResultComponent_div_4_Template","NoteResultComponent_Template_button_click_6_listener","NoteResultComponent_Template_button_click_8_listener","i4","NgIf","JsonPipe","DatePipe","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}