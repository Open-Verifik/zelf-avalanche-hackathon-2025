{"version":3,"file":"src_app_welcome-recover_welcome-recover_component_ts.js","mappings":"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","sources":["./src/app/welcome-recover/welcome-recover.component.ts","./src/app/welcome-recover/welcome-recover.component.html","./src/app/captcha.service.ts"],"sourcesContent":["import { DatePipe, NgClass, NgIf, NgTemplateOutlet } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, ReactiveFormsModule, UntypedFormGroup, Validators } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { Router, RouterModule } from \"@angular/router\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { CaptchaService } from \"app/captcha.service\";\nimport { ChromeService } from \"app/chrome.service\";\nimport { WalletModel } from \"app/wallet\";\nimport { WalletService } from \"app/wallet.service\";\nimport { ZelfNameService } from \"app/zelf-name-service.service\";\n\n@Component({\n    imports: [\n        DatePipe,\n        MatButtonModule,\n        MatProgressSpinnerModule,\n        NgClass,\n        NgIf,\n        NgTemplateOutlet,\n        ReactiveFormsModule,\n        RouterModule,\n        TranslocoModule,\n    ],\n    selector: \"welcome-recover\",\n    styleUrls: [\"./welcome-recover.component.scss\"],\n    templateUrl: \"./welcome-recover.component.html\",\n})\nexport class WelcomeRecoverComponent implements OnInit {\n    captchaToken: string = \"\";\n    form!: UntypedFormGroup;\n    termsForm!: UntypedFormGroup;\n    loading: boolean = false;\n    showError: boolean = false;\n    searching: boolean = false;\n    showResult: boolean = false;\n    showSearch: boolean = false;\n    zelfName: string = \"\";\n    oldZelfNameObject: any;\n    newZelfNameObject: any;\n\n    constructor(\n        private _captchaService: CaptchaService,\n        private _chromeService: ChromeService,\n        private _formBuilder: FormBuilder,\n        private _router: Router,\n        private _walletService: WalletService,\n        private _zelfNameService: ZelfNameService\n    ) {\n        this._initForm();\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.oldZelfNameObject = new WalletModel(await this._zelfNameService.getZelfNameObject());\n\n        if (!this.oldZelfNameObject?.available) {\n            this.showSearch = true;\n\n            return;\n        }\n\n        this.newZelfNameObject = this.oldZelfNameObject;\n    }\n\n    private async _captchaGeneration(): Promise<any> {\n        if (this._chromeService.isExtension) return;\n\n        try {\n            this.captchaToken = await this._captchaService.executeRecaptcha(this.form.get(\"zelfName\")?.value.replace(\".\", \"_\"));\n        } catch (error) {\n            console.error(\"reCAPTCHA failed:\", error);\n        }\n    }\n\n    private _initForm(): void {\n        this.form = this._formBuilder.group({\n            zelfName: [\"\", [Validators.required, Validators.pattern(this._walletService.ZelfRegexNoPostfix)]],\n        });\n\n        this.termsForm = this._formBuilder.group({\n            termsAndConditions: [false, Validators.requiredTrue],\n        });\n    }\n\n    private async _queryForZelfObject(query: string): Promise<any> {\n        this.searching = true;\n\n        try {\n            await this._captchaGeneration();\n\n            const zelfNameObject = await this._queryZNS(\"zelfName\", query);\n\n            if (!zelfNameObject?.available) {\n                this._setError();\n\n                return zelfNameObject;\n            }\n\n            this.showSearch = false;\n            this.showResult = true;\n\n            return zelfNameObject;\n        } catch (error) {\n            this._setError();\n        } finally {\n            this.searching = false;\n        }\n    }\n\n    async _queryZNS(key: string, value: string): Promise<any> {\n        try {\n            const response = await this._zelfNameService.searchZelfNameV2(key, value, this.captchaToken);\n\n            if (!response.data || response.data.available) {\n                return new WalletModel({ zelfName: value, available: true });\n            }\n\n            const zelfNameObject = new WalletModel(response.data.ipfs?.length ? response.data.ipfs[0] : response.data.arweave[0]);\n\n            this.loading = false;\n\n            return zelfNameObject;\n        } catch (error) {\n            this._setError();\n\n            console.error({ error });\n\n            this.loading = false;\n\n            return null;\n        }\n    }\n\n    private _setError(): void {\n        this.showSearch = false;\n        this.showResult = true;\n        this.showError = true;\n    }\n\n    async pastedZelfName(event: ClipboardEvent): Promise<void> {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (this.searching) return;\n\n        const query = event.clipboardData?.getData(\"text\");\n\n        if (!query) return;\n\n        if (!this._walletService.ZelfRegexNoPostfix.test(query)) return;\n\n        this.form.patchValue({ zelfName: query });\n\n        this.newZelfNameObject = await this._queryForZelfObject(query + \".zelf\");\n    }\n\n    returnToForm(): void {\n        this.form.patchValue({ zelfName: \"\" }, { emitEvent: false });\n        this.form.markAsPristine();\n\n        this.showSearch = true;\n        this.showResult = false;\n        this.showError = false;\n        this.newZelfNameObject = null;\n    }\n\n    async searchZelfName(): Promise<void> {\n        if (this.searching || this.form.invalid) return;\n\n        const query = this.form.value.zelfName;\n\n        if (!query) return;\n\n        this.newZelfNameObject = await this._queryForZelfObject(query + \".zelf\");\n    }\n\n    async startReservation(): Promise<void> {\n        await this._zelfNameService.setNewZelfName(this.newZelfNameObject?.name || this.form.value.zelfName + \".zelf\");\n        await this._zelfNameService.setFlow(\"recover\");\n\n        this._router.navigate([\"/security/password\"], { queryParams: { return: \"/welcome/recover\" } });\n    }\n}\n","<div class=\"zelf-card welcome-recover\" *transloco=\"let t\">\n    <div class=\"zelf-card__header\">\n        <div class=\"welcome-recover__header-button\">\n            <button mat-icon-button class=\"zelf-icon-button zelf-icon-button--40\" [routerLink]=\"['../find']\">\n                <svg viewBox=\"0 0 22 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M20.0898 5.8277H4.72478L8.08478 2.4677C8.53978 2.0127 8.53978 1.2777 8.08478 0.822695C7.62978 0.367695 6.89478 0.367695 6.43978 0.822695L1.08478 6.1777C0.62978 6.6327 0.62978 7.3677 1.08478 7.8227L6.43978 13.1777C6.89478 13.6327 7.62978 13.6327 8.08478 13.1777C8.53978 12.7227 8.53978 11.9877 8.08478 11.5327L4.72478 8.16103H20.0898C20.7314 8.16103 21.2564 7.63603 21.2564 6.99436C21.2564 6.3527 20.7314 5.8277 20.0898 5.8277Z\"\n                    />\n                </svg>\n            </button>\n        </div>\n    </div>\n\n    <div class=\"zelf-card__content welcome-recover__content\">\n        <ng-container *ngIf=\"oldZelfNameObject && !showResult\">\n            <div class=\"welcome-recover__instructions-container\">\n                <svg width=\"80\" height=\"80\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M12.0108 0C13.363 1.83518 15.0993 3.92724 17.2883 6.08926H7.46094C9.5873 3.83728 11.0426 1.67625 12.0128 0H12.0108Z\"\n                        fill=\"#181818\"\n                    />\n                    <path\n                        d=\"M0 12.0282C1.7302 11.1886 4.0031 9.87119 6.28409 7.85609C6.48521 7.67817 6.68228 7.49826 6.87127 7.31934H15.6597C15.6597 7.31934 9.29476 16.3143 5.81213 16.3413C2.93891 16.3643 1.73525 13.0987 0 12.0272V12.0282Z\"\n                        fill=\"#181818\"\n                    />\n                    <path\n                        d=\"M12.5714 23.9996C11.5113 22.5603 10.1459 20.917 8.41675 19.2168H16.4977C14.7857 20.942 13.5073 22.6073 12.5725 23.9996H12.5714Z\"\n                        fill=\"#181818\"\n                    />\n                    <path\n                        d=\"M17.7785 17.7316C17.6835 17.8155 17.5906 17.9005 17.4986 17.9845H8.06335C8.06335 17.9845 14.5334 8.87256 18.0625 8.85357C21.0075 8.83857 22.2273 12.1821 24 13.2766C22.197 14.2891 20.0029 15.7295 17.7785 17.7316Z\"\n                        fill=\"#181818\"\n                    />\n                </svg>\n\n                <h2 class=\"zelf-card__title welcome-recover__title\">\n                    {{ t(oldZelfNameObject.available ? \"welcome.recover_your_zelfname\" : \"welcome.pick_your_new_zelfname\") }}\n                </h2>\n\n                <p\n                    class=\"welcome-recover__subtitle\"\n                    [innerHTML]=\"\n                        t(oldZelfNameObject.available ? 'welcome.recover_your_zelfname_description' : 'welcome.pick_your_new_zelfname_description', {\n                            zelfName: oldZelfNameObject.publicData.zelfName\n                        })\n                    \"\n                ></p>\n            </div>\n\n            <form [formGroup]=\"form\" class=\"welcome-recover__form\">\n                <div\n                    class=\"zelf-chip\"\n                    [ngClass]=\"{ 'zelf-chip--error': !oldZelfNameObject.available, 'zelf-chip--success': oldZelfNameObject.available }\"\n                >\n                    <ng-container *ngIf=\"!oldZelfNameObject.available\">{{ t(\"common.not_available\") }}</ng-container>\n                    <ng-container *ngIf=\"oldZelfNameObject.available\">{{ t(\"common.available\") }}</ng-container>\n                </div>\n\n                <h5 class=\"welcome-recover__zelf-name\">{{ oldZelfNameObject.publicData.zelfName }}</h5>\n\n                <p class=\"welcome-recover__expiration\" *ngIf=\"oldZelfNameObject.publicData.expiresAt\">\n                    {{ t(\"welcome.expiration_date\") }}\n\n                    <span class=\"welcome-recover__expiration-date\">{{ oldZelfNameObject.publicData.expiresAt | date : \"dd MMM, YYYY\" }}</span>\n\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 15 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M7.4935 0.333984C3.8135 0.333984 0.833496 3.32065 0.833496 7.00065C0.833496 10.6807 3.8135 13.6673 7.4935 13.6673C11.1802 13.6673 14.1668 10.6807 14.1668 7.00065C14.1668 3.32065 11.1802 0.333984 7.4935 0.333984ZM10.1668 9.66732C9.90683 9.92732 9.48683 9.92732 9.22683 9.66732L7.0335 7.47398C6.90683 7.34732 6.8335 7.18065 6.8335 7.00065V4.33398C6.8335 3.96732 7.1335 3.66732 7.50016 3.66732C7.86683 3.66732 8.16683 3.96732 8.16683 4.33398V6.72732L10.1668 8.72732C10.4268 8.98732 10.4268 9.40732 10.1668 9.66732Z\"\n                            fill=\"#0E26FF\"\n                        />\n                    </svg>\n                </p>\n\n                <div class=\"zelf-card__content welcome-recover__content\" *ngIf=\"showSearch\">\n                    <div\n                        class=\"zelf-input zelf-input--wide welcome-recover__input\"\n                        [ngClass]=\"{\n                            'zelf-input--error': form.controls.zelfName.invalid && form.controls.zelfName.dirty,\n                            'welcome-recover__input--margin-top': oldZelfNameObject.available\n                        }\"\n                    >\n                        <input\n                            (keydown.enter)=\"searchZelfName()\"\n                            (paste)=\"pastedZelfName($event)\"\n                            [disabled]=\"searching\"\n                            [readonly]=\"searching\"\n                            autocomplete=\"off\"\n                            class=\"zelf-input__control zelf-input__control--floating-label\"\n                            formControlName=\"zelfName\"\n                            required\n                            id=\"zelfName\"\n                            name=\"zelfName\"\n                            placeholder=\" \"\n                        />\n\n                        <label for=\"zelfName\" class=\"zelf-input__floating-label\">{{ t(\"welcome.search_your_new_zelfname\") }}</label>\n\n                        <button\n                            (click)=\"searchZelfName()\"\n                            [disabled]=\"searching || form.controls.zelfName.invalid || !form.controls.zelfName.value\"\n                            class=\"zelf-icon-button zelf-icon-button--black\"\n                            mat-icon-button\n                            type=\"button\"\n                        >\n                            <ng-container *ngIf=\"!searching\">\n                                <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path\n                                        fill-rule=\"evenodd\"\n                                        clip-rule=\"evenodd\"\n                                        d=\"M11.76 10.27L17.49 16L16 17.49L10.27 11.76C9.2 12.53 7.91 13 6.5 13C2.91 13 0 10.09 0 6.5C0 2.91 2.91 0 6.5 0C10.09 0 13 2.91 13 6.5C13 7.91 12.53 9.2 11.76 10.27ZM6.5 2C4.01 2 2 4.01 2 6.5C2 8.99 4.01 11 6.5 11C8.99 11 11 8.99 11 6.5C11 4.01 8.99 2 6.5 2Z\"\n                                    />\n                                </svg>\n                            </ng-container>\n\n                            <mat-spinner *ngIf=\"searching\" mode=\"indeterminate\" diameter=\"18\"></mat-spinner>\n                        </button>\n                    </div>\n\n                    <div\n                        class=\"zelf-message zelf-message--error zelf-message--column\"\n                        *ngIf=\"form.controls.zelfName.invalid && form.controls.zelfName.dirty\"\n                    >\n                        <ng-container *ngIf=\"form.controls.zelfName?.errors?.pattern\">\n                            <div class=\"zelf-message__row\">\n                                <ng-container *ngTemplateOutlet=\"cross\"></ng-container>\n                                <p>{{ t(\"errors.invalid_format\") }}</p>\n                            </div>\n                        </ng-container>\n\n                        <ng-container *ngIf=\"form.controls.zelfName?.errors?.required\">\n                            <div class=\"zelf-message__row\">\n                                <ng-container *ngTemplateOutlet=\"cross\"></ng-container>\n                                <p>{{ t(\"errors.required_field\") }}</p>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n            </form>\n        </ng-container>\n\n        <ng-container *ngIf=\"showResult\">\n            <ng-container *ngIf=\"showError\">\n                <div class=\"zelf-chip zelf-chip--error\">{{ t(\"common.not_available\") }}</div>\n\n                <h2 class=\"zelf-card__title welcome-recover__title\">{{ newZelfNameObject.publicData.zelfName }}</h2>\n\n                <p class=\"welcome-recover__expiration\">\n                    {{ t(\"welcome.registered_since\", { date: newZelfNameObject.publicData.registeredAt | date : \"MMM, YYYY\" }) }}\n                </p>\n            </ng-container>\n\n            <ng-container *ngIf=\"!showError\">\n                <div class=\"zelf-chip zelf-chip--success\">{{ t(\"common.available\") }}</div>\n\n                <h2 class=\"zelf-card__title welcome-recover__title\">\n                    {{ newZelfNameObject?.publicData?.zelfName || form.get(\"zelfName\")?.value + \".zelf\" }}\n                </h2>\n\n                <p class=\"welcome-recover__expiration\" *ngIf=\"oldZelfNameObject.available\">\n                    {{ t(\"welcome.you_can_transfer_this_domain\") }}\n\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 15C9.45 15 9 14.55 9 14V10C9 9.45 9.45 9 10 9C10.55 9 11 9.45 11 10V14C11 14.55 10.55 15 10 15ZM11 7H9V5H11V7Z\"\n                            fill=\"#181818\"\n                        />\n                    </svg>\n                </p>\n\n                <div class=\"transfer\">\n                    <div class=\"transfer__col\">\n                        <p class=\"transfer__label\">{{ t(\"welcome.old_domain\") }}</p>\n                        <p class=\"transfer__value\">{{ oldZelfNameObject.publicData.zelfName }}</p>\n                    </div>\n\n                    <div class=\"transfer__icon\">\n                        <svg width=\"13\" height=\"13\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path\n                                d=\"M20 10C20 4.48 15.52 0 10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10ZM10 12.79V11H7C6.45 11 6 10.55 6 10C6 9.45 6.45 9 7 9H10V7.21C10 6.76 10.54 6.54 10.85 6.86L13.64 9.65C13.84 9.85 13.84 10.16 13.64 10.36L10.85 13.15C10.54 13.46 10 13.24 10 12.79Z\"\n                                fill=\"#181818\"\n                            />\n                        </svg>\n                    </div>\n\n                    <div class=\"transfer__col\">\n                        <p class=\"transfer__label\">{{ t(\"welcome.new_domain\") }}</p>\n                        <p class=\"transfer__value\">{{ newZelfNameObject?.publicData?.zelfName || form.get(\"zelfName\")?.value + \".zelf\" }}</p>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n\n    <div class=\"zelf-card__actions zelf-card__actions--column welcome-recover__actions\" *ngIf=\"!showSearch\">\n        <ng-container *ngIf=\"showError\">\n            <button (click)=\"returnToForm()\" class=\"zelf-button zelf-button--black zelf-button--wide\" mat-flat-button type=\"button\">\n                {{ t(\"welcome.search_another_zelfname\") }}\n            </button>\n        </ng-container>\n\n        <ng-container *ngIf=\"!showError\">\n            <form [formGroup]=\"termsForm\" class=\"transfer-form\">\n                <label class=\"zelf-checkbox\">\n                    <input formControlName=\"termsAndConditions\" id=\"termsAndConditions\" name=\"termsAndConditions\" type=\"checkbox\" />\n\n                    <svg viewBox=\"0 0 21 21\">\n                        <polyline points=\"5 10.75 8.5 14.25 16 6\"></polyline>\n                    </svg>\n\n                    <span [innerHTML]=\"t('common.agree_to_terms_and_conditions')\"></span>\n                </label>\n\n                <button (click)=\"returnToForm()\" class=\"zelf-button zelf-button--outlined zelf-button--wide\" mat-flat-button type=\"button\">\n                    {{ t(\"welcome.search_another_zelfname\") }}\n                </button>\n\n                <button\n                    (click)=\"startReservation()\"\n                    [disabled]=\"termsForm.get('termsAndConditions')?.invalid\"\n                    class=\"zelf-button zelf-button--black zelf-button--wide\"\n                    mat-flat-button\n                    type=\"button\"\n                >\n                    {{ t(\"welcome.decrypt_and_reserve\") }}\n                </button>\n            </form>\n        </ng-container>\n    </div>\n</div>\n\n<ng-template #cross>\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M10 0C4.47 0 0 4.47 0 10C0 15.53 4.47 20 10 20C15.53 20 20 15.53 20 10C20 4.47 15.53 0 10 0ZM14.3 14.3C13.91 14.69 13.28 14.69 12.89 14.3L10 11.41L7.11 14.3C6.72 14.69 6.09 14.69 5.7 14.3C5.31 13.91 5.31 13.28 5.7 12.89L8.59 10L5.7 7.11C5.31 6.72 5.31 6.09 5.7 5.7C6.09 5.31 6.72 5.31 7.11 5.7L10 8.59L12.89 5.7C13.28 5.31 13.91 5.31 14.3 5.7C14.69 6.09 14.69 6.72 14.3 7.11L11.41 10L14.3 12.89C14.68 13.27 14.68 13.91 14.3 14.3Z\"\n            fill=\"#DC362E\"\n        />\n    </svg>\n</ng-template>\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"environments/environment\";\nimport { ChromeService } from \"./chrome.service\";\n\ndeclare var grecaptcha: any;\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class CaptchaService {\n    captchaToken: string = \"\";\n\n    constructor(private _chromeService: ChromeService) {}\n\n    executeRecaptcha(action: string): Promise<string> {\n        if (this._chromeService.isExtension) return Promise.resolve(\"\");\n\n        return new Promise((resolve, reject) => {\n            if (typeof grecaptcha !== \"undefined\") {\n                grecaptcha.enterprise.ready(() => {\n                    grecaptcha.enterprise\n                        .execute(environment?.captchaKey, { action })\n                        .then((token: string) => resolve(token))\n                        .catch((err: any) => reject(err));\n                });\n            } else {\n                reject(\"reCAPTCHA not loaded\");\n            }\n        });\n    }\n\n    retainCaptchaToken(token: string): void {\n        this.captchaToken = token;\n    }\n\n    getCaptchaToken() {\n        return this.captchaToken;\n    }\n}\n"],"names":["DatePipe","NgClass","NgIf","NgTemplateOutlet","ReactiveFormsModule","Validators","MatButtonModule","MatProgressSpinnerModule","RouterModule","TranslocoModule","WalletModel","i0","ɵɵelementContainerStart","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","t_r1","ɵɵelementStart","ɵɵelementEnd","ɵɵelement","ɵɵtextInterpolate1","ɵɵpipeBind2","ctx_r1","oldZelfNameObject","publicData","expiresAt","ɵɵelementContainer","ɵɵtemplate","WelcomeRecoverComponent_div_0_ng_container_7_div_17_div_8_ng_container_1_ng_container_2_Template","ɵɵproperty","cross_r4","WelcomeRecoverComponent_div_0_ng_container_7_div_17_div_8_ng_container_2_ng_container_2_Template","WelcomeRecoverComponent_div_0_ng_container_7_div_17_div_8_ng_container_1_Template","WelcomeRecoverComponent_div_0_ng_container_7_div_17_div_8_ng_container_2_Template","form","controls","zelfName","errors","pattern","required","ɵɵlistener","WelcomeRecoverComponent_div_0_ng_container_7_div_17_Template_input_keydown_enter_2_listener","ɵɵrestoreView","_r3","ɵɵnextContext","ɵɵresetView","searchZelfName","WelcomeRecoverComponent_div_0_ng_container_7_div_17_Template_input_paste_2_listener","$event","pastedZelfName","WelcomeRecoverComponent_div_0_ng_container_7_div_17_Template_button_click_5_listener","WelcomeRecoverComponent_div_0_ng_container_7_div_17_ng_container_6_Template","WelcomeRecoverComponent_div_0_ng_container_7_div_17_mat_spinner_7_Template","WelcomeRecoverComponent_div_0_ng_container_7_div_17_div_8_Template","ɵɵpureFunction2","_c3","invalid","dirty","available","searching","value","WelcomeRecoverComponent_div_0_ng_container_7_ng_container_12_Template","WelcomeRecoverComponent_div_0_ng_container_7_ng_container_13_Template","WelcomeRecoverComponent_div_0_ng_container_7_p_16_Template","WelcomeRecoverComponent_div_0_ng_container_7_div_17_Template","ɵɵpureFunction1","_c1","ɵɵsanitizeHtml","_c2","showSearch","newZelfNameObject","_c4","registeredAt","WelcomeRecoverComponent_div_0_ng_container_8_ng_container_2_p_5_Template","tmp_6_0","get","tmp_11_0","WelcomeRecoverComponent_div_0_ng_container_8_ng_container_1_Template","WelcomeRecoverComponent_div_0_ng_container_8_ng_container_2_Template","showError","WelcomeRecoverComponent_div_0_div_9_ng_container_1_Template_button_click_1_listener","_r5","returnToForm","WelcomeRecoverComponent_div_0_div_9_ng_container_2_Template_button_click_7_listener","_r6","WelcomeRecoverComponent_div_0_div_9_ng_container_2_Template_button_click_9_listener","startReservation","termsForm","tmp_8_0","WelcomeRecoverComponent_div_0_div_9_ng_container_1_Template","WelcomeRecoverComponent_div_0_div_9_ng_container_2_Template","WelcomeRecoverComponent_div_0_ng_container_7_Template","WelcomeRecoverComponent_div_0_ng_container_8_Template","WelcomeRecoverComponent_div_0_div_9_Template","ɵɵpureFunction0","_c0","showResult","WelcomeRecoverComponent","_captchaService","_chromeService","_formBuilder","_router","_walletService","_zelfNameService","captchaToken","loading","constructor","_initForm","ngOnInit","_this","_asyncToGenerator","getZelfNameObject","_captchaGeneration","_this2","isExtension","executeRecaptcha","replace","error","console","group","ZelfRegexNoPostfix","termsAndConditions","requiredTrue","_queryForZelfObject","query","_this3","zelfNameObject","_queryZNS","_setError","key","_this4","response","searchZelfNameV2","data","ipfs","length","arweave","event","_this5","preventDefault","stopPropagation","clipboardData","getData","test","patchValue","emitEvent","markAsPristine","_this6","_this7","setNewZelfName","name","setFlow","navigate","queryParams","return","ɵɵdirectiveInject","i1","CaptchaService","i2","ChromeService","i3","FormBuilder","i4","Router","i5","WalletService","i6","ZelfNameService","selectors","decls","vars","consts","template","WelcomeRecoverComponent_Template","rf","ctx","WelcomeRecoverComponent_div_0_Template","WelcomeRecoverComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","i7","MatButton","MatIconButton","i8","MatProgressSpinner","ɵNgNoValidate","DefaultValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","RouterLink","i9","TranslocoDirective","styles","environment","action","Promise","resolve","reject","grecaptcha","enterprise","ready","execute","captchaKey","then","token","catch","err","retainCaptchaToken","getCaptchaToken","ɵɵinject","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}