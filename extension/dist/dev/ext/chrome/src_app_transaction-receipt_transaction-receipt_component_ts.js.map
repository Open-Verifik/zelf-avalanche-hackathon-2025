{"version":3,"file":"src_app_transaction-receipt_transaction-receipt_component_ts.js","mappings":"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","sources":["./src/app/pipes/address-mask.pipe.ts","./src/app/transaction-receipt/transaction-receipt.component.ts","./src/app/transaction-receipt/transaction-receipt.component.html","./src/app/base/copy-to-clipboard/copy-to-clipboard.base.ts"],"sourcesContent":["import { Pipe, type PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"addressMask\",\n})\nexport class AddressMaskPipe implements PipeTransform {\n    transform(value?: string): unknown {\n        if (typeof value !== \"string\" || !value || !value.trim()) return \"\";\n\n        const firstPart = value.slice(0, 8);\n        const lastPart = value.slice(-8);\n\n        return `${firstPart}...${lastPart}`;\n    }\n}\n","import { TranslocoModule, TranslocoService } from \"@jsverse/transloco\";\nimport { firstValueFrom, forkJoin, take } from \"rxjs\";\n\nimport { DatePipe, DecimalPipe, NgClass, NgIf, NgTemplateOutlet } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { AssetService, NetworkPermissions } from \"app/asset.service\";\nimport { CopyToClipboardBase } from \"app/base/copy-to-clipboard/copy-to-clipboard.base\";\nimport { ChromeService } from \"app/chrome.service\";\nimport { AddressMaskPipe } from \"app/pipes/address-mask.pipe\";\nimport { BlockchainTransactionsService } from \"app/services/blockchain-transactions.service\";\nimport { NetworkName, NetworkService } from \"app/services/network.service\";\nimport { TokenData, WalletModel } from \"app/wallet\";\nimport { WalletService } from \"app/wallet.service\";\nimport { ZelfLoaderComponent } from \"app/zelf-loader/zelf-loader.component\";\n\n@Component({\n    imports: [NgIf, NgTemplateOutlet, DecimalPipe, NgClass, AddressMaskPipe, DatePipe, MatButtonModule, TranslocoModule, ZelfLoaderComponent],\n    selector: \"transaction-receipt\",\n    styleUrls: [\"./transaction-receipt.component.scss\"],\n    templateUrl: \"./transaction-receipt.component.html\",\n})\nexport class TransactionReceiptComponent extends CopyToClipboardBase implements OnInit, OnDestroy {\n    private _timeout!: ReturnType<typeof setTimeout>;\n\n    hash: string = \"\";\n    loading: boolean = false;\n    network: string = \"\";\n    symbol: string = \"\";\n    transaction!: any;\n    tokens: TokenData[] = [];\n    wallet!: Partial<WalletModel> | null;\n\n    private CAN_SWAP: NetworkPermissions = {};\n\n    tokenProperties: any = {\n        sourceImage: \"\",\n        sourceNetwork: \"\",\n        sourceNetworkImage: \"\",\n        sourceSymbol: \"\",\n        targetImage: \"\",\n        targetNetwork: \"\",\n        targetNetworkImage: \"\",\n        targetSymbol: \"\",\n    };\n\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _assetService: AssetService,\n        private _blockchainTransactionsService: BlockchainTransactionsService,\n        private _networkService: NetworkService,\n        private _router: Router,\n        private _walletService: WalletService,\n        protected _chromeService: ChromeService,\n        protected _snackBar: MatSnackBar,\n        protected _translocoService: TranslocoService\n    ) {\n        super(_chromeService, _snackBar, _translocoService);\n\n        this.CAN_SWAP = this._assetService.canSwap;\n\n        forkJoin({\n            params: this._activatedRoute.params.pipe(take(1)),\n            queryParams: this._activatedRoute.queryParams.pipe(take(1)),\n        }).subscribe((responses) => {\n            this.hash = responses.params.hash;\n            this.symbol = responses.queryParams.symbol;\n            this.network = responses.queryParams.network?.toLowerCase();\n\n            if (this.loading) return;\n\n            this._requestTransactionDetails();\n        });\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.loading = true;\n\n        this.tokens = await this._loadTokensFromSession();\n        this.wallet = await this._walletService.getFirstWalletFromStorage();\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this._timeout);\n    }\n\n    get transactionType(): string {\n        if (this.transaction?.type === \"swap\") return \"swap\";\n        else return \"transfer\";\n    }\n\n    get networkSymbol(): string {\n        return this._networkService.getNetworkSymbol(this.network?.toLowerCase() as NetworkName);\n    }\n\n    _determineNetwork(): string {\n        if (this.transaction?.network || this.network) return this.transaction?.network?.toLowerCase() || this.network;\n        else if (this.symbol) {\n            if (this.symbol === \"AVAX\") return \"avalanche\";\n            else if (this.symbol === \"BTC\") return \"bitcoin\";\n            else if (this.symbol === \"ETH\") return \"ethereum\";\n            else if (this.symbol === \"ZNS\" || this.symbol === \"SOL\") return \"solana\";\n            else if (this.symbol === \"BNB\") return \"binance\";\n            else if (this.symbol === \"POL\") return \"polygon\";\n            else if (this.symbol === \"SUI\") return \"sui\";\n            else return \"ethereum\";\n        } else return \"ethereum\";\n    }\n\n    private async _fetchTokens(): Promise<TokenData[]> {\n        if (!this.wallet) return [];\n\n        const response = await firstValueFrom(this._blockchainTransactionsService.getAddressData(this.wallet));\n        const result = await this._assetService.processTokensFromResponse(response, this.CAN_SWAP);\n\n        return result.tokens;\n    }\n\n    private async _loadTokensFromSession(): Promise<TokenData[]> {\n        if (this.tokens) return this.tokens;\n\n        try {\n            const sessionTokens = await this._assetService.loadTokensFromSession();\n\n            if (sessionTokens.length > 0) {\n                return sessionTokens;\n            } else {\n                return await this._fetchTokens();\n            }\n        } catch (error) {\n            console.error(\"Error loading tokens:\", error);\n        }\n\n        return [];\n    }\n\n    private _networkSymbol(network: string): string {\n        return this._networkService.getNetworkSymbol(network.toLowerCase() as NetworkName);\n    }\n\n    private async _networkImage(network: string): Promise<string> {\n        const token = await this._networkService.getNetworkToken(network.toLowerCase() as NetworkName);\n\n        return token?.image || \"\";\n    }\n\n    private _handleTransactionDetailsError = (e: any) => {\n        this._retryRequestTransactionDetails();\n\n        this.loading = false;\n    };\n\n    private async _requestTransactionDetails(): Promise<void> {\n        if (!this.hash) return;\n        if (!this.transaction) this.transaction = await this._walletService.getPendingTransaction(this.hash);\n\n        this.network = this._determineNetwork();\n        this._setNetworkProperties();\n\n        try {\n            const response = await this._blockchainTransactionsService.requestTransactionDetails(this.hash, this.network);\n\n            if (!response || !response.data) return this._retryRequestTransactionDetails();\n\n            this.transaction = this._blockchainTransactionsService.processTransactionResponse(response, this.network);\n\n            if (!this.transaction) return this._retryRequestTransactionDetails();\n\n            if (!this.transaction.network) this.transaction.network = this.network;\n\n            this.transaction.networkSymbol = this._networkService.getNetworkSymbol(this.transaction.network.toLowerCase() as NetworkName);\n\n            this._setNetworkProperties();\n\n            this.loading = false;\n\n            if (this.transaction.status === \"pending\") this._retryRequestTransactionDetails();\n            else this._walletService.removePendingTransaction(this.hash);\n        } catch (error) {\n            this._handleTransactionDetailsError(error);\n        }\n    }\n\n    private async _retryRequestTransactionDetails(): Promise<void> {\n        this._timeout = setTimeout(() => {\n            this._requestTransactionDetails();\n        }, 5000);\n    }\n\n    private async _setNetworkProperties(): Promise<void> {\n        if (!this.transaction || this.transaction.type !== \"swap\") return;\n\n        this.tokenProperties.sourceImage = this.transaction.image;\n        this.tokenProperties.sourceNetwork = this._networkSymbol(this.transaction.network.toLowerCase() as NetworkName);\n        this.tokenProperties.sourceNetworkImage = await this._networkImage(this.transaction.network.toLowerCase() as NetworkName);\n        this.tokenProperties.sourceNetworkSymbol = this._networkService.getNetworkSymbol(this.transaction.network.toLowerCase() as NetworkName);\n        this.tokenProperties.sourceSymbol = this.transaction.asset;\n\n        this.tokenProperties.targetImage = this.transaction.targetImage;\n        this.tokenProperties.targetNetwork = this._networkSymbol(this.transaction.targetNetwork.toLowerCase() as NetworkName);\n        this.tokenProperties.targetNetworkImage = await this._networkImage(this.transaction.targetNetwork.toLowerCase() as NetworkName);\n        this.tokenProperties.targetNetworkSymbol = this._networkService.getNetworkSymbol(this.transaction.targetNetwork.toLowerCase() as NetworkName);\n        this.tokenProperties.targetSymbol = this.transaction.targetSymbol;\n    }\n\n    async copyToClipboard(value?: string): Promise<void> {\n        if (!value) return;\n\n        await this._copyToClipboard(value);\n    }\n\n    async goToHistory(): Promise<void> {\n        if (this.transaction?.status === \"pending\") {\n            this._walletService.addTransactionToPending(this.transaction);\n        }\n\n        this._router.navigate([\"/activity\"]);\n    }\n\n    async shareTransaction(): Promise<void> {\n        if (!this.hash) return;\n\n        const transactionUrl = this._blockchainTransactionsService.generateShareLink(this.hash, this._determineNetwork() as NetworkName);\n\n        await this.copyToClipboard(transactionUrl);\n    }\n}\n","<div class=\"zelf-card\" *transloco=\"let t\">\n    <div class=\"transaction-receipt__header\">\n        <div class=\"transaction-receipt__col1\"></div>\n\n        <div class=\"transaction-receipt__col2\">\n            <p class=\"transaction-receipt__title\">{{ t(\"common.transaction\") }}</p>\n        </div>\n\n        <div class=\"transaction-receipt__col3\"></div>\n    </div>\n\n    <div class=\"zelf-card__content zelf-card__content--grow\">\n        <ng-container *ngIf=\"!loading && !transaction\">\n            <div class=\"transaction-receipt__empty\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"150px\" viewBox=\"0 -960 960 960\" width=\"150px\" fill=\"#e3e3e3\">\n                    <path\n                        d=\"M200-120q-33 0-56.5-23.5T120-200v-160h80v160h160v80H200Zm560 0H600v-80h160v-160h80v160q0 33-23.5 56.5T760-120ZM120-760q0-33 23.5-56.5T200-840h160v80H200v160h-80v-160Zm720 0v160h-80v-160H600v-80h160q33 0 56.5 23.5T840-760ZM480-240q21 0 35.5-14.5T530-290q0-21-14.5-35.5T480-340q-21 0-35.5 14.5T430-290q0 21 14.5 35.5T480-240Zm-36-153h73q0-34 8-52t35-45q35-35 46.5-56.5T618-598q0-54-39-88t-99-34q-50 0-86 26t-52 74l66 27q7-26 26.5-42.5T480-652q29 0 46.5 15.5T544-595q0 20-9.5 37.5T502-521q-33 29-45.5 56T444-393Z\"\n                    />\n                </svg>\n\n                <p class=\"transaction-receipt__not-found\">{{ t(\"errors.not_found\") }}</p>\n            </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"transaction\">\n            <div class=\"transaction-receipt__total\">\n                <div\n                    class=\"zelf-chip\"\n                    [ngClass]=\"{\n                        'zelf-chip--error': transaction.status !== 'success',\n                        'zelf-chip--success': transaction.status === 'success',\n                    }\"\n                >\n                    <ng-container *ngIf=\"!transaction.status || transaction.status === 'pending'\">{{ t(\"common.pending\") }}</ng-container>\n                    <ng-container *ngIf=\"transaction.status === 'failed'\">{{ t(\"common.failed\") }}</ng-container>\n                    <ng-container *ngIf=\"transaction.status === 'success'\">{{ t(\"common.success\") }}</ng-container>\n                </div>\n\n                <div class=\"transaction-receipt__price-amount-container\" *ngIf=\"transaction.type !== 'swap'\">\n                    <h2 class=\"transaction-receipt__price\">{{ transaction.amount | number: \"1.0-18\" }}</h2>\n\n                    <p class=\"transaction-receipt__price-currency\">{{ transaction.asset }}</p>\n                </div>\n\n                <div class=\"transaction-receipt__price-amount-container\" *ngIf=\"transaction.type === 'swap'\">\n                    <h2 class=\"transaction-receipt__price\">{{ transaction.targetAmount | number: \"1.0-18\" }}</h2>\n\n                    <p class=\"transaction-receipt__price-currency\">{{ transaction.targetSymbol }}</p>\n                </div>\n            </div>\n\n            <div class=\"transaction-receipt__content\">\n                <div class=\"transaction-receipt__summary\">\n                    <div class=\"zelf-action-row\">\n                        <p class=\"transaction-receipt__label\">{{ t(\"common.date\") }}</p>\n\n                        <p class=\"transaction-receipt__value\">{{ transaction.date | date: \"dd MMM, yyyy HH:mm\" }}</p>\n                    </div>\n\n                    <ng-container *ngIf=\"transactionType === 'swap'\">\n                        <div class=\"zelf-action-row\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.from\") }}</p>\n\n                            <div class=\"transaction-receipt__value-container\">\n                                <div class=\"transaction-receipt__value\">\n                                    <div class=\"transaction-receipt__logo-container\">\n                                        <img [src]=\"tokenProperties.sourceImage\" alt=\"logo\" class=\"transaction-receipt__logo\" />\n                                        <img\n                                            [src]=\"tokenProperties.sourceNetworkImage\"\n                                            alt=\"logo\"\n                                            class=\"transaction-receipt__logo transaction-receipt__logo--network\"\n                                        />\n                                    </div>\n\n                                    <span>{{ tokenProperties.sourceSymbol }}</span>\n                                    <span class=\"transaction-receipt__value-light\">{{ tokenProperties.sourceNetwork }}</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"zelf-action-row\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.to\") }}</p>\n\n                            <div class=\"transaction-receipt__value-container\">\n                                <div class=\"transaction-receipt__value\">\n                                    <div class=\"transaction-receipt__logo-container\">\n                                        <img [src]=\"transaction.targetImage\" alt=\"logo\" class=\"transaction-receipt__logo\" />\n                                        <img\n                                            [src]=\"tokenProperties.targetNetworkImage\"\n                                            alt=\"logo\"\n                                            class=\"transaction-receipt__logo transaction-receipt__logo--network\"\n                                        />\n                                    </div>\n\n                                    <span>{{ tokenProperties.targetSymbol }}</span>\n                                    <span class=\"transaction-receipt__value-light\">{{ tokenProperties.targetNetworkSymbol }}</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"zelf-action-row transaction-receipt__action-row--auto-height\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.total\") }}</p>\n\n                            <div class=\"transaction-receipt__value-container transaction-receipt__value-container--column\">\n                                <div class=\"transaction-receipt__swap-row\">\n                                    <div class=\"transaction-receipt__logo-container\">\n                                        <img [src]=\"tokenProperties.sourceImage\" alt=\"logo\" class=\"transaction-receipt__logo\" />\n                                        <img\n                                            [src]=\"tokenProperties.sourceNetworkImage\"\n                                            alt=\"logo\"\n                                            class=\"transaction-receipt__logo transaction-receipt__logo--network\"\n                                        />\n                                    </div>\n\n                                    <p class=\"transaction-receipt__value\">\n                                        {{ transaction.amount | number: \"1.2-18\" }}\n                                        <span class=\"transaction-receipt__value-light\">{{ tokenProperties.sourceSymbol }}</span>\n                                    </p>\n                                </div>\n\n                                <div class=\"transaction-receipt__swap-row\">\n                                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M1.20874 9.0007H12.3787L7.49874 13.8807C7.10874 14.2707 7.10874 14.9107 7.49874 15.3007C7.88874 15.6907 8.51874 15.6907 8.90874 15.3007L15.4987 8.7107C15.8887 8.3207 15.8887 7.6907 15.4987 7.3007L8.91874 0.700703C8.52874 0.310703 7.89874 0.310703 7.50874 0.700703C7.11874 1.0907 7.11874 1.7207 7.50874 2.1107L12.3787 7.0007H1.20874C0.65874 7.0007 0.20874 7.4507 0.20874 8.0007C0.20874 8.5507 0.65874 9.0007 1.20874 9.0007Z\"\n                                            fill=\"#181818\"\n                                        />\n                                    </svg>\n\n                                    <div class=\"transaction-receipt__logo-container\">\n                                        <img [src]=\"transaction.targetImage\" alt=\"logo\" class=\"transaction-receipt__logo\" />\n                                        <img\n                                            [src]=\"tokenProperties.sourceNetworkImage\"\n                                            alt=\"logo\"\n                                            class=\"transaction-receipt__logo transaction-receipt__logo--network\"\n                                        />\n                                    </div>\n\n                                    <p class=\"transaction-receipt__value\">\n                                        {{ transaction.targetAmount | number: \"1.2-18\" }}\n                                        <span class=\"transaction-receipt__value-light\">{{ tokenProperties.targetSymbol }}</span>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"zelf-action-row\" *ngIf=\"transaction.gasFee || transaction.gasPrice\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.network_fee\") }}</p>\n\n                            <p class=\"transaction-receipt__value\">\n                                {{ transaction.gasFee || transaction.gasPrice | number: \"1.2-8\" }}\n                                <span class=\"transaction-receipt__value-light\">{{ transaction.asset }}</span>\n                            </p>\n                        </div>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"transactionType !== 'swap'\">\n                        <div class=\"zelf-action-row\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.withdrawal_network\") }}</p>\n\n                            <p class=\"transaction-receipt__value\">{{ transaction.tokenType }}</p>\n                        </div>\n\n                        <div class=\"zelf-action-row\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.address\") }}</p>\n\n                            <div class=\"transaction-receipt__value-container\">\n                                <p class=\"transaction-receipt__value\">{{ transaction.to | addressMask }}</p>\n\n                                <button\n                                    (click)=\"copyToClipboard(transaction.to)\"\n                                    mat-flat-button\n                                    class=\"zelf-icon-button zelf-icon-button--40 zelf-icon-button--border-soft\"\n                                >\n                                    <ng-container *ngTemplateOutlet=\"clipboardIcon\"></ng-container>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"zelf-action-row\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.transaction_id\") }}</p>\n\n                            <div class=\"transaction-receipt__value-container\">\n                                <p class=\"transaction-receipt__value\">{{ hash | addressMask }}</p>\n\n                                <button\n                                    (click)=\"copyToClipboard(hash)\"\n                                    mat-flat-button\n                                    class=\"zelf-icon-button zelf-icon-button--40 zelf-icon-button--border-soft\"\n                                >\n                                    <ng-container *ngTemplateOutlet=\"clipboardIcon\"></ng-container>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"zelf-action-row\" *ngIf=\"transaction.gasFee || transaction.gasPrice\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.fee\") }}</p>\n\n                            <p class=\"transaction-receipt__value\">\n                                {{ transaction.gasFee || transaction.gasPrice | number: \"1.2-18\" }} {{ networkSymbol }}\n                            </p>\n                        </div>\n\n                        <div class=\"zelf-action-row transaction-receipt__action-row--auto-height\">\n                            <p class=\"transaction-receipt__label\">{{ t(\"common.total\") }}</p>\n\n                            <div class=\"transaction-receipt__value-container transaction-receipt__value-container--column\">\n                                <div class=\"transaction-receipt__swap-row\">\n                                    <p class=\"transaction-receipt__value\" *ngIf=\"networkSymbol === transaction.asset\">\n                                        {{ transaction.total | number: \"1.0-18\" }} {{ networkSymbol }}\n                                    </p>\n\n                                    <p class=\"transaction-receipt__value\" *ngIf=\"networkSymbol !== transaction.asset\">\n                                        {{ transaction.gasFee | number: \"1.2-18\" }} {{ networkSymbol }}\n                                    </p>\n                                </div>\n\n                                <div class=\"transaction-receipt__swap-row\" *ngIf=\"networkSymbol !== transaction.asset\">\n                                    <p class=\"transaction-receipt__value\">\n                                        <small>{{ transaction.amount | number: \"1.0-18\" }} {{ transaction.asset }}</small>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <div class=\"zelf-action-row\" *ngIf=\"transaction.confirmations\">\n                        <p class=\"transaction-receipt__label\">{{ t(\"send.confirmations\") }}</p>\n\n                        <p class=\"transaction-receipt__value\">{{ transaction.confirmations }}</p>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n\n        <zelf-loader *ngIf=\"loading\"></zelf-loader>\n    </div>\n\n    <div class=\"zelf-card__actions zelf-card__actions--column\">\n        <button (click)=\"shareTransaction()\" class=\"zelf-button zelf-button--outlined zelf-button--wide\" mat-flat-button type=\"submit\">\n            <span>{{ t(\"transaction.share_transaction\") }}</span>\n\n            <svg width=\"14\" height=\"16\" viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M15 14.1191C14.24 14.1191 13.56 14.4191 13.04 14.8891L5.91 10.7391C5.96 10.5091 6 10.2791 6 10.0391C6 9.79906 5.96 9.56906 5.91 9.33906L12.96 5.22906C13.5 5.72906 14.21 6.03906 15 6.03906C16.66 6.03906 18 4.69906 18 3.03906C18 1.37906 16.66 0.0390625 15 0.0390625C13.34 0.0390625 12 1.37906 12 3.03906C12 3.27906 12.04 3.50906 12.09 3.73906L5.04 7.84906C4.5 7.34906 3.79 7.03906 3 7.03906C1.34 7.03906 0 8.37906 0 10.0391C0 11.6991 1.34 13.0391 3 13.0391C3.79 13.0391 4.5 12.7291 5.04 12.2291L12.16 16.3891C12.11 16.5991 12.08 16.8191 12.08 17.0391C12.08 18.6491 13.39 19.9591 15 19.9591C16.61 19.9591 17.92 18.6491 17.92 17.0391C17.92 15.4291 16.61 14.1191 15 14.1191Z\"\n                />\n            </svg>\n        </button>\n\n        <button (click)=\"goToHistory()\" class=\"zelf-button zelf-button--black zelf-button--wide\" mat-flat-button type=\"submit\">\n            {{ t(\"transaction.go_to_my_history\") }}\n        </button>\n    </div>\n</div>\n\n<ng-template #clipboardIcon>\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.5 20H5.5V7C5.5 6.45 5.05 6 4.5 6C3.95 6 3.5 6.45 3.5 7V20C3.5 21.1 4.4 22 5.5 22H15.5C16.05 22 16.5 21.55 16.5 21C16.5 20.45 16.05 20 15.5 20ZM20.5 16V4C20.5 2.9 19.6 2 18.5 2H9.5C8.4 2 7.5 2.9 7.5 4V16C7.5 17.1 8.4 18 9.5 18H18.5C19.6 18 20.5 17.1 20.5 16ZM18.5 16H9.5V4H18.5V16Z\"\n        />\n    </svg>\n</ng-template>\n","import { MatSnackBar } from \"@angular/material/snack-bar\";\n\nimport { TranslocoService } from \"@jsverse/transloco\";\n\nimport { ChromeService } from \"app/chrome.service\";\n\nexport class CopyToClipboardBase {\n    private _copyToClipboardActionText: string;\n    private _copyToClipboardErrorActionText: string;\n    private _copyToClipboardErrorText: string;\n    private _copyToClipboardText: string;\n\n    constructor(protected _chromeService: ChromeService, protected _snackBar: MatSnackBar, protected _translocoService: TranslocoService) {\n        this._copyToClipboardActionText = this._translocoService.translate(\"common.close\");\n        this._copyToClipboardErrorActionText = this._translocoService.translate(\"common.close\");\n        this._copyToClipboardErrorText = this._translocoService.translate(\"common.failed_to_copy_to_clipboard\");\n        this._copyToClipboardText = this._translocoService.translate(\"common.copied_to_clipboard\");\n    }\n\n    protected async _copyToClipboard(value: string, showSnackBar: boolean = true): Promise<void> {\n        try {\n            await this._chromeService.copyToClipboard(value);\n\n            if (showSnackBar) this._showCopyToClipboardSnackBar();\n        } catch (error) {\n            if (!showSnackBar) return;\n\n            this._showCopyToClipboardSnackBarError();\n        }\n    }\n\n    protected _showCopyToClipboardSnackBar(): void {\n        this._snackBar.open(this._copyToClipboardText, this._copyToClipboardActionText, {\n            duration: 2000,\n            panelClass: \"zelf-snackbar\",\n            verticalPosition: \"top\",\n        });\n    }\n\n    protected _showCopyToClipboardSnackBarError(): void {\n        this._snackBar.open(this._copyToClipboardErrorText, this._copyToClipboardErrorActionText, {\n            duration: 2000,\n            panelClass: \"zelf-snackbar\",\n            verticalPosition: \"top\",\n        });\n    }\n}\n"],"names":["AddressMaskPipe","transform","value","trim","firstPart","slice","lastPart","pure","TranslocoModule","firstValueFrom","forkJoin","take","DatePipe","DecimalPipe","NgClass","NgIf","NgTemplateOutlet","MatButtonModule","CopyToClipboardBase","ZelfLoaderComponent","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","t_r2","ɵɵpipeBind2","ctx_r2","transaction","amount","asset","targetAmount","targetSymbol","ɵɵtextInterpolate1","gasFee","gasPrice","ɵɵtemplate","TransactionReceiptComponent_div_0_ng_container_9_ng_container_16_div_49_Template","ɵɵproperty","tokenProperties","sourceImage","ɵɵsanitizeUrl","sourceNetworkImage","sourceSymbol","sourceNetwork","targetImage","targetNetworkImage","targetNetworkSymbol","ɵɵelementContainer","ɵɵtextInterpolate2","networkSymbol","total","ɵɵlistener","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_Template_button_click_13_listener","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵresetView","copyToClipboard","to","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_ng_container_14_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_Template_button_click_22_listener","hash","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_ng_container_23_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_div_24_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_p_30_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_p_31_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_div_32_Template","tokenType","ɵɵpipeBind1","clipboardIcon_r5","confirmations","TransactionReceiptComponent_div_0_ng_container_9_ng_container_3_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_4_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_5_Template","TransactionReceiptComponent_div_0_ng_container_9_div_6_Template","TransactionReceiptComponent_div_0_ng_container_9_div_7_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_16_Template","TransactionReceiptComponent_div_0_ng_container_9_ng_container_17_Template","TransactionReceiptComponent_div_0_ng_container_9_div_18_Template","ɵɵpureFunction2","_c0","status","type","date","transactionType","TransactionReceiptComponent_div_0_ng_container_8_Template","TransactionReceiptComponent_div_0_ng_container_9_Template","TransactionReceiptComponent_div_0_zelf_loader_10_Template","TransactionReceiptComponent_div_0_Template_button_click_12_listener","_r1","shareTransaction","TransactionReceiptComponent_div_0_Template_button_click_17_listener","goToHistory","loading","TransactionReceiptComponent","_activatedRoute","_assetService","_blockchainTransactionsService","_networkService","_router","_walletService","_chromeService","_snackBar","_translocoService","_timeout","network","symbol","tokens","wallet","CAN_SWAP","targetNetwork","constructor","canSwap","params","pipe","queryParams","subscribe","responses","toLowerCase","_requestTransactionDetails","ngOnInit","_this","_asyncToGenerator","_loadTokensFromSession","getFirstWalletFromStorage","ngOnDestroy","clearTimeout","getNetworkSymbol","_determineNetwork","_fetchTokens","_this2","response","getAddressData","result","processTokensFromResponse","_this3","sessionTokens","loadTokensFromSession","length","error","console","_networkSymbol","_networkImage","_this4","token","getNetworkToken","image","_handleTransactionDetailsError","e","_retryRequestTransactionDetails","_this5","getPendingTransaction","_setNetworkProperties","requestTransactionDetails","data","processTransactionResponse","removePendingTransaction","_this6","setTimeout","_this7","sourceNetworkSymbol","_this8","_copyToClipboard","_this9","addTransactionToPending","navigate","_this0","transactionUrl","generateShareLink","ɵɵdirectiveInject","i1","ActivatedRoute","i2","AssetService","i3","BlockchainTransactionsService","i4","NetworkService","Router","i5","WalletService","i6","ChromeService","i7","MatSnackBar","i8","TranslocoService","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","TransactionReceiptComponent_Template","rf","ctx","TransactionReceiptComponent_div_0_Template","TransactionReceiptComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","i9","MatButton","TranslocoDirective","styles","_copyToClipboardActionText","_copyToClipboardErrorActionText","_copyToClipboardErrorText","_copyToClipboardText","translate","_x","showSnackBar","_showCopyToClipboardSnackBar","_showCopyToClipboardSnackBarError","apply","arguments","open","duration","panelClass","verticalPosition"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}