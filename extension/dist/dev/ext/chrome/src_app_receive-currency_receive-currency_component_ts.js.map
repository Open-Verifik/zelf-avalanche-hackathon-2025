{"version":3,"file":"src_app_receive-currency_receive-currency_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAgE;AAEL;AAEd;AAC0B;AACiB;AAE1B;AAEc;;;;;;;;;;;IC2BxDS,gEAAA,GAA4D;;;;;IAQ5DA,gEAAA,GAA0D;;;;;;IAzBtEA,4DAAA,cAA+F;IAC3FA,uDAAA,cAAmE;IAI3DA,4DAFR,cAAgC,cACY,YACH;IAAAA,oDAAA,GAAoB;IAAAA,0DAAA,EAAI;IACzDA,4DAAA,YAAsC;IAAAA,oDAAA,GAAkB;IAC5DA,0DAD4D,EAAI,EAC1D;IAENA,4DAAA,YAA8B;IAAAA,oDAAA,GAAmC;;IACrEA,0DADqE,EAAI,EACnE;IAGFA,4DADJ,eAAmC,kBAI9B;IACGA,wDAAA,KAAAO,8DAAA,2BAA6C;IACjDP,0DAAA,EAAS;IAETA,4DAAA,kBAIC;IAHGA,wDAAA,mBAAAS,wEAAAC,MAAA;MAAA,MAAAC,UAAA,GAAAX,2DAAA,CAAAa,GAAA,EAAAC,SAAA;MAAA,MAAAC,MAAA,GAAAf,2DAAA;MAAA,OAAAA,yDAAA,CAASe,MAAA,CAAAG,eAAA,CAAAR,MAAA,EAAAC,UAAA,CAAgC;IAAA,EAAC;IAI1CX,wDAAA,KAAAmB,8DAAA,2BAA2C;IAGvDnB,0DAFQ,EAAS,EACP,EACJ;;;;;;;IA5BDA,wDAAA,eAAAA,6DAAA,IAAAsB,GAAA,EAAAX,UAAA,CAAAY,IAAA,EAAmC;IACJvB,uDAAA,EAAqB;IAArBA,wDAAA,QAAAW,UAAA,CAAAc,KAAA,EAAAzB,2DAAA,CAAqB;IAIZA,uDAAA,GAAoB;IAApBA,+DAAA,CAAAW,UAAA,CAAAiB,MAAA,CAAoB;IACf5B,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAW,UAAA,CAAAY,IAAA,CAAkB;IAG9BvB,uDAAA,GAAmC;IAAnCA,+DAAA,CAAAA,yDAAA,QAAAW,UAAA,CAAAmB,OAAA,EAAmC;IAQ9C9B,uDAAA,GAA4B;IAA5BA,wDAAA,qBAAA+B,aAAA,CAA4B;IAQ5B/B,uDAAA,GAA0B;IAA1BA,wDAAA,qBAAAgC,WAAA,CAA0B;;;;;IAKrDhC,uDAAA,kBAA2C;;;;;IA/CvCA,4DAHZ,aAA2D,aACjB,aACE,gBACkG;;IAC9HA,4DAAA,aAA+F;IAC3FA,uDAAA,cAEE;IAGdA,0DAFQ,EAAM,EACD,EACP;;IAGFA,4DADJ,aAAoC,YACG;IAAAA,oDAAA,GAAyB;IAChEA,0DADgE,EAAI,EAC9D;IAENA,uDAAA,cAA0C;IAC9CA,0DAAA,EAAM;IAENA,4DAAA,eAA0D;IA+BtDA,wDA9BA,KAAAiC,8CAAA,oBAA+F,KAAAC,sDAAA,0BA8BlE;IAErClC,0DADI,EAAM,EACJ;;;;;IAjDcA,uDAAA,GAAwB;IAAxBA,wDAAA,eAAAA,6DAAA,IAAAoC,GAAA,EAAwB;IAUGpC,uDAAA,GAAyB;IAAzBA,+DAAA,CAAAqC,IAAA,mBAAyB;IAOkBrC,uDAAA,GAAW;IAAXA,wDAAA,YAAAe,MAAA,CAAAuB,QAAA,CAAW;IA8B/EtC,uDAAA,EAAa;IAAbA,wDAAA,SAAAe,MAAA,CAAAwB,OAAA,CAAa;;;;;;IAK/BvC,4DAAA,cAA+F;IAC3FA,uDAAA,eAEE;IACNA,0DAAA,EAAM;;;;;;IAINA,4DAAA,cAA+F;IAyB3FA,uDAxBA,eAAuG,eACkB,eACA,eAGvH,eAGA,eAGA,eAGA,eAGA,eAGA,gBAGA,gBAGA;IACNA,0DAAA,EAAM;;;ADzEJ,MAAOwC,wBAAyB,SAAQ3C,kGAAmB;EAKjD4C,cAAA;EACDC,cAAA;EACAC,SAAA;EACAC,iBAAA;EAPXL,OAAO,GAAY,IAAI;EACvBD,QAAQ,GAAc,EAAE;EAExBO,YACYJ,cAA6B,EAC9BC,cAA6B,EAC7BC,SAAsB,EACtBC,iBAAmC;IAE1C,KAAK,CAACF,cAAc,EAAEC,SAAS,EAAEC,iBAAiB,CAAC;IAL3C,KAAAH,cAAc,GAAdA,cAAc;IACf,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,iBAAiB,GAAjBA,iBAAiB;EAG5B;EAEME,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,sMAAA;MACVD,KAAI,CAACE,aAAa,EAAE;MAEpBF,KAAI,CAACR,OAAO,GAAG,KAAK;IAAC;EACzB;EAEcU,aAAaA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAF,sMAAA;MACvBE,MAAI,CAACZ,QAAQ,SAASY,MAAI,CAACT,cAAc,CAACU,0BAA0B,EAAE;IAAC;EAC3E;EAEOjC,eAAeA,CAACkC,KAAY,EAAEC,OAAgB;IACjDD,KAAK,CAACE,cAAc,EAAE;IACtBF,KAAK,CAACG,eAAe,EAAE;IAEvB,IAAI,CAACC,gBAAgB,CAACH,OAAO,CAACvB,OAAO,CAAC;EAC1C;;qCA5BSU,wBAAwB,EAAAxC,+DAAA,CAAA0D,6DAAA,GAAA1D,+DAAA,CAAA4D,6DAAA,GAAA5D,+DAAA,CAAA8D,oEAAA,GAAA9D,+DAAA,CAAAgE,gEAAA;EAAA;;UAAxBxB,wBAAwB;IAAA0B,SAAA;IAAAC,QAAA,GAAAnE,wEAAA;IAAAqE,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QC4CrC1E,wDA9DA,IAAA4E,uCAAA,kBAA2D,IAAAC,+CAAA,gCAAA7E,oEAAA,CAsDpC,IAAA+E,+CAAA,iCAAA/E,oEAAA,CAQE;;;mBDjDXR,iDAAI,EAAED,oDAAK,EAAEE,6DAAgB,EAAEE,wDAAU,EAAEC,+DAAe,EAAAoE,kEAAA,EAAEtE,sEAAe,EAAAuF,gEAAA,EAAEnF,wEAAe,EAAEC,sFAAmB;IAAAoF,MAAA;EAAA;;;;;;;;;;;;;;;;;AERzH,MAAOrF,eAAe;EACxBsF,SAASA,CAACC,KAAc;IACpB,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,EAAE,EAAE,OAAO,EAAE;IAEnE,MAAMC,SAAS,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,MAAMC,QAAQ,GAAGJ,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;IAEhC,OAAO,GAAGD,SAAS,MAAME,QAAQ,EAAE;EACvC;;qCARS3F,eAAe;EAAA;;;UAAfA,eAAe;IAAA4F,IAAA;EAAA;;;;;;;;;;;;;;;;;ACCtB,MAAO7F,mBAAmB;EAMN6C,cAAA;EAAyCC,SAAA;EAAkCC,iBAAA;EALzF+C,0BAA0B;EAC1BC,+BAA+B;EAC/BC,yBAAyB;EACzBC,oBAAoB;EAE5BjD,YAAsBH,cAA6B,EAAYC,SAAsB,EAAYC,iBAAmC;IAA9G,KAAAF,cAAc,GAAdA,cAAc;IAA2B,KAAAC,SAAS,GAATA,SAAS;IAAyB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAC9G,IAAI,CAAC+C,0BAA0B,GAAG,IAAI,CAAC/C,iBAAiB,CAACmD,SAAS,CAAC,cAAc,CAAC;IAClF,IAAI,CAACH,+BAA+B,GAAG,IAAI,CAAChD,iBAAiB,CAACmD,SAAS,CAAC,cAAc,CAAC;IACvF,IAAI,CAACF,yBAAyB,GAAG,IAAI,CAACjD,iBAAiB,CAACmD,SAAS,CAAC,oCAAoC,CAAC;IACvG,IAAI,CAACD,oBAAoB,GAAG,IAAI,CAAClD,iBAAiB,CAACmD,SAAS,CAAC,4BAA4B,CAAC;EAC9F;EAEgBvC,gBAAgBA,CAAAwC,EAAA,EAA4C;IAAA,IAAAjD,KAAA;IAAA,OAAAC,sMAAA,YAA3CqC,KAAa,EAAEY,YAAA,GAAwB,IAAI;MACxE,IAAI;QACA,MAAMlD,KAAI,CAACL,cAAc,CAACxB,eAAe,CAACmE,KAAK,CAAC;QAEhD,IAAIY,YAAY,EAAElD,KAAI,CAACmD,4BAA4B,EAAE;MACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZ,IAAI,CAACF,YAAY,EAAE;QAEnBlD,KAAI,CAACqD,iCAAiC,EAAE;MAC5C;IAAC,GAAAC,KAAA,OAAAC,SAAA;EACL;EAEUJ,4BAA4BA,CAAA;IAClC,IAAI,CAACvD,SAAS,CAAC4D,IAAI,CAAC,IAAI,CAACT,oBAAoB,EAAE,IAAI,CAACH,0BAA0B,EAAE;MAC5Ea,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,eAAe;MAC3BC,gBAAgB,EAAE;KACrB,CAAC;EACN;EAEUN,iCAAiCA,CAAA;IACvC,IAAI,CAACzD,SAAS,CAAC4D,IAAI,CAAC,IAAI,CAACV,yBAAyB,EAAE,IAAI,CAACD,+BAA+B,EAAE;MACtFY,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,eAAe;MAC3BC,gBAAgB,EAAE;KACrB,CAAC;EACN","sources":["./src/app/receive-currency/receive-currency.component.ts","./src/app/receive-currency/receive-currency.component.html","./src/app/pipes/address-mask.pipe.ts","./src/app/base/copy-to-clipboard/copy-to-clipboard.base.ts"],"sourcesContent":["import { NgFor, NgIf, NgTemplateOutlet } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { RouterLink } from \"@angular/router\";\nimport { TranslocoModule, TranslocoService } from \"@jsverse/transloco\";\nimport { CopyToClipboardBase } from \"app/base/copy-to-clipboard/copy-to-clipboard.base\";\nimport { ChromeService } from \"app/chrome.service\";\nimport { AddressMaskPipe } from \"app/pipes/address-mask.pipe\";\nimport { Network, WalletService } from \"app/wallet.service\";\nimport { ZelfLoaderComponent } from \"app/zelf-loader/zelf-loader.component\";\n\n@Component({\n    imports: [NgIf, NgFor, NgTemplateOutlet, RouterLink, TranslocoModule, MatButtonModule, AddressMaskPipe, ZelfLoaderComponent],\n    selector: \"receive-currency\",\n    styleUrls: [\"./receive-currency.component.scss\"],\n    templateUrl: \"./receive-currency.component.html\",\n})\nexport class ReceiveCurrencyComponent extends CopyToClipboardBase implements OnInit {\n    loading: boolean = true;\n    networks: Network[] = [];\n\n    constructor(\n        private _walletService: WalletService,\n        public _chromeService: ChromeService,\n        public _snackBar: MatSnackBar,\n        public _translocoService: TranslocoService\n    ) {\n        super(_chromeService, _snackBar, _translocoService);\n    }\n\n    async ngOnInit(): Promise<void> {\n        this._initNetworks();\n\n        this.loading = false;\n    }\n\n    private async _initNetworks(): Promise<void> {\n        this.networks = await this._walletService.getAvailableWalletNetworks();\n    }\n\n    public copyToClipboard(event: Event, network: Network): void {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this._copyToClipboard(network.address);\n    }\n}\n","<div class=\"zelf-card receive-currency\" *transloco=\"let t\">\n    <div class=\"receive-currency__header\">\n        <div class=\"receive-currency__col1\">\n            <button [routerLink]=\"['/home']\" class=\"zelf-icon-button zelf-icon-button--anti-flash-white zelf-icon-button--40\" mat-flat-button>\n                <svg width=\"22\" height=\"14\" viewBox=\"0 0 22 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M20.0898 5.8277H4.72478L8.08478 2.4677C8.53978 2.0127 8.53978 1.2777 8.08478 0.822695C7.62978 0.367695 6.89478 0.367695 6.43978 0.822695L1.08478 6.1777C0.62978 6.6327 0.62978 7.3677 1.08478 7.8227L6.43978 13.1777C6.89478 13.6327 7.62978 13.6327 8.08478 13.1777C8.53978 12.7227 8.53978 11.9877 8.08478 11.5327L4.72478 8.16103H20.0898C20.7314 8.16103 21.2564 7.63603 21.2564 6.99436C21.2564 6.3527 20.7314 5.8277 20.0898 5.8277Z\"\n                    />\n                </svg>\n            </button>\n        </div>\n\n        <div class=\"receive-currency__col2\">\n            <p class=\"receive-currency__title\">{{ t(\"common.receive\") }}</p>\n        </div>\n\n        <div class=\"receive-currency__col3\"></div>\n    </div>\n\n    <div class=\"zelf-card__content receive-currency__content\">\n        <div [routerLink]=\"['qr', network.name]\" class=\"network-item\" *ngFor=\"let network of networks\">\n            <img class=\"network-item__icon\" [src]=\"network.image\" alt=\"icon\" />\n\n            <div class=\"network-item__info\">\n                <div class=\"network-item__network-info\">\n                    <p class=\"network-item__network\">{{ network.symbol }}</p>\n                    <p class=\"network-item__network-chip\">{{ network.name }}</p>\n                </div>\n\n                <p class=\"network-item__name\">{{ network.address | addressMask }}</p>\n            </div>\n\n            <div class=\"network-item__buttons\">\n                <button\n                    class=\"zelf-icon-button zelf-icon-button--40 zelf-icon-button--anti-flash-white zelf-icon-button--border-soft\"\n                    mat-flat-button\n                >\n                    <ng-container *ngTemplateOutlet=\"qrCodeIcon\"></ng-container>\n                </button>\n\n                <button\n                    (click)=\"copyToClipboard($event, network)\"\n                    class=\"zelf-icon-button zelf-icon-button--40 zelf-icon-button--anti-flash-white zelf-icon-button--border-soft\"\n                    mat-flat-button\n                >\n                    <ng-container *ngTemplateOutlet=\"copyIcon\"></ng-container>\n                </button>\n            </div>\n        </div>\n\n        <zelf-loader *ngIf=\"loading\"></zelf-loader>\n    </div>\n</div>\n\n<ng-template #copyIcon>\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M15.5 20H5.5V7C5.5 6.45 5.05 6 4.5 6C3.95 6 3.5 6.45 3.5 7V20C3.5 21.1 4.4 22 5.5 22H15.5C16.05 22 16.5 21.55 16.5 21C16.5 20.45 16.05 20 15.5 20ZM20.5 16V4C20.5 2.9 19.6 2 18.5 2H9.5C8.4 2 7.5 2.9 7.5 4V16C7.5 17.1 8.4 18 9.5 18H18.5C19.6 18 20.5 17.1 20.5 16ZM18.5 16H9.5V4H18.5V16Z\"\n        />\n    </svg>\n</ng-template>\n\n<ng-template #qrCodeIcon>\n    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M2 8H6C7.1 8 8 7.1 8 6V2C8 0.9 7.1 0 6 0H2C0.9 0 0 0.9 0 2V6C0 7.1 0.9 8 2 8ZM2 2H6V6H2V2Z\" />\n        <path d=\"M2 18H6C7.1 18 8 17.1 8 16V12C8 10.9 7.1 10 6 10H2C0.9 10 0 10.9 0 12V16C0 17.1 0.9 18 2 18ZM2 12H6V16H2V12Z\" />\n        <path d=\"M10 2V6C10 7.1 10.9 8 12 8H16C17.1 8 18 7.1 18 6V2C18 0.9 17.1 0 16 0H12C10.9 0 10 0.9 10 2ZM16 6H12V2H16V6Z\" />\n        <path\n            d=\"M18 17.5V16.5C18 16.22 17.78 16 17.5 16H16.5C16.22 16 16 16.22 16 16.5V17.5C16 17.78 16.22 18 16.5 18H17.5C17.78 18 18 17.78 18 17.5Z\"\n        />\n        <path\n            d=\"M10 10.5V11.5C10 11.78 10.22 12 10.5 12H11.5C11.78 12 12 11.78 12 11.5V10.5C12 10.22 11.78 10 11.5 10H10.5C10.22 10 10 10.22 10 10.5Z\"\n        />\n        <path\n            d=\"M13.5 12H12.5C12.22 12 12 12.22 12 12.5V13.5C12 13.78 12.22 14 12.5 14H13.5C13.78 14 14 13.78 14 13.5V12.5C14 12.22 13.78 12 13.5 12Z\"\n        />\n        <path\n            d=\"M10 14.5V15.5C10 15.78 10.22 16 10.5 16H11.5C11.78 16 12 15.78 12 15.5V14.5C12 14.22 11.78 14 11.5 14H10.5C10.22 14 10 14.22 10 14.5Z\"\n        />\n        <path\n            d=\"M12.5 18H13.5C13.78 18 14 17.78 14 17.5V16.5C14 16.22 13.78 16 13.5 16H12.5C12.22 16 12 16.22 12 16.5V17.5C12 17.78 12.22 18 12.5 18Z\"\n        />\n        <path\n            d=\"M14.5 16H15.5C15.78 16 16 15.78 16 15.5V14.5C16 14.22 15.78 14 15.5 14H14.5C14.22 14 14 14.22 14 14.5V15.5C14 15.78 14.22 16 14.5 16Z\"\n        />\n        <path\n            d=\"M15.5 10H14.5C14.22 10 14 10.22 14 10.5V11.5C14 11.78 14.22 12 14.5 12H15.5C15.78 12 16 11.78 16 11.5V10.5C16 10.22 15.78 10 15.5 10Z\"\n        />\n        <path\n            d=\"M16.5 14H17.5C17.78 14 18 13.78 18 13.5V12.5C18 12.22 17.78 12 17.5 12H16.5C16.22 12 16 12.22 16 12.5V13.5C16 13.78 16.22 14 16.5 14Z\"\n        />\n    </svg>\n</ng-template>\n","import { Pipe, type PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"addressMask\",\n})\nexport class AddressMaskPipe implements PipeTransform {\n    transform(value?: string): unknown {\n        if (typeof value !== \"string\" || !value || !value.trim()) return \"\";\n\n        const firstPart = value.slice(0, 8);\n        const lastPart = value.slice(-8);\n\n        return `${firstPart}...${lastPart}`;\n    }\n}\n","import { MatSnackBar } from \"@angular/material/snack-bar\";\n\nimport { TranslocoService } from \"@jsverse/transloco\";\n\nimport { ChromeService } from \"app/chrome.service\";\n\nexport class CopyToClipboardBase {\n    private _copyToClipboardActionText: string;\n    private _copyToClipboardErrorActionText: string;\n    private _copyToClipboardErrorText: string;\n    private _copyToClipboardText: string;\n\n    constructor(protected _chromeService: ChromeService, protected _snackBar: MatSnackBar, protected _translocoService: TranslocoService) {\n        this._copyToClipboardActionText = this._translocoService.translate(\"common.close\");\n        this._copyToClipboardErrorActionText = this._translocoService.translate(\"common.close\");\n        this._copyToClipboardErrorText = this._translocoService.translate(\"common.failed_to_copy_to_clipboard\");\n        this._copyToClipboardText = this._translocoService.translate(\"common.copied_to_clipboard\");\n    }\n\n    protected async _copyToClipboard(value: string, showSnackBar: boolean = true): Promise<void> {\n        try {\n            await this._chromeService.copyToClipboard(value);\n\n            if (showSnackBar) this._showCopyToClipboardSnackBar();\n        } catch (error) {\n            if (!showSnackBar) return;\n\n            this._showCopyToClipboardSnackBarError();\n        }\n    }\n\n    protected _showCopyToClipboardSnackBar(): void {\n        this._snackBar.open(this._copyToClipboardText, this._copyToClipboardActionText, {\n            duration: 2000,\n            panelClass: \"zelf-snackbar\",\n            verticalPosition: \"top\",\n        });\n    }\n\n    protected _showCopyToClipboardSnackBarError(): void {\n        this._snackBar.open(this._copyToClipboardErrorText, this._copyToClipboardErrorActionText, {\n            duration: 2000,\n            panelClass: \"zelf-snackbar\",\n            verticalPosition: \"top\",\n        });\n    }\n}\n"],"names":["NgFor","NgIf","NgTemplateOutlet","MatButtonModule","RouterLink","TranslocoModule","CopyToClipboardBase","AddressMaskPipe","ZelfLoaderComponent","i0","ɵɵelementContainer","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ReceiveCurrencyComponent_div_0_div_11_ng_container_13_Template","ɵɵlistener","ReceiveCurrencyComponent_div_0_div_11_Template_button_click_14_listener","$event","network_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","copyToClipboard","ReceiveCurrencyComponent_div_0_div_11_ng_container_15_Template","ɵɵproperty","ɵɵpureFunction1","_c1","name","ɵɵadvance","image","ɵɵsanitizeUrl","ɵɵtextInterpolate","symbol","ɵɵpipeBind1","address","qrCodeIcon_r5","copyIcon_r4","ReceiveCurrencyComponent_div_0_div_11_Template","ReceiveCurrencyComponent_div_0_zelf_loader_12_Template","ɵɵpureFunction0","_c0","t_r6","networks","loading","ReceiveCurrencyComponent","_walletService","_chromeService","_snackBar","_translocoService","constructor","ngOnInit","_this","_asyncToGenerator","_initNetworks","_this2","getAvailableWalletNetworks","event","network","preventDefault","stopPropagation","_copyToClipboard","ɵɵdirectiveInject","i1","WalletService","i2","ChromeService","i3","MatSnackBar","i4","TranslocoService","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","ReceiveCurrencyComponent_Template","rf","ctx","ReceiveCurrencyComponent_div_0_Template","ReceiveCurrencyComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","ReceiveCurrencyComponent_ng_template_3_Template","TranslocoDirective","i5","MatButton","styles","transform","value","trim","firstPart","slice","lastPart","pure","_copyToClipboardActionText","_copyToClipboardErrorActionText","_copyToClipboardErrorText","_copyToClipboardText","translate","_x","showSnackBar","_showCopyToClipboardSnackBar","error","_showCopyToClipboardSnackBarError","apply","arguments","open","duration","panelClass","verticalPosition"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}