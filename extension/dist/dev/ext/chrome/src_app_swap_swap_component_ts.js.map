{"version":3,"file":"src_app_swap_swap_component_ts.js","mappings":"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","sources":["./src/app/swap/swap.component.ts","./src/app/swap/swap.component.html","./src/app/slippage-sheet/slippage-sheet.component.ts","./src/app/slippage-sheet/slippage-sheet.component.html","./src/app/services/lifi.service.ts","./src/app/swap-currency/swap-currency.component.ts","./src/app/swap-currency/swap-currency.component.html"],"sourcesContent":["import * as ethers from \"ethers\";\nimport { firstValueFrom, merge, Observable, Subject, takeUntil } from \"rxjs\";\nimport { debounceTime, filter, tap } from \"rxjs/operators\";\n\nimport { CurrencyPipe, DecimalPipe, NgClass, NgFor, NgIf, NgTemplateOutlet } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { AbstractControl, FormBuilder, ReactiveFormsModule, UntypedFormGroup, ValidationErrors, ValidatorFn, Validators } from \"@angular/forms\";\nimport { MatBottomSheet } from \"@angular/material/bottom-sheet\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { Router, RouterLink } from \"@angular/router\";\nimport { TranslocoModule, TranslocoService } from \"@jsverse/transloco\";\n\nimport { AssetService, NetworkPermissions } from \"app/asset.service\";\nimport { ChromeService } from \"app/chrome.service\";\nimport { BlockchainTransactionsService } from \"app/services/blockchain-transactions.service\";\nimport { LifiService } from \"app/services/lifi.service\";\nimport { NetworkName, NetworkService } from \"app/services/network.service\";\nimport { SlippageSheetComponent } from \"app/slippage-sheet/slippage-sheet.component\";\nimport { TransactionService } from \"app/transaction.service\";\nimport { VaultService } from \"app/vault.service\";\nimport { SwapData, TokenData, WalletModel } from \"app/wallet\";\nimport { WalletService } from \"app/wallet.service\";\nimport { ZelfNameService } from \"app/zelf-name-service.service\";\nimport { AssetChangeData, SwapCurrencyComponent } from \"../swap-currency/swap-currency.component\";\nimport { environment } from \"environments/environment\";\nimport { ZelfLoaderComponent } from \"app/zelf-loader/zelf-loader.component\";\n\n@Component({\n    imports: [\n        CurrencyPipe,\n        DecimalPipe,\n        MatButtonModule,\n        MatMenuModule,\n        MatProgressSpinnerModule,\n        NgClass,\n        NgFor,\n        NgIf,\n        NgTemplateOutlet,\n        ReactiveFormsModule,\n        RouterLink,\n        SwapCurrencyComponent,\n        TranslocoModule,\n        ZelfLoaderComponent,\n    ],\n    selector: \"swap\",\n    styleUrls: [\"./swap.component.scss\"],\n    templateUrl: \"./swap.component.html\",\n})\nexport class SwapComponent implements OnInit, OnDestroy {\n    private _feeUpdateInterval: ReturnType<typeof setInterval> | null = null;\n    private _mnemonics: string = \"\";\n    private _password: string = \"\";\n    private _requiresBiometricsInterval: ReturnType<typeof setInterval> | null = null;\n\n    private CAN_SWAP: NetworkPermissions = {};\n    private unsubscriber$: Subject<void> = new Subject<void>();\n    private formUnsubscriber$: Subject<void> = new Subject<void>();\n\n    form!: UntypedFormGroup;\n    loading: boolean = true;\n    network: NetworkName = \"ethereum\";\n    networkImage: string = \"\";\n    networkSymbol: string = \"\";\n    passwordError: boolean = false;\n    passwordSet: boolean = false;\n    quoteLoading: boolean = false;\n    remainingAttempts: number = 0;\n    requiresBiometrics: boolean = false;\n    sending: boolean = false;\n    showPassword: boolean = false;\n    slippage: number = 0.5;\n    swapBalanceDisplay: \"token\" | \"fiat\" = \"token\";\n    swapData: SwapData = new SwapData({});\n    swapError: string = \"\";\n    swapQuote: any = null;\n    swapSource: \"source\" | \"target\" | \"\" = \"\";\n    tokens: TokenData[] = [];\n    transactionHash: string = \"\";\n    wallet?: WalletModel;\n    swapExecuting: boolean = false;\n    swapExecuted: boolean = false;\n    swapLoading: boolean = false;\n\n    bridgeOptions = [\n        {\n            label: \"Li.Fi\",\n            value: \"li.fi\",\n        },\n    ];\n\n    selectedSourceAsset: Partial<TokenData> = {};\n    selectedTargetAsset: Partial<TokenData> = {};\n\n    constructor(\n        private _assetService: AssetService,\n        private _blockchainTransactionsService: BlockchainTransactionsService,\n        private _bottomSheet: MatBottomSheet,\n        private _changeDetectionRef: ChangeDetectorRef,\n        private _chromeService: ChromeService,\n        private _formBuilder: FormBuilder,\n        private _lifiService: LifiService,\n        private _networkService: NetworkService,\n        private _router: Router,\n        private _snackBar: MatSnackBar,\n        private _transactionService: TransactionService,\n        private _translocoService: TranslocoService,\n        private _vaultService: VaultService,\n        private _walletService: WalletService,\n        private _zelfNameService: ZelfNameService\n    ) {\n        this.CAN_SWAP = this._assetService.canSwap;\n        this.wallet = {} as WalletModel;\n        this.remainingAttempts = this._vaultService.remainingAttempts;\n\n        this._mnemonics = \"\";\n        this._password = this._vaultService.password;\n\n        this._vaultService.mnemonic = \"\";\n        this._vaultService.password = \"\";\n\n        if (this._password && this._password.trim()) {\n            this.passwordSet = true;\n            this.requiresBiometrics = false;\n        }\n\n        this._setRequiresBiometricsInterval();\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.wallet = (await this._walletService.getCurrentWallet()) as WalletModel;\n\n        this._initForm();\n\n        await this._loadTokensFromSession();\n        await this._decryptMnemonics();\n        await this._findPreviousSwapData();\n\n        if (this.swapData && this.swapData.hasSwapData) return;\n\n        this.loading = false;\n    }\n\n    ngOnDestroy(): void {\n        this._clearFeeUpdateInterval();\n        this._clearRequiresBiometricsInterval();\n\n        this.unsubscriber$.next();\n        this.unsubscriber$.complete();\n\n        this.formUnsubscriber$.next();\n        this.formUnsubscriber$.complete();\n    }\n\n    get canCheckQuote(): boolean {\n        return (\n            !this.loading &&\n            !this.quoteLoading &&\n            !this.sending &&\n            this.hasBothAssetsSet &&\n            !!this.form.get(\"sourceAmount\")?.valid &&\n            !!this.form.get(\"targetAsset\")?.valid &&\n            !this.form.errors?.crossNetwork\n        );\n    }\n\n    get hasBothAssetsSet(): boolean {\n        return !!this.hasSelectedSourceAsset && !!this.hasSelectedTargetAsset;\n    }\n\n    get hasSelectedSourceAsset(): boolean {\n        return !!Object.keys(this.selectedSourceAsset).length;\n    }\n\n    get hasSelectedTargetAsset(): boolean {\n        return !!Object.keys(this.selectedTargetAsset).length;\n    }\n\n    get targetTokenPricePerDollar(): number {\n        return 1 / ((this.selectedTargetAsset?.price as number) || 1);\n    }\n\n    get totalTargetFiat(): number {\n        return ((this.form?.get(\"targetAmount\")?.value as number) || 0) * ((this.selectedTargetAsset?.price as number) || 0);\n    }\n\n    get totalTargetToken(): number {\n        return ((this.form?.get(\"targetFiat\")?.value as number) || 0) / ((this.selectedTargetAsset?.price as number) || 0);\n    }\n\n    get totalSourceFiat(): number {\n        return ((this.form?.get(\"sourceAmount\")?.value as number) || 0) * ((this.selectedSourceAsset?.price as number) || 0);\n    }\n\n    get totalSourceToken(): number {\n        return ((this.form?.get(\"sourceFiat\")?.value as number) || 0) / ((this.selectedSourceAsset?.price as number) || 0);\n    }\n\n    private _clearFeeUpdateInterval(): void {\n        if (!this._feeUpdateInterval) return;\n\n        clearInterval(this._feeUpdateInterval as ReturnType<typeof setInterval>);\n\n        this._feeUpdateInterval = null;\n    }\n\n    private _clearRequiresBiometricsInterval(): void {\n        if (!this._requiresBiometricsInterval) return;\n\n        clearInterval(this._requiresBiometricsInterval as ReturnType<typeof setInterval>);\n    }\n\n    private async _decryptMnemonics(): Promise<any> {\n        this.requiresBiometrics = await this._vaultService.biometricsRequired();\n\n        if (!this.wallet?.pgp?.encryptedMessage || !this.wallet?.pgp?.privateKey || this.requiresBiometrics) {\n            this.requiresBiometrics = true;\n\n            return;\n        }\n\n        if (!this._password && !this.form.get(\"password\")?.value) return;\n\n        const secret = JSON.parse(await this._decryptMessage());\n\n        this._mnemonics = secret?.mnemonic?.trim()?.toLowerCase();\n        this.requiresBiometrics = !this._mnemonics;\n    }\n\n    private async _decryptMessage(): Promise<any> {\n        const encryptedMessage = this.wallet?.pgp?.encryptedMessage as string;\n        const privateKeyArmoured = this.wallet?.pgp?.privateKey as string;\n        const passphrase = this._password || this.form.get(\"password\")?.value;\n\n        if (!encryptedMessage || !privateKeyArmoured || !passphrase) return;\n\n        try {\n            return await this._vaultService.decryptMessage(encryptedMessage, privateKeyArmoured, passphrase);\n        } catch (error) {\n            this.wallet = (await this._walletService.getCurrentWallet()) as WalletModel;\n            this.remainingAttempts = this._vaultService.remainingAttempts + 1;\n\n            if (!this.wallet?.pgp) {\n                this._mnemonics = \"\";\n                this._password = \"\";\n\n                this.passwordError = false;\n                this.passwordSet = false;\n                this.requiresBiometrics = true;\n            } else {\n                this.passwordError = true;\n            }\n\n            throw error;\n        }\n    }\n\n    private async _fetchTokens(): Promise<void> {\n        if (!this.wallet) return;\n\n        const response = await firstValueFrom(this._blockchainTransactionsService.getAddressData(this.wallet));\n        const result = await this._assetService.processTokensFromResponse(response, this.CAN_SWAP);\n\n        this.tokens = result.tokens;\n    }\n\n    private async _findPreviousSwapData(): Promise<void> {\n        this.swapData = await this._transactionService.getCurrentSwapData();\n\n        if (this.swapData && this.swapData.hasSwapData) {\n            this._initSwapData().finally(() => (this.loading = false));\n\n            return;\n        }\n    }\n\n    private _greaterThanZero(control: AbstractControl): ValidationErrors | null {\n        if (control.value && control.value > 0) return null;\n\n        return { greaterThanZero: true };\n    }\n\n    private _getAddressForNetwork(network: string): string {\n        if (!this.wallet) return \"\";\n\n        switch (network.toLowerCase()) {\n            case \"ethereum\":\n                return this.wallet.ethAddress;\n            case \"solana\":\n                return this.wallet.solanaAddress;\n            case \"avalanche\":\n                return this.wallet.ethAddress;\n            case \"binance\":\n                return this.wallet.ethAddress;\n            case \"polygon\":\n                return this.wallet.ethAddress;\n            default:\n                return this.wallet.ethAddress;\n        }\n    }\n\n    private _getFeeFromQuote(quote: any): number {\n        let fee = 0;\n\n        if (!quote.estimate) return fee;\n\n        quote.estimate.gasCosts?.forEach((gasCost: { amountUSD?: string }) => {\n            if (!gasCost.amountUSD) return;\n\n            fee += parseFloat(gasCost.amountUSD);\n        });\n\n        quote.estimate.feeCosts?.forEach((feeCost: { amountUSD?: string }) => {\n            if (!feeCost.amountUSD) return;\n\n            fee += parseFloat(feeCost.amountUSD);\n        });\n\n        quote.estimate.bridgeCosts?.forEach((bridgeCost: { amountUSD?: string }) => {\n            if (!bridgeCost.amountUSD) return;\n\n            fee += parseFloat(bridgeCost.amountUSD);\n        });\n\n        quote.estimate.executionCosts?.forEach((executionCost: { amountUSD?: string }) => {\n            if (!executionCost.amountUSD) return;\n\n            fee += parseFloat(executionCost.amountUSD);\n        });\n\n        quote.includedSteps?.forEach((step: { estimate: { feeCosts: { amountUSD?: string }[] } }) => {\n            if (!step.estimate || !step.estimate.feeCosts) return;\n\n            step.estimate.feeCosts.forEach((feeCost: { amountUSD?: string }) => {\n                if (!feeCost.amountUSD) return;\n\n                fee += parseFloat(feeCost.amountUSD);\n            });\n        });\n\n        return fee;\n    }\n\n    private async _handleSuccessfulSwap(receipt: any): Promise<void> {\n        this.sending = false;\n        this.swapError = \"\";\n\n        if (!this.transactionHash) return;\n\n        const pendingTransactionData = {\n            ...receipt,\n            amount: this.form.get(\"sourceAmount\")?.value,\n            asset: this.selectedSourceAsset.symbol,\n            date: new Date().toISOString(),\n            fee: this.form.get(\"fee\")?.value,\n            from: this.wallet?.ethAddress,\n            image: this.selectedSourceAsset.image,\n            network: this.selectedSourceAsset.network,\n            status: \"pending\",\n            targetAddress: this.selectedTargetAsset.contractAddress,\n            targetAmount: this.form.get(\"targetAmount\")?.value,\n            targetImage: this.selectedTargetAsset.image,\n            targetNetwork: this.selectedTargetAsset.network,\n            targetSymbol: this.selectedTargetAsset.symbol,\n            to: this.selectedTargetAsset.contractAddress,\n            tokenType: this.selectedSourceAsset.symbol,\n            total: this.form.get(\"sourceAmount\")?.value + this.form.get(\"fee\")?.value,\n            type: \"swap\",\n        };\n\n        await this._walletService.addTransactionToPending(pendingTransactionData);\n        await this._chromeService.removeItemSession(\"tokensTtl\");\n        await this._chromeService.removeItem(\"swapData\");\n\n        await this._router.navigate([\"/transaction\", this.transactionHash], {\n            queryParams: { network: this.selectedSourceAsset.network, symbol: this.selectedSourceAsset.symbol },\n        });\n    }\n\n    private _initForm(): void {\n        this.form = this._formBuilder.group(\n            {\n                bridge: [\"li.fi\", [Validators.required]],\n                commission: [0, [Validators.required, Validators.min(0)]],\n                commissionToggle: [\"automatic\", [Validators.required]],\n                fee: [0, [Validators.required, Validators.min(0)]],\n                password: [this._password || \"\", [Validators.required]],\n                slippage: [0.5, [Validators.required, Validators.min(0), Validators.max(0.8)]],\n                slippageToggle: [\"automatic\", [Validators.required]],\n                sourceAmount: [\"\", [Validators.required, this._greaterThanZero]],\n                sourceAsset: [null, [Validators.required]],\n                sourceFiat: [0, [Validators.required, this._greaterThanZero]],\n                targetAmount: [{ value: \"\", disabled: true }, [Validators.required, Validators.min(0)]],\n                targetAsset: [null, [Validators.required, this._notMatchingValidator(\"sourceAsset\")]],\n                targetFiat: [{ value: 0, disabled: true }, [Validators.required, Validators.min(0)]],\n                targetSwapValue: [\"\"],\n            },\n            { validators: [this._insufficientFundsValidator(), this._crossNetworkValidator()] }\n        );\n\n        this._setupQuoteUpdates();\n    }\n\n    private _crossNetworkValidator(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const sourceAsset = control.get(\"sourceAsset\");\n            const targetAsset = control.get(\"targetAsset\");\n\n            if (!sourceAsset?.value || !targetAsset?.value) return null;\n\n            const hasSolAsset = [sourceAsset.value.network.toLowerCase(), targetAsset.value.network.toLowerCase()].indexOf(\"solana\") > -1;\n\n            if (hasSolAsset && sourceAsset.value.network !== targetAsset.value.network) return { crossNetwork: true };\n\n            return null;\n        };\n    }\n\n    private async _initSwapData(): Promise<void> {\n        this.form.patchValue(this.swapData);\n    }\n\n    private _insufficientFundsValidator(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (!control.value) return null;\n            if (!this.swapQuote) return null;\n\n            const sourceAmount = control.get(\"sourceAmount\")?.value;\n            const sourceAsset = control.get(\"sourceAsset\")?.value;\n\n            if (!sourceAmount || !sourceAsset) return null;\n\n            const sourceBalance = sourceAsset?.amount;\n\n            if (!sourceBalance) return null;\n\n            return sourceBalance < sourceAmount ? { insufficientFunds: true } : null;\n        };\n    }\n\n    private async _loadTokensFromSession(): Promise<void> {\n        try {\n            const sessionTokens = await this._assetService.loadTokensFromSession();\n\n            if (sessionTokens.length > 0) {\n                this.tokens = sessionTokens;\n            } else {\n                await this._fetchTokens();\n            }\n\n            this._changeDetectionRef.detectChanges();\n        } catch (error) {\n            console.error(\"Error loading tokens:\", error);\n        } finally {\n            this._initForm();\n            this.loading = false;\n        }\n    }\n\n    private _notMatchingValidator(matchTo: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (!control.value) return null;\n\n            const targetAsset = control.value;\n            const sourceAsset = control.parent?.get(matchTo)?.value;\n\n            const targetKey = `${targetAsset?.symbol}-${targetAsset?.network}`;\n            const sourceKey = `${sourceAsset?.symbol}-${sourceAsset?.network}`;\n\n            return targetKey === sourceKey ? { mustNotMatch: true } : null;\n        };\n    }\n\n    async _redirectToBiometrics(): Promise<void> {\n        await this._zelfNameService.setFlow(\"unlock\");\n        await this._zelfNameService.setZelfName(this.wallet?.publicData?.zelfName as string);\n\n        const { password: _password, ...rest } = this.form.value;\n\n        this._transactionService.swapData = new SwapData(rest);\n        this._vaultService.password = this.form.get(\"password\")?.value;\n        this._router.navigate([\"/security/biometrics\"], { queryParams: { return: \"/swap\" } });\n    }\n\n    private _setFeeUpdateInterval(): void {\n        if (!environment.production) return;\n\n        if (this._feeUpdateInterval) this._clearFeeUpdateInterval();\n\n        this._feeUpdateInterval = setInterval(() => {\n            if (!this.canCheckQuote) return this._clearFeeUpdateInterval();\n\n            this.getSwapQuote(true);\n        }, 1000 * 15);\n    }\n\n    private _setRequiresBiometricsInterval(): void {\n        if (this._requiresBiometricsInterval) this._clearRequiresBiometricsInterval();\n\n        this._requiresBiometricsInterval = setInterval(() => {\n            this._vaultService.biometricsRequired().then((result) => (this.requiresBiometrics = result));\n        }, 1000);\n    }\n\n    private _setupQuoteUpdates(): void {\n        const sourceFiatChanges = this.form.get(\"sourceFiat\")?.valueChanges.pipe(\n            takeUntil(this.formUnsubscriber$),\n            filter((value) => value !== null && value !== \"\")\n        ) as Observable<any>;\n\n        sourceFiatChanges?.subscribe(() => {\n            if (this.swapBalanceDisplay === \"token\") return;\n\n            this.form.get(\"sourceAmount\")?.setValue(this.totalSourceToken);\n            this.form.get(\"sourceAmount\")?.markAsDirty();\n            this.form.get(\"sourceAmount\")?.markAsTouched();\n            this.form.get(\"sourceAmount\")?.updateValueAndValidity();\n        });\n\n        const sourceAmountChanges = this.form.get(\"sourceAmount\")?.valueChanges.pipe(\n            takeUntil(this.formUnsubscriber$),\n            filter((value) => value !== null && value !== \"\"),\n            tap(() => {\n                if (this.swapBalanceDisplay === \"fiat\") return;\n\n                this.form.get(\"sourceFiat\")?.setValue(this.totalSourceFiat || 0);\n                this.form.get(\"sourceFiat\")?.markAsDirty();\n                this.form.get(\"sourceFiat\")?.markAsTouched();\n                this.form.get(\"sourceFiat\")?.updateValueAndValidity();\n            })\n        ) as Observable<any>;\n\n        const slippageChanges = this.form.get(\"slippage\")?.valueChanges.pipe(takeUntil(this.formUnsubscriber$)) as Observable<any>;\n\n        const sourceAssetChanges = this.form.get(\"sourceAsset\")?.valueChanges.pipe(\n            takeUntil(this.formUnsubscriber$),\n            filter((value) => !!value),\n            tap((value) => (this.selectedSourceAsset = value))\n        ) as Observable<any>;\n\n        const targetAssetChanges = this.form.get(\"targetAsset\")?.valueChanges.pipe(\n            takeUntil(this.formUnsubscriber$),\n            filter((value) => !!value),\n            tap((value) => (this.selectedTargetAsset = value))\n        ) as Observable<any>;\n\n        const REQUIRED_QUOTE_FIELDS = [\"sourceAmount\", \"sourceAsset\", \"targetAsset\", \"slippage\"];\n\n        merge(sourceAmountChanges, slippageChanges, sourceAssetChanges, targetAssetChanges)\n            .pipe(takeUntil(this.formUnsubscriber$), debounceTime(300))\n            .subscribe(async () => {\n                if (this.quoteLoading) return;\n                if (REQUIRED_QUOTE_FIELDS.some((field) => this.form.get(field)?.invalid)) return;\n\n                try {\n                    await this.getSwapQuote();\n                } catch (error) {\n                    console.error(\"Error getting swap quote:\", error);\n                } finally {\n                    this.quoteLoading = false;\n                }\n            });\n    }\n\n    private async _validateCredentials(): Promise<boolean> {\n        if (!this._password && !this.form.get(\"password\")?.value) {\n            this.openErrorSnackBar(\"errors.empty_password\");\n\n            return false;\n        }\n\n        if (this.requiresBiometrics) {\n            await this._redirectToBiometrics();\n\n            return false;\n        }\n\n        if (this._mnemonics) return true;\n\n        try {\n            await this._decryptMnemonics();\n\n            if (this._mnemonics) return true;\n        } catch (error: unknown) {\n            if ((error as { message?: string })?.message === \"expired\") {\n                await this._redirectToBiometrics();\n\n                return false;\n            }\n\n            this.openErrorSnackBar(\"errors.invalid_credentials\");\n\n            return false;\n        }\n\n        if (this.requiresBiometrics) return false;\n        if (this._mnemonics) return true;\n\n        this.openErrorSnackBar(\"errors.private_key_locked\");\n\n        return false;\n    }\n\n    async confirmSwap(): Promise<void> {\n        if (this.isConfirmDisabled()) return;\n\n        this.sending = true;\n        this.swapError = \"\";\n\n        try {\n            if (!(await this._validateCredentials())) return;\n\n            if (!ethers.Mnemonic.isValidMnemonic(this._mnemonics)) {\n                throw new Error(\"Invalid mnemonic\");\n            }\n\n            const ethWallet = ethers.Wallet.fromPhrase(this._mnemonics);\n            const sourceNetwork = this.selectedSourceAsset.network?.toLowerCase();\n\n            const EVM_NETWORKS = [\"ethereum\", \"avalanche\", \"binance\", \"polygon\"];\n\n            if (sourceNetwork && EVM_NETWORKS.includes(sourceNetwork)) {\n                const isFromNative =\n                    this.swapQuote.action.fromToken.address === \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\" ||\n                    this.swapQuote.action.fromToken.address === \"0x0000000000000000000000000000000000000000\";\n\n                const receipt = await this._lifiService.executeSwap(this.swapQuote, {\n                    privateKey: ethWallet.privateKey,\n                    address: ethWallet.address,\n                    isFromNative,\n                });\n\n                if (!receipt?.transactionHash) return;\n\n                this.transactionHash = receipt.transactionHash;\n\n                await this._handleSuccessfulSwap(receipt);\n            } else if (sourceNetwork === \"solana\") {\n                const receipt = await this._lifiService.executeSolanaSwap(this.swapQuote, this.wallet, this._mnemonics);\n\n                if (!receipt?.transactionHash) return;\n\n                this.transactionHash = receipt.transactionHash;\n\n                await this._handleSuccessfulSwap(receipt);\n            } else {\n                throw new Error(`Unsupported network: ${sourceNetwork}`);\n            }\n        } catch (error: any) {\n            console.error(\"Swap execution error:\", error);\n            this.swapError = error.message;\n            this.openErrorSnackBar(error.message || \"errors.something_went_wrong\");\n        } finally {\n            this.sending = false;\n            this._changeDetectionRef.detectChanges();\n        }\n    }\n\n    findToken(symbol: string): TokenData | undefined {\n        return this.tokens.find((token) => token.symbol === symbol);\n    }\n\n    getBridgeLabel(): string {\n        return this.bridgeOptions.find((option) => option.value === this.form.get(\"bridge\")?.value)?.label || \"\";\n    }\n\n    getNetworkImage(network?: string): string {\n        if (!network) return \"\";\n\n        return this._walletService.getAssetImage(this._networkService.getNetworkSymbol(network.toLowerCase() as NetworkName));\n    }\n\n    getNetworkSymbol(network?: string): string {\n        if (!network) return \"\";\n\n        return this._networkService.getNetworkSymbol(network.toLowerCase() as NetworkName);\n    }\n\n    async getSwapQuote(silentLoading: boolean = false): Promise<void> {\n        if (!this.canCheckQuote) {\n            this._clearFeeUpdateInterval();\n\n            return;\n        }\n\n        if (!this.selectedSourceAsset.contractAddress || !this.selectedTargetAsset.contractAddress) {\n            this.openErrorSnackBar(\"errors.missing_contract_address\");\n\n            this._clearFeeUpdateInterval();\n\n            return;\n        }\n\n        const sourceAmount = this.form.get(\"sourceAmount\")?.value;\n        const isSameAsset = this.selectedSourceAsset.contractAddress === this.selectedTargetAsset.contractAddress;\n\n        if (!+sourceAmount || isSameAsset) {\n            this.form.patchValue({ targetAmount: \"0\", fee: 0, targetSwapValue: \"0\" }, { emitEvent: false });\n\n            this._clearFeeUpdateInterval();\n\n            return;\n        }\n\n        this._clearFeeUpdateInterval();\n        this.quoteLoading = !silentLoading;\n\n        try {\n            const sourceNetwork = this.selectedSourceAsset.network?.toLowerCase();\n            const targetNetwork = this.selectedTargetAsset.network?.toLowerCase();\n\n            const fromChain = this._lifiService.getChainIdentifier(sourceNetwork || \"\");\n            const toChain = this._lifiService.getChainIdentifier(targetNetwork || \"\");\n\n            const fromToken = this._lifiService.getTokenAddress(\n                sourceNetwork || \"\",\n                this.selectedSourceAsset.symbol || \"\",\n                this.selectedSourceAsset.contractAddress || \"\"\n            );\n\n            const toToken = this._lifiService.getTokenAddress(\n                targetNetwork || \"\",\n                this.selectedTargetAsset.symbol || \"\",\n                this.selectedTargetAsset.contractAddress || \"\"\n            );\n\n            const sourceAmountStr = sourceAmount.toString();\n\n            const fromAmount = this._lifiService.formatAmount(sourceAmountStr, this.selectedSourceAsset.decimals as number);\n            const fromAddress = this._getAddressForNetwork(sourceNetwork || \"\");\n\n            const slippage = this.form.get(\"slippage\")?.value || 0.5;\n            const slippageStr = slippage.toString();\n\n            const quote = await this._lifiService.getQuote(fromChain, fromToken, toChain, toToken, fromAmount, fromAddress, slippageStr);\n\n            const toTokenDecimals = this.selectedTargetAsset.decimals || 9;\n\n            if (sourceNetwork === \"solana\" || targetNetwork === \"solana\") {\n                if (!quote || !quote.estimate || !quote.estimate.toAmount) {\n                    throw new Error(\"No hay rutas disponibles para este swap en Solana\");\n                }\n\n                this.swapQuote = quote;\n\n                const estimatedAmount = parseFloat(quote.estimate.toAmount) / Math.pow(10, toTokenDecimals);\n                const sourceTokenAmount = parseFloat(sourceAmount);\n\n                const targetSwapValue = estimatedAmount / sourceTokenAmount;\n\n                let fee = 0;\n\n                if (quote.estimate.gasCosts) {\n                    quote.estimate.gasCosts.forEach((gasCost: any) => {\n                        if (gasCost.amountUSD) {\n                            fee += parseFloat(gasCost.amountUSD);\n                        }\n                    });\n                }\n\n                this.form.patchValue(\n                    {\n                        fee,\n                        targetSwapValue: targetSwapValue.toString(),\n                        targetAmount: estimatedAmount.toString(),\n                        targetFiat: quote.estimate.toAmountUSD,\n                    },\n                    { emitEvent: false }\n                );\n\n                this._setFeeUpdateInterval();\n            } else {\n                if (!quote || !quote?.estimate) throw new Error(\"Quote error\");\n\n                this.swapQuote = quote;\n\n                const estimatedAmount = parseFloat(quote.estimate.toAmount) / Math.pow(10, this.selectedTargetAsset.decimals as number);\n                const sourceTokenAmount = parseFloat(sourceAmount);\n                const targetSwapValue = estimatedAmount / sourceTokenAmount;\n\n                let fee = this._getFeeFromQuote(quote);\n\n                this.form.patchValue(\n                    {\n                        fee,\n                        targetSwapValue: targetSwapValue.toString(),\n                        targetAmount: estimatedAmount.toString(),\n                        targetFiat: quote.estimate.toAmountUSD,\n                    },\n                    { emitEvent: false }\n                );\n            }\n        } catch (error) {\n            console.error(\"Quote error:\", error);\n            this.openErrorSnackBar(error instanceof Error ? error.message : \"errors.failed_to_get_quote\");\n\n            this.form.patchValue({ targetAmount: \"0\", fee: 0, targetSwapValue: \"0\" }, { emitEvent: false });\n\n            this._clearFeeUpdateInterval();\n        } finally {\n            this.quoteLoading = false;\n\n            this._changeDetectionRef.detectChanges();\n        }\n    }\n\n    handleAssetChange(event: AssetChangeData): void {\n        if (event.source === \"source\") {\n            this.form.patchValue({ sourceAsset: event.asset });\n        } else {\n            this.form.patchValue({ targetAsset: event.asset });\n        }\n\n        this.form.markAsDirty();\n        this.form.markAsTouched();\n\n        this.swapSource = \"\";\n    }\n\n    handleBalanceDisplayChange(): void {\n        this.swapBalanceDisplay = this.swapBalanceDisplay === \"token\" ? \"fiat\" : \"token\";\n    }\n\n    isConfirmDisabled(): boolean {\n        const hasValidAmount = !!this.form.get(\"sourceAmount\")?.value && parseFloat(this.form.get(\"sourceAmount\")?.value) > 0;\n        const hasValidBalance = !this.form.errors?.insufficientFunds;\n        const hasValidNetworks = !this.form.errors?.crossNetwork;\n        const hasValidQuote = !!this.swapQuote;\n        const hasAssets = this.hasBothAssetsSet;\n        const isNotLoadingOrSending = !this.sending && !this.loading && !this.quoteLoading;\n\n        return !(hasValidAmount && hasValidQuote && isNotLoadingOrSending && hasAssets && hasValidBalance && hasValidNetworks);\n    }\n\n    openErrorSnackBar(message: string): void {\n        this._snackBar.open(this._translocoService.translate(message), this._translocoService.translate(\"common.close\"), {\n            duration: 5000,\n            panelClass: \"zelf-snackbar\",\n            verticalPosition: \"top\",\n        });\n    }\n\n    openSlippageSheet(): void {\n        this._bottomSheet\n            .open(SlippageSheetComponent, {\n                backdropClass: \"zelf-backdrop\",\n                panelClass: \"zelf-bottom-sheet\",\n                data: {\n                    commission: this.form.get(\"commission\")?.value,\n                    commissionToggle: this.form.get(\"commissionToggle\")?.value,\n                    network: this.network,\n                    slippage: this.form.get(\"slippage\")?.value,\n                    slippageToggle: this.form.get(\"slippageToggle\")?.value,\n                },\n            })\n            .afterDismissed()\n            .subscribe({\n                next: (result) => {\n                    if (!result) return;\n\n                    this.form.get(\"commission\")?.patchValue(result.commission);\n                    this.form.get(\"commissionToggle\")?.patchValue(result.commissionToggle);\n                    this.form.get(\"slippage\")?.patchValue(result.slippage);\n                    this.form.get(\"slippageToggle\")?.patchValue(result.slippageToggle);\n\n                    this._changeDetectionRef.detectChanges();\n                },\n            });\n    }\n\n    setAmount(modifier: number): void {\n        const amount = this.selectedSourceAsset.amount as number;\n        const modifiedValue = Number((amount * modifier).toFixed(8));\n\n        if (this.swapBalanceDisplay === \"token\") {\n            this.form.get(\"sourceAmount\")?.patchValue(modifiedValue || \"\");\n            this.form.get(\"sourceAmount\")?.markAsDirty();\n            this.form.get(\"sourceAmount\")?.markAsTouched();\n            this.form.get(\"sourceAmount\")?.updateValueAndValidity();\n        } else {\n            this.form.get(\"sourceFiat\")?.patchValue(modifiedValue * (this.selectedSourceAsset.price as number) || 0);\n            this.form.get(\"sourceFiat\")?.markAsDirty();\n            this.form.get(\"sourceFiat\")?.markAsTouched();\n            this.form.get(\"sourceFiat\")?.updateValueAndValidity();\n        }\n\n        this._changeDetectionRef.detectChanges();\n    }\n\n    setBridge(bridge: string): void {\n        this.form.get(\"bridge\")?.patchValue(bridge);\n\n        this._changeDetectionRef.detectChanges();\n    }\n\n    showDetails(): boolean {\n        return !!(this.form.get(\"sourceAmount\")?.valid && this.form.get(\"targetAsset\")?.valid);\n    }\n\n    swapTargetWithSource(): void {\n        if (!this.hasBothAssetsSet) return;\n\n        this.formUnsubscriber$.next();\n        this.formUnsubscriber$.complete();\n\n        const _tempSourceFiat = this.form.get(\"sourceFiat\")?.value || 0;\n        const _tempTargetFiat = 0;\n        const _tempSource = { ...(this.form.get(\"sourceAsset\")?.value || {}) };\n        const _tempTarget = { ...(this.form.get(\"targetAsset\")?.value || {}) };\n\n        const fromTokenDecimals = _tempSource?.decimals || 9;\n        const toTokenDecimals = _tempTarget?.decimals || 9;\n\n        let _tempSourceAmount = this.form.get(\"sourceAmount\")?.value || \"\";\n        let _tempTargetAmount = this.form.get(\"targetAmount\")?.value || \"\";\n\n        _tempSourceAmount = Number(_tempSourceAmount).toFixed(fromTokenDecimals);\n        _tempTargetAmount = Number(_tempTargetAmount).toFixed(toTokenDecimals);\n\n        this._changeDetectionRef.detectChanges();\n\n        this._setupQuoteUpdates();\n\n        this.form.patchValue(\n            {\n                sourceAmount: _tempTargetAmount,\n                sourceAsset: _tempTarget,\n                sourceFiat: _tempTargetFiat,\n                targetAmount: _tempSourceAmount,\n                targetAsset: _tempSource,\n                targetFiat: _tempSourceFiat,\n            },\n            { onlySelf: true }\n        );\n\n        this.form.get(\"sourceAsset\")?.markAsDirty();\n        this.form.get(\"sourceAsset\")?.markAsTouched();\n        this.form.get(\"targetAsset\")?.markAsDirty();\n        this.form.get(\"targetAsset\")?.markAsTouched();\n\n        this.form.updateValueAndValidity();\n    }\n\n    toggleShowPassword(): void {\n        this.showPassword = !this.showPassword;\n    }\n}\n","<div class=\"zelf-card swap\" *transloco=\"let t\">\n    <ng-container *ngIf=\"!loading\">\n        <div class=\"swap__header\">\n            <div class=\"swap__col1\">\n                <button\n                    (click)=\"swapSource = ''\"\n                    [routerLink]=\"swapSource ? null : ['/home']\"\n                    class=\"zelf-icon-button zelf-icon-button--anti-flash-white zelf-icon-button--40\"\n                    mat-flat-button\n                >\n                    <svg width=\"22\" height=\"14\" viewBox=\"0 0 22 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M20.0898 5.8277H4.72478L8.08478 2.4677C8.53978 2.0127 8.53978 1.2777 8.08478 0.822695C7.62978 0.367695 6.89478 0.367695 6.43978 0.822695L1.08478 6.1777C0.62978 6.6327 0.62978 7.3677 1.08478 7.8227L6.43978 13.1777C6.89478 13.6327 7.62978 13.6327 8.08478 13.1777C8.53978 12.7227 8.53978 11.9877 8.08478 11.5327L4.72478 8.16103H20.0898C20.7314 8.16103 21.2564 7.63603 21.2564 6.99436C21.2564 6.3527 20.7314 5.8277 20.0898 5.8277Z\"\n                        />\n                    </svg>\n                </button>\n            </div>\n\n            <div class=\"swap__col2\">\n                <p class=\"swap__title\">{{ t(\"home.swap\") }}</p>\n            </div>\n\n            <div class=\"swap__col3\"></div>\n        </div>\n\n        <ng-container *ngIf=\"!swapSource\">\n            <form [formGroup]=\"form\" class=\"swap__form\">\n                <div class=\"zelf-card__content swap__content\">\n                    <zelf-loader [diameter]=\"30\" *ngIf=\"loading\"></zelf-loader>\n\n                    <div\n                        [ngClass]=\"{ 'swap__asset-card--error': form.get('sourceAmount')?.errors && form.get('sourceAmount')?.dirty }\"\n                        class=\"swap__asset-card\"\n                    >\n                        <div class=\"swap__asset-card-actions swap__asset-card-actions--left\">\n                            <div class=\"swap__asset-input-label\">{{ t(\"swap.you_pay\") }}</div>\n\n                            <div\n                                class=\"swap__amount-input-container\"\n                                [ngClass]=\"{ 'swap__amount-input-container--fiat': swapBalanceDisplay === 'fiat' }\"\n                            >\n                                <input\n                                    [hidden]=\"swapBalanceDisplay === 'fiat'\"\n                                    [max]=\"selectedSourceAsset.amount || null\"\n                                    class=\"swap__amount-input\"\n                                    formControlName=\"sourceAmount\"\n                                    min=\"0\"\n                                    placeholder=\"0\"\n                                    required\n                                    type=\"number\"\n                                />\n\n                                <input\n                                    [hidden]=\"swapBalanceDisplay === 'token'\"\n                                    [max]=\"selectedSourceAsset.amount || null\"\n                                    class=\"swap__amount-input\"\n                                    formControlName=\"sourceFiat\"\n                                    min=\"0\"\n                                    placeholder=\"0\"\n                                    required\n                                    type=\"number\"\n                                />\n                            </div>\n\n                            <div class=\"swap__balance-value\">\n                                <p class=\"swap__balance-value-label\">\n                                    <ng-container *ngIf=\"swapBalanceDisplay === 'token'\">\n                                        {{ form.get(\"sourceFiat\")?.value | currency: \"USD\" : \"symbol\" : \"1.2-2\" }}\n                                    </ng-container>\n\n                                    <ng-container *ngIf=\"swapBalanceDisplay === 'fiat'\">\n                                        {{ form.get(\"sourceAsset\")?.value?.symbol }} {{ form.get(\"sourceAmount\")?.value || 0 | number: \"1.0-8\" }}\n                                    </ng-container>\n                                </p>\n\n                                <button\n                                    (click)=\"handleBalanceDisplayChange()\"\n                                    mat-flat-button\n                                    type=\"button\"\n                                    class=\"zelf-icon-button zelf-icon-button--hyperlink zelf-icon-button--pill\"\n                                >\n                                    <svg width=\"18\" height=\"14\" viewBox=\"0 0 18 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path\n                                            d=\"M3.13563 6.85496L0.355635 9.64496C0.165635 9.84496 0.165635 10.155 0.355635 10.355L3.13563 13.145C3.44563 13.465 3.98563 13.235 3.98563 12.795V10.995H9.99564C10.5456 10.995 10.9956 10.545 10.9956 9.99496C10.9956 9.44496 10.5456 8.99496 9.99564 8.99496H3.98563V7.20496C3.98563 6.75496 3.44563 6.53496 3.13563 6.85496ZM17.6456 3.64496L14.8656 0.854961C14.5556 0.534961 14.0156 0.764961 14.0156 1.20496V2.99496H7.99564C7.44563 2.99496 6.99564 3.44496 6.99564 3.99496C6.99564 4.54496 7.44563 4.99496 7.99564 4.99496H14.0056V6.78496C14.0056 7.23496 14.5456 7.45496 14.8556 7.13496L17.6356 4.34496C17.8356 4.15496 17.8356 3.83496 17.6456 3.64496Z\"\n                                        />\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"swap__asset-card-actions swap__asset-card-actions--right\">\n                            <div (click)=\"swapSource = 'source'\" class=\"swap__dropdown-selector\">\n                                <ng-container *ngIf=\"!hasSelectedSourceAsset\">\n                                    <p class=\"swap__asset-placeholder\">{{ t(\"swap.select_asset\") }}</p>\n                                </ng-container>\n\n                                <ng-container *ngIf=\"hasSelectedSourceAsset\">\n                                    <div class=\"swap__asset-logo-container\">\n                                        <img\n                                            [src]=\"selectedSourceAsset.image\"\n                                            *ngIf=\"selectedSourceAsset.image\"\n                                            alt=\"Source Asset\"\n                                            class=\"swap__asset-logo\"\n                                        />\n\n                                        <img\n                                            [src]=\"getNetworkImage(selectedSourceAsset.network)\"\n                                            alt=\"Source Network\"\n                                            class=\"swap__asset-network-logo\"\n                                        />\n                                    </div>\n\n                                    <div class=\"swap__asset-info\">\n                                        <p class=\"swap__asset-name\">{{ selectedSourceAsset.symbol }}</p>\n                                        <p class=\"swap__asset-symbol\">{{ getNetworkSymbol(selectedSourceAsset.network) }}</p>\n                                    </div>\n                                </ng-container>\n\n                                <button\n                                    mat-flat-button\n                                    type=\"button\"\n                                    class=\"zelf-icon-button zelf-icon-button--anti-flash-white zelf-icon-button--border-soft swap__asset-dropdown-button\"\n                                >\n                                    <ng-container *ngTemplateOutlet=\"downArrowIcon\"></ng-container>\n                                </button>\n                            </div>\n\n                            <div class=\"swap__quick-amounts\">\n                                <p class=\"swap__quick-amount\" [ngClass]=\"{ 'swap__quick-amount--error': form.get('sourceAmount')?.errors?.max }\">\n                                    {{ selectedSourceAsset.amount | number: \"1.2-4\" }}\n                                </p>\n\n                                <button\n                                    (click)=\"setAmount(0.5)\"\n                                    mat-flat-button\n                                    type=\"button\"\n                                    class=\"zelf-icon-button zelf-icon-button--hyperlink zelf-icon-button--pill\"\n                                >\n                                    50%\n                                </button>\n\n                                <button\n                                    (click)=\"setAmount(1)\"\n                                    mat-flat-button\n                                    type=\"button\"\n                                    class=\"zelf-icon-button zelf-icon-button--hyperlink zelf-icon-button--pill\"\n                                >\n                                    Max\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"swap__asset-switch\">\n                        <button\n                            [disabled]=\"!hasBothAssetsSet\"\n                            (click)=\"swapTargetWithSource()\"\n                            mat-flat-button\n                            type=\"button\"\n                            class=\"zelf-icon-button zelf-icon-button--black zelf-icon-button--40 zelf-icon-button--border-soft\"\n                        >\n                            <svg width=\"14\" height=\"18\" viewBox=\"0 0 14 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M10.9961 14.0149V8.0049C10.9961 7.4549 10.5461 7.0049 9.99612 7.0049C9.44612 7.0049 8.99612 7.4549 8.99612 8.0049V14.0149H7.20612C6.75612 14.0149 6.53612 14.5549 6.85612 14.8649L9.64612 17.6449C9.84612 17.8349 10.1561 17.8349 10.3561 17.6449L13.1461 14.8649C13.4661 14.5549 13.2361 14.0149 12.7961 14.0149H10.9961ZM3.64612 0.354902L0.856124 3.1449C0.536124 3.4549 0.756124 3.9949 1.20612 3.9949H2.99612V10.0049C2.99612 10.5549 3.44612 11.0049 3.99612 11.0049C4.54612 11.0049 4.99612 10.5549 4.99612 10.0049V3.9949H6.78612C7.23612 3.9949 7.45612 3.4549 7.13612 3.1449L4.34612 0.354902C4.15612 0.164902 3.83612 0.164902 3.64612 0.354902Z\"\n                                />\n                            </svg>\n                        </button>\n                    </div>\n\n                    <div class=\"swap__asset-card\">\n                        <div class=\"swap__asset-card-actions swap__asset-card-actions--left\">\n                            <div class=\"swap__asset-input-label\">{{ t(\"swap.you_receive\") }}</div>\n\n                            <div\n                                class=\"swap__amount-input-container\"\n                                [ngClass]=\"{ 'swap__amount-input-container--fiat': swapBalanceDisplay === 'fiat' }\"\n                            >\n                                <input\n                                    [hidden]=\"swapBalanceDisplay === 'fiat'\"\n                                    class=\"swap__amount-input\"\n                                    formControlName=\"targetAmount\"\n                                    placeholder=\"0\"\n                                    readonly\n                                    type=\"number\"\n                                />\n\n                                <input\n                                    [hidden]=\"swapBalanceDisplay === 'token'\"\n                                    class=\"swap__amount-input\"\n                                    formControlName=\"targetFiat\"\n                                    placeholder=\"0\"\n                                    readonly\n                                    type=\"number\"\n                                />\n                            </div>\n\n                            <div class=\"swap__balance-value\">\n                                <p class=\"swap__balance-value-label\">\n                                    <ng-container *ngIf=\"swapBalanceDisplay === 'token'\">\n                                        {{ form.get(\"targetFiat\")?.value | currency: \"USD\" : \"symbol\" : \"1.2-2\" }}\n                                    </ng-container>\n\n                                    <ng-container *ngIf=\"swapBalanceDisplay === 'fiat'\">\n                                        {{ form.get(\"targetAsset\")?.value?.symbol }} {{ form.get(\"targetAmount\")?.value || 0 | number: \"1.0-8\" }}\n                                    </ng-container>\n                                </p>\n                            </div>\n                        </div>\n\n                        <div class=\"swap__asset-card-actions swap__asset-card-actions--right\">\n                            <div (click)=\"swapSource = 'target'\" class=\"swap__dropdown-selector\">\n                                <ng-container *ngIf=\"!hasSelectedTargetAsset\">\n                                    <p class=\"swap__asset-placeholder\">{{ t(\"swap.select_asset\") }}</p>\n                                </ng-container>\n\n                                <ng-container *ngIf=\"hasSelectedTargetAsset\">\n                                    <div class=\"swap__asset-logo-container\">\n                                        <img\n                                            [src]=\"selectedTargetAsset.image\"\n                                            *ngIf=\"selectedTargetAsset.image\"\n                                            alt=\"Source Asset\"\n                                            class=\"swap__asset-logo\"\n                                        />\n\n                                        <img\n                                            [src]=\"getNetworkImage(selectedTargetAsset.network)\"\n                                            *ngIf=\"selectedTargetAsset.network\"\n                                            alt=\"Source Network\"\n                                            class=\"swap__asset-network-logo\"\n                                        />\n                                    </div>\n\n                                    <div class=\"swap__asset-info\">\n                                        <p class=\"swap__asset-name\">{{ selectedTargetAsset.symbol }}</p>\n                                        <p class=\"swap__asset-symbol\">{{ getNetworkSymbol(selectedTargetAsset.network) }}</p>\n                                    </div>\n                                </ng-container>\n\n                                <button\n                                    mat-flat-button\n                                    type=\"button\"\n                                    class=\"zelf-icon-button zelf-icon-button--anti-flash-white zelf-icon-button--border-soft swap__asset-dropdown-button\"\n                                >\n                                    <ng-container *ngTemplateOutlet=\"downArrowIcon\"></ng-container>\n                                </button>\n                            </div>\n\n                            <div class=\"swap__quick-amounts\">\n                                <p class=\"swap__quick-amount\">{{ selectedTargetAsset.amount | number: \"1.2-4\" }}</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"swap__details\">\n                        <div class=\"zelf-message zelf-message--error\" *ngIf=\"form.get('targetAsset')?.errors?.mustNotMatch\">\n                            <ng-container *ngTemplateOutlet=\"cross\"></ng-container>\n                            <p>{{ t(\"errors.swap_same_asset\") }}</p>\n                        </div>\n\n                        <div class=\"zelf-message zelf-message--error\" *ngIf=\"form.errors?.insufficientFunds\">\n                            <ng-container *ngTemplateOutlet=\"cross\"></ng-container>\n                            <p>{{ t(\"errors.insufficient_funds\") }}</p>\n                        </div>\n\n                        <div class=\"zelf-message zelf-message--error\" *ngIf=\"form.errors?.crossNetwork\">\n                            <ng-container *ngTemplateOutlet=\"cross\"></ng-container>\n                            <p>{{ t(\"errors.cannot_swap_across_these_networks\") }}</p>\n                        </div>\n\n                        <ng-container *ngIf=\"showDetails()\">\n                            <div class=\"swap__settings\">\n                                <button\n                                    [disabled]=\"bridgeOptions.length < 2\"\n                                    [matMenuTriggerFor]=\"bridgeMenu\"\n                                    type=\"button\"\n                                    class=\"zelf-button zelf-button--anti-flash-white swap__settings-button\"\n                                    mat-flat-button\n                                >\n                                    <span [innerHTML]=\"t('swap.powered_by', { bridge: getBridgeLabel() })\"></span>\n\n                                    <ng-container *ngIf=\"bridgeOptions.length > 1\">\n                                        <ng-container *ngTemplateOutlet=\"downArrowIcon\"></ng-container>\n                                    </ng-container>\n                                </button>\n\n                                <mat-menu class=\"zelf-menu\" #bridgeMenu=\"matMenu\">\n                                    <button\n                                        (click)=\"setBridge(bridgeOption.value)\"\n                                        *ngFor=\"let bridgeOption of bridgeOptions\"\n                                        class=\"zelf-menu-item\"\n                                        type=\"button\"\n                                        mat-menu-item\n                                    >\n                                        <label [for]=\"bridgeOption.value\" class=\"zelf-radio zelf-radio--plain zelf-radio--gap-lg\">\n                                            <span>{{ bridgeOption.label }}</span>\n\n                                            <input\n                                                [id]=\"bridgeOption.value\"\n                                                [value]=\"bridgeOption.value\"\n                                                formControlName=\"bridge\"\n                                                name=\"bridge\"\n                                                type=\"radio\"\n                                            />\n\n                                            <svg viewBox=\"0 0 21 21\">\n                                                <polyline points=\"5 10.75 8.5 14.25 16 6\"></polyline>\n                                            </svg>\n                                        </label>\n                                    </button>\n                                </mat-menu>\n                            </div>\n\n                            <div class=\"zelf-action-row\">\n                                <div class=\"swap__detail-field swap__detail-field--gray\">\n                                    <p class=\"swap__details-label\">{{ t(\"swap.pricing\") }}</p>\n\n                                    <div class=\"tooltip-container\">\n                                        <ng-container *ngTemplateOutlet=\"informationIcon\"></ng-container>\n\n                                        <div class=\"tooltip\">\n                                            <div class=\"tooltip__content\">\n                                                <ng-container *ngTemplateOutlet=\"informationIcon\"></ng-container>\n                                                <p class=\"tooltip__content-text\">{{ t(\"swap.pricing_text\") }}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"swap__detail-field swap__detail-field--black\">\n                                    <p class=\"swap__details-value\">\n                                        1 {{ selectedSourceAsset.symbol }}\n                                        <ng-container *ngIf=\"hasSelectedTargetAsset\"\n                                            >~ {{ form.get(\"targetSwapValue\")?.value | number: \"1.0-8\" }}\n                                            {{ selectedTargetAsset.symbol }}</ng-container\n                                        >\n                                    </p>\n                                </div>\n                            </div>\n\n                            <div class=\"zelf-action-row\">\n                                <div class=\"swap__detail-field swap__detail-field--gray\">\n                                    <p class=\"swap__details-label\">{{ t(\"swap.fees\") }}</p>\n\n                                    <div class=\"tooltip-container\">\n                                        <ng-container *ngTemplateOutlet=\"informationIcon\"></ng-container>\n\n                                        <div class=\"tooltip\">\n                                            <div class=\"tooltip__content\">\n                                                <ng-container *ngTemplateOutlet=\"informationIcon\"></ng-container>\n                                                <p class=\"tooltip__content-text\">{{ t(\"swap.fees_text\") }}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"swap__detail-field swap__detail-field--black\">\n                                    <p class=\"swap__details-value\">{{ form.get(\"fee\")?.value | currency: \"USD\" : \"symbol\" : \"1.2-8\" }}</p>\n                                </div>\n                            </div>\n\n                            <div class=\"zelf-action-row\">\n                                <div class=\"swap__detail-field swap__detail-field--gray\">\n                                    <p class=\"swap__details-label\">{{ t(\"swap.slippage\") }}</p>\n\n                                    <div class=\"tooltip-container\">\n                                        <ng-container *ngTemplateOutlet=\"informationIcon\"></ng-container>\n\n                                        <div class=\"tooltip\">\n                                            <div class=\"tooltip__content\">\n                                                <ng-container *ngTemplateOutlet=\"informationIcon\"></ng-container>\n                                                <p class=\"tooltip__content-text\">\n                                                    {{ t(\"swap.slippage_text\", { slippage: form.get(\"slippage\")?.value }) }}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"swap__detail-field swap__detail-field--black\">\n                                    <p class=\"swap__details-value\">{{ form.get(\"slippage\")?.value | number: \"1.2-2\" }} %</p>\n\n                                    <button\n                                        (click)=\"openSlippageSheet()\"\n                                        type=\"button\"\n                                        class=\"zelf-icon-button zelf-icon-button--transparent zelf-icon-button--40\"\n                                        mat-flat-button\n                                    >\n                                        <ng-container *ngTemplateOutlet=\"editIcon\"></ng-container>\n                                    </button>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n\n                <div class=\"zelf-card__actions swap__actions\">\n                    <div\n                        class=\"zelf-input zelf-input--wide\"\n                        [ngClass]=\"{ 'zelf-input--error': form.get('password')?.dirty && form.get('password')?.errors }\"\n                        *ngIf=\"!passwordSet\"\n                    >\n                        <input\n                            [type]=\"showPassword ? 'text' : 'password'\"\n                            autocomplete=\"off\"\n                            class=\"zelf-input__control zelf-input__control--floating-label\"\n                            formControlName=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\" \"\n                            required\n                        />\n\n                        <label for=\"password\" class=\"zelf-input__floating-label\">{{ t(\"common.password\") }}</label>\n\n                        <ng-container *ngTemplateOutlet=\"toggleButton\"></ng-container>\n                    </div>\n\n                    <div class=\"zelf-message zelf-message--error\" *ngIf=\"passwordError\">\n                        <ng-container *ngTemplateOutlet=\"cross\"></ng-container>\n                        <p>{{ t(\"errors.invalid_password\", { remaining: remainingAttempts }) }}</p>\n                    </div>\n\n                    <button\n                        (click)=\"confirmSwap()\"\n                        [disabled]=\"isConfirmDisabled()\"\n                        class=\"zelf-button zelf-button--black zelf-button--wide\"\n                        mat-flat-button\n                    >\n                        <ng-container *ngIf=\"!requiresBiometrics\">{{ t(\"swap.confirm_swap\") }}</ng-container>\n                        <ng-container *ngIf=\"requiresBiometrics\">{{ t(\"common.verify\") }}</ng-container>\n\n                        <mat-spinner *ngIf=\"sending\" mode=\"indeterminate\" diameter=\"18\"></mat-spinner>\n                    </button>\n                </div>\n\n                <input type=\"hidden\" formControlName=\"bridge\" />\n                <input type=\"hidden\" formControlName=\"slippageToggle\" />\n                <input type=\"hidden\" formControlName=\"slippage\" />\n                <input type=\"hidden\" formControlName=\"commissionToggle\" />\n                <input type=\"hidden\" formControlName=\"commission\" />\n                <input type=\"hidden\" formControlName=\"sourceAsset\" />\n                <input type=\"hidden\" formControlName=\"targetAsset\" />\n            </form>\n        </ng-container>\n\n        <swap-currency\n            (assetChange)=\"handleAssetChange($event)\"\n            [myAssets]=\"tokens\"\n            [selectedAsset]=\"swapSource === 'source' ? selectedSourceAsset : selectedTargetAsset\"\n            [source]=\"swapSource\"\n            *ngIf=\"swapSource\"\n        ></swap-currency>\n    </ng-container>\n\n    <zelf-loader *ngIf=\"loading || quoteLoading\"></zelf-loader>\n</div>\n\n<ng-template #downArrowIcon>\n    <svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M9.87498 0.999531L5.99498 4.87953L2.11498 0.999531C1.72498 0.609531 1.09498 0.609531 0.704976 0.999531C0.314976 1.38953 0.314976 2.01953 0.704976 2.40953L5.29498 6.99953C5.68498 7.38953 6.31498 7.38953 6.70498 6.99953L11.295 2.40953C11.685 2.01953 11.685 1.38953 11.295 0.999531C10.905 0.619531 10.265 0.609531 9.87498 0.999531Z\"\n        />\n    </svg>\n</ng-template>\n\n<ng-template #informationIcon>\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M10 0C4.48 0 0 4.48 0 10C0 15.52 4.48 20 10 20C15.52 20 20 15.52 20 10C20 4.48 15.52 0 10 0ZM10 15C9.45 15 9 14.55 9 14V10C9 9.45 9.45 9 10 9C10.55 9 11 9.45 11 10V14C11 14.55 10.55 15 10 15ZM11 7H9V5H11V7Z\"\n        />\n    </svg>\n</ng-template>\n\n<ng-template #editIcon>\n    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M-0.0012207 14.4615V17.5015C-0.0012207 17.7815 0.218779 18.0015 0.498779 18.0015H3.53878C3.66878 18.0015 3.79878 17.9515 3.88878 17.8515L14.8088 6.94152L11.0588 3.19152L0.148779 14.1015C0.0487794 14.2015 -0.0012207 14.3215 -0.0012207 14.4615Z\"\n        />\n        <path\n            d=\"M17.7088 2.63152L15.3688 0.291523C14.9788 -0.0984766 14.3488 -0.0984766 13.9588 0.291523L12.1288 2.12152L15.8788 5.87152L17.7088 4.04152C18.0988 3.65152 18.0988 3.02152 17.7088 2.63152Z\"\n        />\n    </svg>\n</ng-template>\n\n<ng-template #openEye>\n    <svg\n        fill=\"none\"\n        height=\"24\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        stroke=\"#181818\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n        <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n    </svg>\n</ng-template>\n\n<ng-template #closedEye>\n    <svg\n        fill=\"none\"\n        height=\"24\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        stroke-width=\"2\"\n        stroke=\"#181818\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n            d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"\n        ></path>\n        <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n    </svg>\n</ng-template>\n\n<ng-template #toggleButton>\n    <button\n        (click)=\"toggleShowPassword()\"\n        class=\"zelf-icon-button zelf-icon-button--transparent zelf-icon-button--no-fill\"\n        type=\"button\"\n        mat-icon-button\n        tabindex=\"-1\"\n    >\n        <ng-container *ngTemplateOutlet=\"showPassword ? openEye : closedEye\"></ng-container>\n    </button>\n</ng-template>\n\n<ng-template #cross>\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M10 0C4.47 0 0 4.47 0 10C0 15.53 4.47 20 10 20C15.53 20 20 15.53 20 10C20 4.47 15.53 0 10 0ZM14.3 14.3C13.91 14.69 13.28 14.69 12.89 14.3L10 11.41L7.11 14.3C6.72 14.69 6.09 14.69 5.7 14.3C5.31 13.91 5.31 13.28 5.7 12.89L8.59 10L5.7 7.11C5.31 6.72 5.31 6.09 5.7 5.7C6.09 5.31 6.72 5.31 7.11 5.7L10 8.59L12.89 5.7C13.28 5.31 13.91 5.31 14.3 5.7C14.69 6.09 14.69 6.72 14.3 7.11L11.41 10L14.3 12.89C14.68 13.27 14.68 13.91 14.3 14.3Z\"\n            fill=\"#DC362E\"\n        />\n    </svg>\n</ng-template>\n","import { NgClass } from \"@angular/common\";\nimport { Component, Inject, OnDestroy, AfterViewInit, ElementRef, ViewChild } from \"@angular/core\";\nimport { AbstractControl, FormBuilder, FormsModule, ReactiveFormsModule, UntypedFormGroup, Validators } from \"@angular/forms\";\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from \"@angular/material/bottom-sheet\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { NetworkName, NetworkService } from \"app/services/network.service\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nexport interface SlippageSheetData {\n    commission: number;\n    commissionToggle: string;\n    network: string;\n    slippage: number;\n    slippageToggle: string;\n}\n\n@Component({\n    imports: [NgClass, ReactiveFormsModule, FormsModule, MatButtonModule, TranslocoModule],\n    selector: \"slippage-sheet\",\n    styleUrls: [\"./slippage-sheet.component.scss\"],\n    templateUrl: \"./slippage-sheet.component.html\",\n})\nexport class SlippageSheetComponent implements OnDestroy, AfterViewInit {\n    @ViewChild(\"slippageSlider\") slippageSlider?: ElementRef<HTMLInputElement>;\n\n    private unsubscriber$: Subject<void> = new Subject<void>();\n\n    form!: UntypedFormGroup;\n\n    constructor(\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: SlippageSheetData,\n        private _formBuilder: FormBuilder,\n        private _bottomSheetRef: MatBottomSheetRef<SlippageSheetComponent>,\n        private _networkService: NetworkService\n    ) {\n        this._initForm();\n    }\n\n    ngAfterViewInit(): void {\n        this._updateRangeProgress();\n    }\n\n    ngOnDestroy(): void {\n        this.unsubscriber$.next();\n        this.unsubscriber$.complete();\n    }\n\n    get networkSymbol(): string {\n        return this._networkService.getNetworkSymbol(this.data.network.toLowerCase() as NetworkName);\n    }\n\n    private _initForm(): void {\n        this.form = this._formBuilder.group({\n            commission: [this.data.commission || 0.1, [Validators.min(0), this._requiredIfManual(\"commissionToggle\")]],\n            commissionToggle: [this.data.commissionToggle || \"automatic\", [Validators.required]],\n            slippage: [this.data.slippage || 0.5, [Validators.required, Validators.min(0), Validators.max(0.8)]],\n            slippageToggle: [this.data.slippageToggle || \"automatic\", [this._requiredIfManual(\"slippageToggle\")]],\n        });\n\n        this.form\n            .get(\"commissionToggle\")\n            ?.valueChanges.pipe(takeUntil(this.unsubscriber$))\n            .subscribe(() => {\n                this.form.get(\"commission\")?.updateValueAndValidity();\n            });\n\n        this.form\n            .get(\"slippageToggle\")\n            ?.valueChanges.pipe(takeUntil(this.unsubscriber$))\n            .subscribe(() => {\n                this.form.get(\"slippage\")?.updateValueAndValidity();\n                this._updateRangeProgress();\n            });\n\n        this.form\n            .get(\"slippage\")\n            ?.valueChanges.pipe(takeUntil(this.unsubscriber$))\n            .subscribe(() => {\n                this._updateRangeProgress();\n            });\n    }\n\n    private _requiredIfManual = (formControlName: string) => {\n        return (control: AbstractControl) => {\n            const toggle = this.form?.get(formControlName)?.value;\n\n            if (toggle === \"manual\") return Validators.required(control);\n\n            return null;\n        };\n    };\n\n    private _updateRangeProgress(): void {\n        requestAnimationFrame(() => {\n            const slider = this.slippageSlider?.nativeElement;\n\n            if (!slider) return;\n\n            try {\n                const value = parseFloat(this.form.get(\"slippage\")?.value) || 0;\n\n                const min = parseFloat(slider.min) || 0.1;\n                const max = parseFloat(slider.max) || 0.8;\n\n                if (isNaN(value) || isNaN(min) || isNaN(max)) return;\n\n                const percentage = Math.max(0, Math.min(100, ((value - min) / (max - min)) * 100));\n\n                slider.style.setProperty(\"--progress\", `${percentage}%`);\n            } catch (error) {\n                console.error(\"Error updating range progress:\", error);\n            }\n        });\n    }\n\n    close(): void {\n        this._bottomSheetRef.dismiss();\n    }\n\n    async confirm(): Promise<void> {\n        if (!this.form.valid || this.form.pristine) return;\n\n        this._bottomSheetRef.dismiss(this.form.value);\n    }\n\n    toggleMode(controlName: string): void {\n        if (!this.form) return;\n\n        const control = this.form.get(controlName);\n\n        if (!control) return;\n\n        const currentValue = control.value;\n        const newValue = currentValue === \"automatic\" ? \"manual\" : \"automatic\";\n\n        control.setValue(newValue);\n\n        this.form.markAsDirty();\n\n        if (controlName === \"slippageToggle\") {\n            requestAnimationFrame(() => this._updateRangeProgress());\n        }\n    }\n}\n","<ng-container *transloco=\"let t\">\n    <form [formGroup]=\"form\" class=\"slippage-sheet\">\n        <button mat-flat-button class=\"slippage-sheet__exit\" (click)=\"close()\">\n            <div class=\"slippage-sheet__exit-icon\">\n                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M13.3 0.710703C12.91 0.320703 12.28 0.320703 11.89 0.710703L6.99997 5.5907L2.10997 0.700703C1.71997 0.310703 1.08997 0.310703 0.699971 0.700703C0.309971 1.0907 0.309971 1.7207 0.699971 2.1107L5.58997 7.0007L0.699971 11.8907C0.309971 12.2807 0.309971 12.9107 0.699971 13.3007C1.08997 13.6907 1.71997 13.6907 2.10997 13.3007L6.99997 8.4107L11.89 13.3007C12.28 13.6907 12.91 13.6907 13.3 13.3007C13.69 12.9107 13.69 12.2807 13.3 11.8907L8.40997 7.0007L13.3 2.1107C13.68 1.7307 13.68 1.0907 13.3 0.710703Z\"\n                    />\n                </svg>\n            </div>\n        </button>\n\n        <div class=\"slippage-sheet__body\">\n            <h3 class=\"slippage-sheet__title\">\n                {{ t(\"swap.slipping_adjustments\") }}\n            </h3>\n\n            <div class=\"slippage-sheet__container\">\n                <div class=\"slippage-sheet__switch-container\">\n                    <div class=\"slippage-sheet__switch-title\">{{ t(\"swap.slipping\") }}</div>\n\n                    <div class=\"slippage-sheet__switch-group\">\n                        <div class=\"slippage-sheet__switch\" (click)=\"toggleMode('slippageToggle')\">\n                            <p\n                                class=\"slippage-sheet__switch-label\"\n                                [ngClass]=\"{ 'slippage-sheet__switch-label--active': form.get('slippageToggle')?.value === 'automatic' }\"\n                            >\n                                {{ \"swap.\" + form.get(\"slippageToggle\")?.value | transloco }}\n                            </p>\n\n                            <input\n                                [checked]=\"form.get('slippageToggle')?.value === 'automatic'\"\n                                class=\"slippage-sheet__switch-input\"\n                                type=\"checkbox\"\n                            />\n\n                            <div class=\"slippage-sheet__switch-track\">\n                                <div class=\"slippage-sheet__switch-thumb\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <p class=\"slippage-sheet__text\">{{ t(\"swap.slipping_subtitle\") }}</p>\n\n                <div class=\"slippage-sheet__slider-container\" [style.display]=\"form.get('slippageToggle')?.value === 'manual' ? 'flex' : 'none'\">\n                    <div class=\"slippage-sheet__slider-input-row\">\n                        <div class=\"slippage-sheet__slider-input-container\">\n                            <label for=\"slippage\" class=\"slippage-sheet__slider-label\">\n                                <div class=\"slippage-sheet__slider-dots\">\n                                    <div class=\"slippage-sheet__slider-dot\"></div>\n                                    <div class=\"slippage-sheet__slider-dot\"></div>\n                                    <div class=\"slippage-sheet__slider-dot\"></div>\n                                    <div class=\"slippage-sheet__slider-dot\"></div>\n                                    <div class=\"slippage-sheet__slider-dot\"></div>\n                                    <div class=\"slippage-sheet__slider-dot\"></div>\n                                    <div class=\"slippage-sheet__slider-dot\"></div>\n                                    <div class=\"slippage-sheet__slider-dot\"></div>\n                                </div>\n                                <input\n                                    #slippageSlider\n                                    formControlName=\"slippage\"\n                                    class=\"slippage-sheet__slider\"\n                                    max=\"0.8\"\n                                    min=\"0.1\"\n                                    step=\"0.1\"\n                                    type=\"range\"\n                                />\n                            </label>\n                        </div>\n\n                        <div class=\"slippage-sheet__slider-value\">{{ form.get(\"slippage\")?.value }}%</div>\n                    </div>\n\n                    <p class=\"slippage-sheet__slider-subtitle\">{{ t(\"swap.slipping_more_info\") }}</p>\n                </div>\n            </div>\n\n            <div class=\"slippage-sheet__container\">\n                <div class=\"slippage-sheet__switch-container\">\n                    <div class=\"slippage-sheet__switch-title\">{{ t(\"swap.priority_commission\") }}</div>\n\n                    <div class=\"slippage-sheet__switch-group\">\n                        <div class=\"slippage-sheet__switch\" (click)=\"toggleMode('commissionToggle')\">\n                            <p\n                                class=\"slippage-sheet__switch-label\"\n                                [ngClass]=\"{ 'slippage-sheet__switch-label--active': form.get('commissionToggle')?.value === 'automatic' }\"\n                            >\n                                {{ \"swap.\" + form.get(\"commissionToggle\")?.value | transloco }}\n                            </p>\n\n                            <input\n                                [checked]=\"form.get('commissionToggle')?.value === 'automatic'\"\n                                class=\"slippage-sheet__switch-input\"\n                                type=\"checkbox\"\n                            />\n\n                            <div class=\"slippage-sheet__switch-track\">\n                                <div class=\"slippage-sheet__switch-thumb\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <p class=\"slippage-sheet__text\">{{ t(\"swap.priority_commission_subtitle\") }}</p>\n\n                <div class=\"slippage-sheet__input-container\" [style.display]=\"form.get('commissionToggle')?.value === 'manual' ? 'block' : 'none'\">\n                    <div class=\"zelf-input zelf-input--wide\">\n                        <input\n                            class=\"zelf-input__control\"\n                            formControlName=\"commission\"\n                            id=\"commission\"\n                            name=\"commission\"\n                            placeholder=\"0.1\"\n                            required\n                            type=\"number\"\n                        />\n\n                        <p class=\"zelf-input__postfix slippage-sheet__input-postfix\">{{ networkSymbol }}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"slippage-sheet__actions\">\n            <button (click)=\"confirm()\" class=\"zelf-button zelf-button--black zelf-button--wide\" mat-flat-button>\n                {{ t(\"common.confirm\") }}\n            </button>\n        </div>\n    </form>\n</ng-container>\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ethers } from \"ethers\";\nimport { firstValueFrom, Observable, of } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\n\nimport { SolanaService } from \"app/solana.service\";\nimport { TokenData } from \"app/wallet\";\nimport { environment } from \"environments/environment\";\nimport { LifiQuote, LifiToken, LifiTokensResponse } from \"app/models/lifi.model\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class LifiService {\n    private readonly ERC20_ABI = [\n        {\n            name: \"approve\",\n            inputs: [\n                { name: \"spender\", type: \"address\" },\n                { name: \"amount\", type: \"uint256\" },\n            ],\n            outputs: [{ name: \"\", type: \"bool\" }],\n            stateMutability: \"nonpayable\",\n            type: \"function\",\n        },\n        {\n            name: \"allowance\",\n            inputs: [\n                { name: \"owner\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n            ],\n            outputs: [{ name: \"amount\", type: \"uint256\" }],\n            stateMutability: \"view\",\n            type: \"function\",\n        },\n    ];\n\n    constructor(\n        private _http: HttpClient,\n        private _solanaService: SolanaService\n    ) {}\n\n    get MIN_PRICE_USD(): number {\n        return 0.01;\n    }\n\n    get LIFI_API_URL(): string {\n        return `${environment.apiUrl}/api/lifi`;\n    }\n\n    get chainIdToSymbol(): Record<string, string> {\n        return {\n            \"1\": \"ETH\",\n            \"137\": \"POL\",\n            \"43114\": \"AVAX\",\n            \"56\": \"BNB\",\n        };\n    }\n\n    get lifiChainSymbols(): string[] {\n        return [\"eth\", \"ava\", \"sol\", \"pol\", \"bsc\"];\n    }\n\n    /**\n     * Format amount to avoid scientific notation\n     */\n    private _formatAmount(amount: string): string {\n        const numAmount = parseFloat(amount);\n\n        if (numAmount < 0.000001 && numAmount > 0) return numAmount.toFixed(18).replace(/\\.?0+$/, \"\");\n\n        return numAmount.toString();\n    }\n\n    async requestTokens(): Promise<{ tokens: { [chainId: string]: LifiToken[] } }> {\n        const defaultResponse = { data: { tokens: {} } };\n\n        try {\n            const { data: standardResponse } = await firstValueFrom<LifiTokensResponse>(\n                this._http\n                    .get<LifiTokensResponse>(`${this.LIFI_API_URL}/tokens`, { params: { chains: \"ETH,AVA,SUI\", minPriceUSD: this.MIN_PRICE_USD } })\n                    .pipe(\n                        catchError((err) => {\n                            console.warn(\"Failed to fetch standard tokens:\", err);\n\n                            return of(defaultResponse);\n                        })\n                    )\n            );\n\n            const { data: solanaResponse } = await firstValueFrom<LifiTokensResponse>(\n                this._http\n                    .get<LifiTokensResponse>(`${this.LIFI_API_URL}/tokens`, {\n                        params: { chains: \"SOL\", chainTypes: \"SVM\", minPriceUSD: this.MIN_PRICE_USD },\n                    })\n                    .pipe(\n                        catchError((err) => {\n                            console.warn(\"Failed to fetch Solana tokens:\", err);\n\n                            return of(defaultResponse);\n                        })\n                    )\n            );\n\n            const result = { tokens: { ...(standardResponse.tokens || {}) } };\n\n            if (solanaResponse?.tokens) {\n                result.tokens.SOL = solanaResponse.tokens?.SOL || solanaResponse.tokens?.sol || [];\n\n                if (!result.tokens.SOL.length) result.tokens.SOL = Object.values(solanaResponse.tokens).flat();\n            }\n\n            return result;\n        } catch (error) {\n            console.error(\"Error in requestTokens:\", error);\n\n            return { tokens: {} };\n        }\n    }\n\n    getTokens(): Observable<Record<string, LifiToken[]>> {\n        const chains = this.lifiChainSymbols;\n        const combined: Record<string, LifiToken[]> = {};\n\n        return this._http\n            .get<LifiTokensResponse>(`${this.LIFI_API_URL}/tokens`, { params: { chains: chains.join(\",\"), minPriceUSD: this.MIN_PRICE_USD } })\n            .pipe(\n                map((result) => {\n                    if (!result?.data?.tokens) return combined;\n\n                    chains.forEach((chain) => {\n                        const chainSymbol = this.chainIdToSymbol[chain];\n\n                        if (!chainSymbol) return;\n\n                        combined[chainSymbol] = result.data.tokens[chain] || [];\n                    });\n\n                    return combined;\n                }),\n                catchError((error) => {\n                    console.error(\"Error in combined token request:\", error);\n\n                    return of(combined);\n                })\n            );\n    }\n\n    /**\n     * Get the chain identifier for LiFi API\n     */\n    getChainIdentifier(network: string): string {\n        switch (network.toLowerCase()) {\n            case \"ethereum\":\n                return \"ETH\";\n            case \"polygon\":\n                return \"POL\";\n            case \"binance\":\n                return \"BNB\";\n            case \"avalanche\":\n                return \"AVA\";\n            case \"solana\":\n                return \"SOL\";\n            default:\n                return network.toUpperCase();\n        }\n    }\n\n    /**\n     * Format amount with proper decimals\n     */\n    formatAmount(amount: string, decimals: number): string {\n        try {\n            const amountStr = String(amount);\n            const amountBN = ethers.parseUnits(amountStr, decimals);\n\n            return amountBN.toString();\n        } catch (error) {\n            console.error(\"Error formatting amount:\", error);\n\n            return \"0\";\n        }\n    }\n\n    /**\n     * Execute a swap transaction\n     */\n    async executeSwap(quote: any, wallet: any): Promise<any> {\n        try {\n            const provider = new ethers.JsonRpcProvider(this.getNetworkRPC(quote.action.fromChainId));\n            const signer = new ethers.Wallet(wallet.privateKey, provider);\n\n            const NATIVE_TOKEN_ADDRESS = \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\n            const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\n            const isFromNative =\n                quote.action.fromToken.address.toLowerCase() === NATIVE_TOKEN_ADDRESS.toLowerCase() ||\n                quote.action.fromToken.address.toLowerCase() === ZERO_ADDRESS.toLowerCase();\n\n            const feeData = await provider.getFeeData();\n            const nonce = await provider.getTransactionCount(signer.address, \"latest\");\n\n            const tx = {\n                to: quote.transactionRequest.to,\n                data: quote.transactionRequest.data,\n                nonce: nonce,\n                value: isFromNative ? quote.transactionRequest.value : \"0\",\n                maxFeePerGas: feeData.maxFeePerGas,\n                maxPriorityFeePerGas: feeData.maxPriorityFeePerGas,\n                gasLimit: quote.transactionRequest.gasLimit ? BigInt(quote.transactionRequest.gasLimit) : ethers.parseUnits(\"800000\", \"wei\"),\n            };\n\n            if (!isFromNative) {\n                await this.checkAndSetAllowance(\n                    quote.action.fromToken.address,\n                    quote.estimate.approvalAddress,\n                    quote.action.fromAmount,\n                    wallet.address,\n                    wallet.privateKey,\n                    quote.action.fromChainId.toString()\n                );\n            }\n\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n\n            const latestNonce = await provider.getTransactionCount(signer.address, \"latest\");\n\n            tx.nonce = latestNonce;\n\n            const transaction = await signer.sendTransaction(tx);\n\n            try {\n                const receipt = await transaction.wait();\n\n                return { ...(receipt || {}), transactionHash: receipt?.hash || transaction?.hash };\n            } catch (error) {\n                return { ...transaction, transactionHash: transaction.hash };\n            }\n        } catch (error) {\n            console.error(\"Detailed swap execution error:\", error);\n            throw error;\n        }\n    }\n\n    private async checkAndSetAllowance(\n        tokenAddress: string,\n        spender: string,\n        amount: string,\n        owner: string,\n        privateKey: string,\n        network: string\n    ): Promise<void> {\n        try {\n            const provider = new ethers.JsonRpcProvider(this.getNetworkRPC(network));\n            const signer = new ethers.Wallet(privateKey, provider);\n            const contract = new ethers.Contract(tokenAddress, this.ERC20_ABI, signer);\n\n            const currentAllowance = await contract.allowance.staticCall(owner, spender);\n\n            if (BigInt(currentAllowance.toString()) < BigInt(amount)) {\n                const feeData = await provider.getFeeData();\n\n                const tx = await contract.approve(spender, amount, {\n                    gasLimit: ethers.parseUnits(\"200000\", \"wei\"),\n                    maxFeePerGas: feeData.maxFeePerGas,\n                    maxPriorityFeePerGas: feeData.maxPriorityFeePerGas,\n                });\n\n                await tx.wait();\n            }\n        } catch (error) {\n            console.error(\"Error in checkAndSetAllowance:\", error);\n            throw error;\n        }\n    }\n\n    private getNetworkRPC(chainId: string | number): string {\n        const networkMappings: { [key: string]: string } = {\n            \"1\": environment.ethereumRpc.mainnet,\n            \"137\": environment.polygonRpc.mainnet,\n            \"43114\": environment.avalancheRpc.mainnet,\n        };\n\n        const rpc = networkMappings[chainId.toString()];\n\n        if (!rpc) throw new Error(`Unsupported network: ${chainId}`);\n\n        return rpc;\n    }\n\n    async sendTransaction(params: any): Promise<any> {\n        try {\n            const provider = new ethers.JsonRpcProvider(params.network);\n            const signer = new ethers.Wallet(params.privateKey, provider);\n\n            const gasEstimate = await provider.estimateGas({\n                to: params.to,\n                data: params.data,\n                value: params.value,\n            });\n\n            const feeData = await provider.getFeeData();\n            const tx = {\n                to: params.to,\n                data: params.data,\n                value: params.value,\n                gasLimit: ethers.parseUnits(Math.floor(Number(gasEstimate) * 1.2).toString(), \"wei\"),\n                maxFeePerGas: feeData.maxFeePerGas,\n                maxPriorityFeePerGas: feeData.maxPriorityFeePerGas,\n            };\n\n            const transaction = await signer.sendTransaction(tx);\n\n            try {\n                const receipt = await transaction.wait();\n\n                return { ...(receipt || {}), transactionHash: receipt?.hash || transaction?.hash };\n            } catch (error) {\n                return { ...transaction, transactionHash: transaction.hash };\n            }\n        } catch (error) {\n            console.error(\"Error sending transaction:\", error);\n            throw error;\n        }\n    }\n\n    getTokenImage(token: TokenData): string {\n        if (token.image?.startsWith(\"http\")) return token.image;\n\n        return `assets/tokens/placeholder-coin.png`;\n    }\n\n    /**\n     * Get the correct token address for the given network and symbol\n     */\n    getTokenAddress(network: string, symbol: string, contractAddress: string): string {\n        if (network.toLowerCase() === \"solana\") {\n            const solanaTokens: { [key: string]: string } = {\n                SOL: \"So11111111111111111111111111111111111111112\",\n            };\n\n            if (solanaTokens[symbol.toUpperCase()]) {\n                return solanaTokens[symbol.toUpperCase()];\n            }\n\n            if (contractAddress && !contractAddress.startsWith(\"0x\")) {\n                return contractAddress;\n            }\n\n            console.warn(`Token ${symbol} no reconocido en Solana, usando SOL nativo como fallback`);\n\n            return \"So11111111111111111111111111111111111111112\";\n        }\n\n        if ([\"ETH\", \"AVAX\", \"BNB\", \"MATIC\"].includes(symbol.toUpperCase())) {\n            return \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\n        }\n\n        return contractAddress;\n    }\n    async getSwapGasCost(swapQuote: any): Promise<any> {\n        try {\n            return {\n                gasLimit: \"300000\",\n                gasPrice: \"3000000000\",\n                maxFeePerGas: \"4000000000\",\n                maxPriorityFeePerGas: \"2000000000\",\n            };\n        } catch (error) {\n            console.error(\"Error estimating swap gas:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * Get routes for token swap including Solana support\n     */\n    getRoutes(\n        fromChain: string | number,\n        fromToken: string,\n        toChain: string | number,\n        toToken: string,\n        fromAmount: string,\n        fromAddress: string,\n        toAddress: string,\n        slippage: number = 3\n    ): Observable<any> {\n        const requestBody = {\n            fromChainId: fromChain,\n            fromAmount,\n            toChainId: toChain,\n            fromTokenAddress: fromToken,\n            toTokenAddress: toToken,\n            fromAddress,\n            toAddress,\n            options: {\n                slippage: slippage / 100,\n            },\n        };\n\n        return this._http.post<{ data: any }>(`${this.LIFI_API_URL}/advanced/routes`, requestBody);\n    }\n\n    /**\n     * Get a quote for a swap\n     */\n    getQuote(\n        fromChain: string,\n        fromToken: string,\n        toChain: string,\n        toToken: string,\n        fromAmount: string,\n        fromAddress: string,\n        slippage: string\n    ): Promise<LifiQuote> {\n        const formattedAmount = this._formatAmount(fromAmount.toString());\n\n        const params = {\n            fromChain,\n            fromToken,\n            toChain,\n            toToken,\n            fromAmount: formattedAmount,\n            fromAddress,\n            slippage: slippage.toString(),\n        };\n\n        return firstValueFrom(\n            this._http.get<{ data: LifiQuote }>(`${this.LIFI_API_URL}/quote`, { params }).pipe(\n                map((response) => {\n                    const quote = response.data;\n\n                    if (fromToken.toLowerCase().includes(\"usdc\") && toToken.toLowerCase().includes(\"sol\")) {\n                        const usdcAmount = parseFloat(formattedAmount);\n                        const solPrice = 146;\n                        const expectedSolAmount = usdcAmount / solPrice;\n\n                        if (quote.estimate) {\n                            quote.estimate.toAmount = expectedSolAmount.toFixed(9);\n                            quote.estimate.toAmountMin = (expectedSolAmount * 0.99).toFixed(9);\n                        }\n                    }\n\n                    return quote;\n                }),\n                catchError((error) => {\n                    console.error(\"Error getting quote:\", error);\n                    throw error;\n                })\n            )\n        );\n    }\n\n    async executeSwapWithApproval(quote: any, wallet: any, sourceNetwork: string, sourceToken: any, targetToken: any): Promise<any> {\n        try {\n            if (!quote || !quote.estimate || Number(quote.estimate.toAmount) === 0) {\n                console.error(\"No hay ruta de swap o liquidez insuficiente. Aborting swap.\");\n                throw new Error(\"No hay ruta de swap o liquidez insuficiente\");\n            }\n\n            if (sourceNetwork === \"avalanche\") {\n                return this.executeDirectSwap(wallet, sourceNetwork, sourceToken, targetToken, quote.action.fromAmount);\n            }\n        } catch (error) {\n            console.error(\"Error ejecutando swap:\", error);\n            throw error;\n        }\n    }\n\n    async executeDirectSwap(wallet: any, sourceNetwork: string, sourceToken: any, targetToken: any, amount: string): Promise<any> {\n        try {\n            const ROUTER_ADDRESS = \"0x60aE616a2155Ee3d9A68541Ba4544862310933d4\";\n            const WAVAX_ADDRESS = \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\";\n            const ROUTER_ABI = [\n                {\n                    inputs: [\n                        { name: \"amountIn\", type: \"uint256\" },\n                        { name: \"amountOutMin\", type: \"uint256\" },\n                        { name: \"path\", type: \"address[]\" },\n                        { name: \"to\", type: \"address\" },\n                        { name: \"deadline\", type: \"uint256\" },\n                    ],\n                    name: \"swapExactTokensForTokens\",\n                    outputs: [{ name: \"amounts\", type: \"uint256[]\" }],\n                    type: \"function\",\n                },\n\n                {\n                    inputs: [\n                        { name: \"amountIn\", type: \"uint256\" },\n                        { name: \"amountOutMin\", type: \"uint256\" },\n                        { name: \"path\", type: \"address[]\" },\n                        { name: \"to\", type: \"address\" },\n                        { name: \"deadline\", type: \"uint256\" },\n                    ],\n                    name: \"swapExactTokensForAVAX\",\n                    outputs: [{ name: \"amounts\", type: \"uint256[]\" }],\n                    type: \"function\",\n                },\n\n                {\n                    inputs: [\n                        { name: \"amountOutMin\", type: \"uint256\" },\n                        { name: \"path\", type: \"address[]\" },\n                        { name: \"to\", type: \"address\" },\n                        { name: \"deadline\", type: \"uint256\" },\n                    ],\n                    name: \"swapExactAVAXForTokens\",\n                    outputs: [{ name: \"amounts\", type: \"uint256[]\" }],\n                    stateMutability: \"payable\",\n                    type: \"function\",\n                },\n            ];\n\n            const rpcUrl = this.getNetworkRPC(sourceNetwork);\n            const provider = new ethers.JsonRpcProvider(rpcUrl);\n            const privateKey = wallet.privateKey.startsWith(\"0x\")\n                ? wallet.privateKey\n                : ethers.Wallet.fromPhrase(wallet.mnemonic.trim().toLowerCase()).privateKey;\n            const signer = new ethers.Wallet(privateKey, provider);\n            const router = new ethers.Contract(ROUTER_ADDRESS, ROUTER_ABI, signer);\n            const deadline = Math.floor(Date.now() / 1000) + 1200;\n\n            const isSourceNative = !sourceToken.address || sourceToken.address === \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\n            const isTargetNative = !targetToken.address || targetToken.address === \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\n\n            try {\n                if (isSourceNative && !isTargetNative) {\n                    const path = [WAVAX_ADDRESS, targetToken.address];\n                    return await router.swapExactAVAXForTokens(\n                        ethers.parseUnits(amount, \"wei\"),\n                        ethers.parseUnits(\"1\", \"wei\"),\n                        path,\n                        signer.address,\n                        deadline\n                    );\n                } else if (!isSourceNative && isTargetNative) {\n                    const path = [sourceToken.address, WAVAX_ADDRESS];\n\n                    await this.approveToken(sourceToken.address, signer.address, ROUTER_ADDRESS, amount, privateKey, sourceNetwork);\n\n                    await new Promise((resolve) => setTimeout(resolve, 5000));\n\n                    return await router.swapExactTokensForAVAX(\n                        ethers.parseUnits(amount, \"wei\"),\n                        ethers.parseUnits(\"1\", \"wei\"),\n                        path,\n                        signer.address,\n                        deadline\n                    );\n                } else if (!isSourceNative && !isTargetNative) {\n                    const path = [sourceToken.address, WAVAX_ADDRESS, targetToken.address];\n\n                    await this.approveToken(sourceToken.address, signer.address, ROUTER_ADDRESS, amount, privateKey, sourceNetwork);\n\n                    await new Promise((resolve) => setTimeout(resolve, 5000));\n\n                    return await router.swapExactTokensForTokens(\n                        ethers.parseUnits(amount, \"wei\"),\n                        ethers.parseUnits(\"1\", \"wei\"),\n                        path,\n                        signer.address,\n                        deadline\n                    );\n                } else {\n                    throw new Error(\"Tipo de swap inválido: AVAX a AVAX\");\n                }\n            } catch (error) {\n                console.error(\"Error ejecutando swap directo:\", error);\n                throw new Error(\"Error en la transacción: \" + (error as Error).message || \"Desconocido\");\n            }\n        } catch (error) {\n            console.error(\"Error ejecutando swap directo:\", error);\n            throw error;\n        }\n    }\n\n    private async approveToken(\n        tokenAddress: string,\n        owner: string,\n        spender: string,\n        amount: string,\n        privateKey: string,\n        network: string\n    ): Promise<void> {\n        await this.checkAndSetAllowance(tokenAddress, spender, amount, owner, privateKey, network);\n    }\n\n    /**\n     * Execute a swap on Solana\n     */\n    async executeSolanaSwap(quote: any, wallet: any, mnemonic?: string): Promise<any> {\n        try {\n            if (!quote) throw new Error(\"Invalid quote for Solana swap: Quote is null or undefined\");\n\n            let step;\n\n            if (quote.steps && quote.steps.length > 0) {\n                step = quote.steps[0];\n            } else if (quote.tool) {\n                step = quote;\n            } else if (quote.includedSteps && quote.includedSteps.length > 0) {\n                step = quote.includedSteps[0];\n            } else throw new Error(\"Invalid quote structure: No steps or direct quote found\");\n\n            if (!step.tool) throw new Error(\"Invalid step: Missing tool information\");\n\n            if (!quote.estimate || !quote.estimate.toAmount || parseFloat(quote.estimate.toAmount) <= 0) {\n                throw new Error(\"Invalid quote: The estimated output amount is zero or missing\");\n            }\n\n            if (!wallet || !wallet.solanaAddress) throw new Error(\"Wallet address is required for Solana swap\");\n\n            const requestBody = {\n                ...quote,\n                fromAddress: wallet.solanaAddress,\n                toAddress: wallet.solanaAddress,\n                slippage: quote.slippage || 1,\n            };\n\n            const { data: txResponse } = await firstValueFrom(\n                this._http.post<{ data: any }>(`${this.LIFI_API_URL}/execute-advanced-step-transaction`, requestBody)\n            );\n\n            if (!txResponse || !txResponse.transactionRequest) throw new Error(\"Failed to get transaction data\");\n\n            const transactionData = txResponse.transactionRequest.data;\n\n            if (!transactionData) throw new Error(\"No transaction data received\");\n            if (!mnemonic) throw new Error(\"Mnemonic phrase is required for signing Solana transactions\");\n\n            try {\n                const cleanMnemonic = mnemonic.trim();\n                const signature = await this._solanaService.sendSerializedTransaction(cleanMnemonic, transactionData);\n\n                await new Promise((resolve) => setTimeout(resolve, 2000));\n\n                return {\n                    status: \"SUCCESS\",\n                    message: \"Transaction successfully executed\",\n                    transactionHash: signature,\n                    transactionData: transactionData,\n                    network: \"solana\",\n                    fromToken: quote.action?.fromToken?.symbol || \"\",\n                    toToken: quote.action?.toToken?.symbol || \"\",\n                    fromAmount: quote.action?.fromAmount || \"0\",\n                    toAmount: quote.estimate?.toAmount || \"0\",\n                    fromAddress: wallet.solanaAddress,\n                    toAddress: wallet.solanaAddress,\n                };\n            } catch (error: any) {\n                console.error(\"Error in Solana transaction:\", error);\n\n                if (error.message && error.message.includes(\"Fondos insuficientes\")) {\n                    throw new Error(\n                        \"Para realizar un swap en Solana, necesitas tener al menos 0.002 SOL para cubrir las tarifas de red y la creación de cuentas de token. Por favor, añade SOL a tu cuenta e inténtalo de nuevo.\"\n                    );\n                }\n\n                if (error.message && (error.message.includes(\"Instruction\") || error.message.includes(\"Program Error\"))) {\n                    throw new Error(\n                        \"La transacción falló en la blockchain de Solana. Esto puede deberse a slippage, liquidez insuficiente o problemas con las cuentas de token. Por favor, intenta con un monto menor o un slippage mayor.\"\n                    );\n                }\n\n                if (error.message && error.message.includes(\"expired\")) {\n                    throw new Error(\n                        \"La transacción expiró antes de ser confirmada. Esto puede deberse a congestión en la red. Por favor, intenta nuevamente.\"\n                    );\n                }\n\n                throw error;\n            }\n        } catch (error) {\n            console.error(\"Error executing Solana swap:\", error);\n\n            throw error;\n        }\n    }\n}\n","import { CurrencyPipe, DecimalPipe, NgClass, NgFor, NgIf, NgTemplateOutlet } from \"@angular/common\";\nimport { Component, DestroyRef, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ChangeDetectorRef } from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { FormBuilder, ReactiveFormsModule, UntypedFormGroup } from \"@angular/forms\";\nimport { MatRippleModule } from \"@angular/material/core\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\n\nimport { AssetService, NetworkPermissions } from \"app/asset.service\";\nimport { LifiService } from \"app/services/lifi.service\";\nimport { NetworkName, NetworkService, NetworkSymbol } from \"app/services/network.service\";\nimport { TokenData } from \"app/wallet\";\nimport { WalletService } from \"app/wallet.service\";\nimport { ZelfLoaderComponent } from \"app/zelf-loader/zelf-loader.component\";\n\nexport interface AssetChangeData {\n    asset: TokenData;\n    source: \"source\" | \"target\";\n}\n\n@Component({\n    imports: [\n        NgIf,\n        NgFor,\n        NgClass,\n        NgTemplateOutlet,\n        ReactiveFormsModule,\n        TranslocoModule,\n        CurrencyPipe,\n        DecimalPipe,\n        MatRippleModule,\n        ZelfLoaderComponent,\n    ],\n    selector: \"swap-currency\",\n    styleUrls: [\"./swap-currency.component.scss\"],\n    templateUrl: \"./swap-currency.component.html\",\n})\nexport class SwapCurrencyComponent implements OnInit {\n    @ViewChild(\"assetsContainer\", { static: false }) assetsContainer!: ElementRef;\n\n    @Input() source: \"source\" | \"target\" = \"source\";\n    @Input() selectedAsset: Partial<TokenData> = {};\n    @Input() myAssets: TokenData[] = [];\n    @Input() showAllTokens: boolean = true;\n\n    @Output() assetChange = new EventEmitter<AssetChangeData>();\n\n    private _pageSize = 40;\n    private _myAssetsMap: Record<string, TokenData> = {};\n\n    assets: TokenData[] = [];\n    form!: UntypedFormGroup;\n    loading = false;\n    maxPage = 1;\n    minPage = 1;\n    networkOptions = [] as string[];\n    selectedNetworkFilter = \"all\";\n\n    constructor(\n        private _assetService: AssetService,\n        private _destroyRef: DestroyRef,\n        private _fb: FormBuilder,\n        private _lifiService: LifiService,\n        private _networkService: NetworkService,\n        private _walletService: WalletService,\n        private _cdr: ChangeDetectorRef\n    ) {\n        this.loading = true;\n\n        this._initNetworkOptions();\n        this._initForm();\n    }\n\n    private _initNetworkOptions(): void {\n        this.networkOptions = [\n            \"all\",\n            ...Object.keys(this._assetService.canSwap)\n                .map((networkSymbol) => {\n                    const canSwap = this._assetService.canSwap[networkSymbol as keyof NetworkPermissions];\n\n                    if (!canSwap) return \"\";\n\n                    const networkName = this._networkService.getNetworkName(networkSymbol as NetworkSymbol);\n\n                    return networkName;\n                })\n                .filter((networkName) => networkName !== \"\" && networkName !== undefined && networkName !== null),\n        ];\n    }\n\n    async ngOnInit(): Promise<void> {\n        try {\n            await this._initializeAssets();\n        } catch (error) {\n            console.error(\"Error in ngOnInit:\", error);\n        } finally {\n            this.loading = false;\n        }\n    }\n\n    get displayedAssets(): TokenData[] {\n        return this.filteredAssets.slice(this.minPage - 1, this.maxPage * this._pageSize);\n    }\n\n    get filteredAssets(): TokenData[] {\n        return this.assets.filter((asset) => {\n            if (!asset) return false;\n\n            const selectedNetwork = this.form.get(\"networkFilter\")?.value?.toLowerCase();\n            const matchesNetwork = selectedNetwork === \"all\" || asset.network?.toLowerCase() === selectedNetwork;\n\n            const searchText = this.form.get(\"textFilter\")?.value?.toLowerCase() || \"\";\n            const matchesText =\n                !searchText ||\n                (asset.name && asset.name.toLowerCase().includes(searchText)) ||\n                (asset.symbol && asset.symbol.toLowerCase().includes(searchText));\n\n            return matchesNetwork && matchesText;\n        });\n    }\n\n    get myAssetsMap(): Record<string, TokenData> {\n        return this._myAssetsMap;\n    }\n\n    private async _fetchAndMapTokens(): Promise<TokenData[]> {\n        this.loading = true;\n\n        try {\n            const allTokens: TokenData[] = [];\n\n            const { tokens } = await this._lifiService.requestTokens();\n\n            if (!tokens || !Object.keys(tokens).length) return allTokens;\n\n            Object.entries(tokens).forEach(([chainId, tokens]) => this._mapTokenResponse([chainId, tokens], allTokens));\n\n            allTokens.sort(this._sortAssets);\n\n            this.assets = [...allTokens].sort((a, b) => this._sortAssets(a, b));\n            this._resetPaging();\n\n            this.loading = false;\n            return this.assets;\n        } catch (error) {\n            this.loading = false;\n            this.assets = [];\n            this._resetPaging();\n            return [];\n        }\n    }\n\n    private _getNetworkFromChainId(chainId: number | string): string {\n        const networkMap: Record<number | string, string> = {\n            1: \"ethereum\",\n            43114: \"avalanche\",\n            137: \"polygon\",\n            56: \"binance\",\n            42161: \"arbitrum\",\n            SOL: \"solana\",\n        };\n\n        return networkMap[chainId] || \"unknown\";\n    }\n\n    private _initForm(): void {\n        this.form = this._fb.group({\n            textFilter: [\"\"],\n            networkFilter: [\"all\"],\n        });\n\n        this.form.valueChanges.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => this._resetPaging());\n    }\n\n    private async _initializeAssets(): Promise<void> {\n        this._setMyAssetsMap(this.myAssets);\n\n        try {\n            await this._fetchAndMapTokens();\n        } catch (error) {}\n\n        this._resetPaging();\n\n        this.loading = false;\n    }\n\n    private _mapTokenResponse = ([chainId, tokens]: [string, any], allTokens: TokenData[]): void => {\n        if (!Array.isArray(tokens)) return;\n\n        const chainMap: Record<string, boolean> = {};\n        const network = this._getNetworkFromChainId(chainId);\n        const canSwap = this._assetService.canSwap[this._networkService.getNetworkSymbol(network as NetworkName) as keyof NetworkPermissions];\n\n        if (!canSwap) return;\n\n        const chainTokens: TokenData[] = [];\n\n        tokens.forEach((token: any) => {\n            const key = `${token.symbol.toLowerCase()}-${network}`;\n\n            if (chainMap[key]) return;\n\n            chainMap[key] = true;\n\n            let myAsset = {};\n\n            if (this._myAssetsMap[key]) myAsset = this._myAssetsMap[key];\n\n            const asset = {\n                amount: \"0\",\n                balance: \"0\",\n                balanceUsd: \"0\",\n                chainId,\n                decimals: token.decimals,\n                fiatBalance: \"0\",\n                tokenType: \"token\",\n                ...myAsset,\n                contractAddress: token.address,\n                image: token.logoURI || \"\",\n                name: token.name,\n                network: network.charAt(0).toUpperCase() + network.slice(1),\n                price: token.priceUSD ? parseFloat(token.priceUSD) : 0,\n                symbol: token.symbol,\n            } as TokenData;\n\n            if (asset.image) this._walletService.setAssetImage(asset.symbol, asset.image);\n\n            chainTokens.push(asset);\n        });\n\n        allTokens.push(...chainTokens);\n    };\n\n    private _resetPaging(): void {\n        this.minPage = 1;\n        this.maxPage = 1;\n    }\n\n    private _setMyAssetsMap(assets: TokenData[]): void {\n        this._myAssetsMap = assets.reduce(\n            (acc, asset) => {\n                const key = `${asset.symbol.toLowerCase()}-${asset.network.toLowerCase()}`;\n\n                acc[key] = asset;\n\n                return acc;\n            },\n            {} as Record<string, TokenData>\n        );\n    }\n\n    private _sortAssets(a: TokenData, b: TokenData): number {\n        const aBalance = parseFloat(`${a.fiatBalance}` || \"0\");\n        const bBalance = parseFloat(`${b.fiatBalance}` || \"0\");\n\n        if (!aBalance && !bBalance) return (a.priceUSD as string)?.localeCompare(b.priceUSD as string) || 0;\n\n        return bBalance - aBalance;\n    }\n\n    getAssetImage(asset: TokenData): string {\n        return this._walletService.getAssetImage(asset.symbol, asset.image);\n    }\n\n    isNetworkSelected(network: string): boolean {\n        return this.selectedNetworkFilter === network;\n    }\n\n    onImageError(asset: TokenData): void {\n        asset.image = \"assets/tokens/placeholder-coin.png\";\n    }\n\n    onScroll(event: Event): void {\n        const el = event.target as HTMLElement;\n        const threshold = 20;\n        const atBottom = el.scrollTop + el.clientHeight >= el.scrollHeight - threshold;\n        const atTop = el.scrollTop <= threshold;\n\n        if (atBottom && this.maxPage * this._pageSize < this.filteredAssets.length) {\n            this.maxPage++;\n\n            if (this.maxPage - this.minPage + 1 > 2) this.minPage++;\n        } else if (atTop && this.minPage > 1) {\n            this.minPage--;\n\n            if (this.maxPage - this.minPage + 1 > 2) this.maxPage--;\n        } else return;\n    }\n\n    selectAsset(asset: TokenData): void {\n        this.assetChange.emit({\n            asset,\n            source: this.source,\n        });\n    }\n\n    toggleNetworkFilter(network: string): void {\n        this.selectedNetworkFilter = network;\n\n        this.form.patchValue({ networkFilter: network });\n    }\n}\n","<form class=\"swap-currency\" [formGroup]=\"form\" *transloco=\"let t\">\n    <div class=\"swap-currency__filters\">\n        <div class=\"swap-currency__filter\">\n            <div class=\"zelf-input zelf-input--wide\">\n                <input\n                    class=\"zelf-input__control\"\n                    formControlName=\"textFilter\"\n                    id=\"textFilter\"\n                    name=\"textFilter\"\n                    [placeholder]=\"t('common.search')\"\n                    required\n                    type=\"text\"\n                />\n\n                <div class=\"zelf-input__postfix swap-currency__search-icon\">\n                    <ng-container *ngTemplateOutlet=\"search\"></ng-container>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"swap-currency__network-filters\">\n            <button\n                (click)=\"toggleNetworkFilter(network)\"\n                [ngClass]=\"{ 'zelf-button--black': form.get('networkFilter')?.value === network }\"\n                *ngFor=\"let network of networkOptions\"\n                class=\"zelf-button zelf-button--pill swap-currency__network-filter\"\n                mat-flat-button\n            >\n                {{ network === \"all\" ? t(\"common.all\") : network }}\n            </button>\n        </div>\n    </div>\n\n    <div #assetsContainer class=\"swap-currency__assets\" (scroll)=\"onScroll($event)\">\n        <div\n            (click)=\"selectAsset(asset)\"\n            [ngClass]=\"{ 'swap-currency__asset--selected': asset.name === selectedAsset.name }\"\n            *ngFor=\"let asset of displayedAssets\"\n            class=\"swap-currency__asset\"\n            md-ripple\n        >\n            <div class=\"swap-currency__asset-info swap-currency__asset-info--left\">\n                <img\n                    (error)=\"onImageError(asset)\"\n                    [alt]=\"asset.symbol\"\n                    [src]=\"asset.image || 'assets/tokens/placeholder-coin.png'\"\n                    class=\"swap-currency__asset-image\"\n                />\n\n                <div class=\"swap-currency__asset-col\">\n                    <p class=\"swap-currency__asset-name\">\n                        <span class=\"swap-currency__asset-name-text\">{{ asset.name }}</span>\n                        <span class=\"zelf-chip zelf-chip--pill\">{{ asset.network }}</span>\n                    </p>\n\n                    <p class=\"swap-currency__asset-symbol\">{{ asset.symbol }}</p>\n                </div>\n            </div>\n\n            <div class=\"swap-currency__asset-info swap-currency__asset-info--right\">\n                <div class=\"swap-currency__asset-col\">\n                    <p class=\"swap-currency__asset-balance\">{{ asset.amount | number: \"1.2-8\" }}</p>\n                    <p class=\"swap-currency__asset-balance-fiat\">{{ asset.fiatBalance | currency: \"USD\" : \"symbol\" : \"1.2-2\" }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <zelf-loader *ngIf=\"loading\"></zelf-loader>\n</form>\n\n<ng-template #search>\n    <svg viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M11.76 10.27L17.49 16L16 17.49L10.27 11.76C9.2 12.53 7.91 13 6.5 13C2.91 13 0 10.09 0 6.5C0 2.91 2.91 0 6.5 0C10.09 0 13 2.91 13 6.5C13 7.91 12.53 9.2 11.76 10.27ZM6.5 2C4.01 2 2 4.01 2 6.5C2 8.99 4.01 11 6.5 11C8.99 11 11 8.99 11 6.5C11 4.01 8.99 2 6.5 2Z\"\n        />\n    </svg>\n</ng-template>\n"],"names":["ethers","firstValueFrom","merge","Subject","takeUntil","debounceTime","filter","tap","CurrencyPipe","DecimalPipe","NgClass","NgFor","NgIf","NgTemplateOutlet","ReactiveFormsModule","Validators","MatButtonModule","MatMenuModule","MatProgressSpinnerModule","RouterLink","TranslocoModule","SlippageSheetComponent","SwapData","SwapCurrencyComponent","environment","ZelfLoaderComponent","i0","ɵɵelement","ɵɵproperty","ɵɵelementContainerStart","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind4","tmp_12_0","ctx_r1","form","get","value","ɵɵtextInterpolate2","symbol","ɵɵpipeBind2","ɵɵelementStart","ɵɵelementEnd","ɵɵtextInterpolate","t_r4","selectedSourceAsset","image","ɵɵsanitizeUrl","ɵɵtemplate","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_21_img_2_Template","getNetworkImage","network","getNetworkSymbol","ɵɵelementContainer","selectedTargetAsset","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_50_img_2_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_50_img_3_Template","SwapComponent_div_0_ng_container_1_ng_container_10_div_58_ng_container_1_Template","cross_r5","SwapComponent_div_0_ng_container_1_ng_container_10_div_59_ng_container_1_Template","SwapComponent_div_0_ng_container_1_ng_container_10_div_60_ng_container_1_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_4_ng_container_1_Template","downArrowIcon_r7","ɵɵlistener","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_button_7_Template_button_click_0_listener","bridgeOption_r9","ɵɵrestoreView","_r8","$implicit","ɵɵnextContext","ɵɵresetView","setBridge","label","tmp_14_0","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_4_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_button_7_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_13_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_16_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_22_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_28_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_31_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_43_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_46_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_Template_button_click_53_listener","_r6","openSlippageSheet","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_ng_container_54_Template","bridgeOptions","length","bridgeMenu_r10","ɵɵpureFunction1","_c4","getBridgeLabel","ɵɵsanitizeHtml","informationIcon_r11","hasSelectedTargetAsset","tmp_28_0","_c5","tmp_32_0","tmp_33_0","editIcon_r12","SwapComponent_div_0_ng_container_1_ng_container_10_div_63_ng_container_4_Template","_c6","dirty","errors","showPassword","toggleButton_r13","SwapComponent_div_0_ng_container_1_ng_container_10_div_64_ng_container_1_Template","_c7","remainingAttempts","SwapComponent_div_0_ng_container_1_ng_container_10_zelf_loader_3_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_13_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_14_Template","SwapComponent_div_0_ng_container_1_ng_container_10_Template_button_click_15_listener","_r3","handleBalanceDisplayChange","SwapComponent_div_0_ng_container_1_ng_container_10_Template_div_click_19_listener","swapSource","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_20_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_21_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_23_Template","SwapComponent_div_0_ng_container_1_ng_container_10_Template_button_click_28_listener","setAmount","SwapComponent_div_0_ng_container_1_ng_container_10_Template_button_click_30_listener","SwapComponent_div_0_ng_container_1_ng_container_10_Template_button_click_33_listener","swapTargetWithSource","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_45_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_46_Template","SwapComponent_div_0_ng_container_1_ng_container_10_Template_div_click_48_listener","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_49_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_50_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_52_Template","SwapComponent_div_0_ng_container_1_ng_container_10_div_58_Template","SwapComponent_div_0_ng_container_1_ng_container_10_div_59_Template","SwapComponent_div_0_ng_container_1_ng_container_10_div_60_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_61_Template","SwapComponent_div_0_ng_container_1_ng_container_10_div_63_Template","SwapComponent_div_0_ng_container_1_ng_container_10_div_64_Template","SwapComponent_div_0_ng_container_1_ng_container_10_Template_button_click_65_listener","confirmSwap","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_66_Template","SwapComponent_div_0_ng_container_1_ng_container_10_ng_container_67_Template","SwapComponent_div_0_ng_container_1_ng_container_10_mat_spinner_68_Template","loading","_c1","tmp_13_0","_c2","swapBalanceDisplay","amount","hasSelectedSourceAsset","_c3","tmp_25_0","max","hasBothAssetsSet","tmp_38_0","mustNotMatch","insufficientFunds","crossNetwork","showDetails","passwordSet","passwordError","isConfirmDisabled","requiresBiometrics","sending","SwapComponent_div_0_ng_container_1_swap_currency_11_Template_swap_currency_assetChange_0_listener","$event","_r14","handleAssetChange","tokens","SwapComponent_div_0_ng_container_1_Template_button_click_3_listener","_r1","SwapComponent_div_0_ng_container_1_ng_container_10_Template","SwapComponent_div_0_ng_container_1_swap_currency_11_Template","ɵɵpureFunction0","_c0","SwapComponent_div_0_ng_container_1_Template","SwapComponent_div_0_zelf_loader_2_Template","quoteLoading","SwapComponent_ng_template_11_Template_button_click_0_listener","_r15","toggleShowPassword","SwapComponent_ng_template_11_ng_container_1_Template","openEye_r16","closedEye_r17","SwapComponent","_assetService","_blockchainTransactionsService","_bottomSheet","_changeDetectionRef","_chromeService","_formBuilder","_lifiService","_networkService","_router","_snackBar","_transactionService","_translocoService","_vaultService","_walletService","_zelfNameService","_feeUpdateInterval","_mnemonics","_password","_requiresBiometricsInterval","CAN_SWAP","unsubscriber$","formUnsubscriber$","networkImage","networkSymbol","slippage","swapData","swapError","swapQuote","transactionHash","wallet","swapExecuting","swapExecuted","swapLoading","constructor","canSwap","password","mnemonic","trim","_setRequiresBiometricsInterval","ngOnInit","_this","_asyncToGenerator","getCurrentWallet","_initForm","_loadTokensFromSession","_decryptMnemonics","_findPreviousSwapData","hasSwapData","ngOnDestroy","_clearFeeUpdateInterval","_clearRequiresBiometricsInterval","next","complete","canCheckQuote","valid","Object","keys","targetTokenPricePerDollar","price","totalTargetFiat","totalTargetToken","totalSourceFiat","totalSourceToken","clearInterval","_this2","biometricsRequired","pgp","encryptedMessage","privateKey","secret","JSON","parse","_decryptMessage","toLowerCase","_this3","privateKeyArmoured","passphrase","decryptMessage","error","_fetchTokens","_this4","response","getAddressData","result","processTokensFromResponse","_this5","getCurrentSwapData","_initSwapData","finally","_greaterThanZero","control","greaterThanZero","_getAddressForNetwork","ethAddress","solanaAddress","_getFeeFromQuote","quote","fee","estimate","gasCosts","forEach","gasCost","amountUSD","parseFloat","feeCosts","feeCost","bridgeCosts","bridgeCost","executionCosts","executionCost","includedSteps","step","_handleSuccessfulSwap","receipt","_this6","pendingTransactionData","asset","date","Date","toISOString","from","status","targetAddress","contractAddress","targetAmount","targetImage","targetNetwork","targetSymbol","to","tokenType","total","type","addTransactionToPending","removeItemSession","removeItem","navigate","queryParams","group","bridge","required","commission","min","commissionToggle","slippageToggle","sourceAmount","sourceAsset","sourceFiat","disabled","targetAsset","_notMatchingValidator","targetFiat","targetSwapValue","validators","_insufficientFundsValidator","_crossNetworkValidator","_setupQuoteUpdates","hasSolAsset","indexOf","_this7","patchValue","sourceBalance","_this8","sessionTokens","loadTokensFromSession","detectChanges","console","matchTo","parent","targetKey","sourceKey","_redirectToBiometrics","_this9","setFlow","setZelfName","publicData","zelfName","rest","return","_setFeeUpdateInterval","production","setInterval","getSwapQuote","then","_this0","sourceFiatChanges","valueChanges","pipe","subscribe","setValue","markAsDirty","markAsTouched","updateValueAndValidity","sourceAmountChanges","slippageChanges","sourceAssetChanges","targetAssetChanges","REQUIRED_QUOTE_FIELDS","some","field","invalid","_validateCredentials","_this1","openErrorSnackBar","message","_this10","Mnemonic","isValidMnemonic","Error","ethWallet","Wallet","fromPhrase","sourceNetwork","EVM_NETWORKS","includes","isFromNative","action","fromToken","address","executeSwap","executeSolanaSwap","findToken","find","token","option","getAssetImage","_this11","silentLoading","isSameAsset","emitEvent","fromChain","getChainIdentifier","toChain","getTokenAddress","toToken","sourceAmountStr","toString","fromAmount","formatAmount","decimals","fromAddress","slippageStr","getQuote","toTokenDecimals","toAmount","estimatedAmount","Math","pow","sourceTokenAmount","toAmountUSD","apply","arguments","event","source","hasValidAmount","hasValidBalance","hasValidNetworks","hasValidQuote","hasAssets","isNotLoadingOrSending","open","translate","duration","panelClass","verticalPosition","backdropClass","data","afterDismissed","modifier","modifiedValue","Number","toFixed","_tempSourceFiat","_tempTargetFiat","_tempSource","_tempTarget","fromTokenDecimals","_tempSourceAmount","_tempTargetAmount","onlySelf","ɵɵdirectiveInject","i1","AssetService","i2","BlockchainTransactionsService","i3","MatBottomSheet","ChangeDetectorRef","i4","ChromeService","i5","FormBuilder","i6","LifiService","i7","NetworkService","i8","Router","i9","MatSnackBar","i10","TransactionService","i11","TranslocoService","i12","VaultService","i13","WalletService","i14","ZelfNameService","selectors","decls","vars","consts","template","SwapComponent_Template","rf","ctx","SwapComponent_div_0_Template","SwapComponent_ng_template_1_Template","ɵɵtemplateRefExtractor","SwapComponent_ng_template_3_Template","SwapComponent_ng_template_5_Template","SwapComponent_ng_template_7_Template","SwapComponent_ng_template_9_Template","SwapComponent_ng_template_11_Template","SwapComponent_ng_template_13_Template","i15","MatButton","MatIconButton","i16","MatMenu","MatMenuItem","MatMenuTrigger","i17","MatProgressSpinner","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinValidator","MaxValidator","FormGroupDirective","FormControlName","TranslocoDirective","styles","FormsModule","MAT_BOTTOM_SHEET_DATA","SlippageSheetComponent_ng_container_0_Template_button_click_2_listener","close","SlippageSheetComponent_ng_container_0_Template_div_click_14_listener","toggleMode","SlippageSheetComponent_ng_container_0_Template_div_click_47_listener","SlippageSheetComponent_ng_container_0_Template_button_click_62_listener","confirm","t_r3","tmp_6_0","ɵɵpipeBind1","tmp_7_0","tmp_8_0","ɵɵstyleProp","tmp_10_0","tmp_11_0","tmp_15_0","tmp_16_0","tmp_18_0","_bottomSheetRef","slippageSlider","ngAfterViewInit","_updateRangeProgress","_requiredIfManual","formControlName","toggle","requestAnimationFrame","slider","nativeElement","isNaN","percentage","style","setProperty","dismiss","pristine","controlName","currentValue","newValue","MatBottomSheetRef","viewQuery","SlippageSheetComponent_Query","SlippageSheetComponent_ng_container_0_Template","RangeValueAccessor","TranslocoPipe","of","catchError","map","_http","_solanaService","ERC20_ABI","name","inputs","outputs","stateMutability","MIN_PRICE_USD","LIFI_API_URL","apiUrl","chainIdToSymbol","lifiChainSymbols","_formatAmount","numAmount","replace","requestTokens","defaultResponse","standardResponse","params","chains","minPriceUSD","err","warn","solanaResponse","chainTypes","SOL","sol","values","flat","getTokens","combined","join","chain","chainSymbol","toUpperCase","amountStr","String","amountBN","parseUnits","provider","JsonRpcProvider","getNetworkRPC","fromChainId","signer","NATIVE_TOKEN_ADDRESS","ZERO_ADDRESS","feeData","getFeeData","nonce","getTransactionCount","tx","transactionRequest","maxFeePerGas","maxPriorityFeePerGas","gasLimit","BigInt","checkAndSetAllowance","approvalAddress","Promise","resolve","setTimeout","latestNonce","transaction","sendTransaction","wait","hash","tokenAddress","spender","owner","contract","Contract","currentAllowance","allowance","staticCall","approve","chainId","networkMappings","ethereumRpc","mainnet","polygonRpc","avalancheRpc","rpc","gasEstimate","estimateGas","floor","getTokenImage","startsWith","solanaTokens","getSwapGasCost","gasPrice","getRoutes","toAddress","requestBody","toChainId","fromTokenAddress","toTokenAddress","options","post","formattedAmount","usdcAmount","solPrice","expectedSolAmount","toAmountMin","executeSwapWithApproval","sourceToken","targetToken","executeDirectSwap","ROUTER_ADDRESS","WAVAX_ADDRESS","ROUTER_ABI","rpcUrl","router","deadline","now","isSourceNative","isTargetNative","path","swapExactAVAXForTokens","approveToken","swapExactTokensForAVAX","swapExactTokensForTokens","steps","tool","txResponse","transactionData","cleanMnemonic","signature","sendSerializedTransaction","ɵɵinject","HttpClient","SolanaService","factory","ɵfac","providedIn","EventEmitter","takeUntilDestroyed","MatRippleModule","SwapCurrencyComponent_form_0_button_8_Template_button_click_0_listener","network_r3","_r2","ctx_r3","toggleNetworkFilter","t_r5","SwapCurrencyComponent_form_0_div_11_Template_div_click_0_listener","asset_r7","selectAsset","SwapCurrencyComponent_form_0_div_11_Template_img_error_2_listener","onImageError","selectedAsset","fiatBalance","SwapCurrencyComponent_form_0_ng_container_6_Template","SwapCurrencyComponent_form_0_button_8_Template","SwapCurrencyComponent_form_0_Template_div_scroll_9_listener","onScroll","SwapCurrencyComponent_form_0_div_11_Template","SwapCurrencyComponent_form_0_zelf_loader_12_Template","search_r8","networkOptions","displayedAssets","_destroyRef","_fb","_cdr","assetsContainer","myAssets","showAllTokens","assetChange","_pageSize","_myAssetsMap","assets","maxPage","minPage","selectedNetworkFilter","_initNetworkOptions","networkName","getNetworkName","undefined","_initializeAssets","filteredAssets","slice","selectedNetwork","matchesNetwork","searchText","matchesText","myAssetsMap","_fetchAndMapTokens","allTokens","entries","_mapTokenResponse","sort","_sortAssets","a","b","_resetPaging","_getNetworkFromChainId","networkMap","textFilter","networkFilter","_setMyAssetsMap","Array","isArray","chainMap","chainTokens","key","myAsset","balance","balanceUsd","logoURI","charAt","priceUSD","setAssetImage","push","reduce","acc","aBalance","bBalance","localeCompare","isNetworkSelected","el","target","threshold","atBottom","scrollTop","clientHeight","scrollHeight","atTop","emit","DestroyRef","SwapCurrencyComponent_Query","SwapCurrencyComponent_form_0_Template","SwapCurrencyComponent_ng_template_1_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}