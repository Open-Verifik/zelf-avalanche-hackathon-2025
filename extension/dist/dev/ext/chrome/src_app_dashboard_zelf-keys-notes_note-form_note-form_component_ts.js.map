{"version":3,"file":"src_app_dashboard_zelf-keys-notes_note-form_note-form_component_ts.js","mappings":"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","sources":["./src/app/dashboard/zelf-keys-notes/note-form/note-form.component.ts","./src/app/dashboard/zelf-keys-notes/note-form/note-form.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { TranslocoModule } from \"@jsverse/transloco\";\nimport { RouterModule, Router, ActivatedRoute } from \"@angular/router\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ChromeService } from \"../../../chrome.service\";\nimport { DataPassingService } from \"../../../services/data-passing.service\";\n\n@Component({\n\tselector: \"app-note-form\",\n\tstandalone: true,\n\timports: [CommonModule, TranslocoModule, RouterModule, FormsModule],\n\ttemplateUrl: \"./note-form.component.html\",\n\tstyleUrls: [\"./note-form.component.scss\"],\n})\nexport class NoteFormComponent implements OnInit {\n\tnoteData = {\n\t\ttitle: \"Meeting Notes\",\n\t\tkeyValuePairs: [\n\t\t\t{ key: \"Date\", value: new Date().toLocaleDateString() },\n\t\t\t{ key: \"Location\", value: \"Conference Room A\" },\n\t\t\t{ key: \"Attendees\", value: \"Team Members\" },\n\t\t\t{ key: \"Agenda\", value: \"Q1 Planning\" },\n\t\t\t{ key: \"Notes\", value: \"Discussed project timeline and goals...\" },\n\t\t],\n\t\tfolder: \"Work\",\n\t\tinsideFolder: true,\n\t\tuseMasterPassword: false,\n\t\tmasterPassword: \"\",\n\t};\n\n\tisNewNote = true;\n\tformValid = false;\n\tmaxKeyValuePairs = 10;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate chromeService: ChromeService,\n\t\tprivate dataPassingService: DataPassingService\n\t) {}\n\n\tasync ngOnInit(): Promise<void> {\n\t\t// Ensure extension is in full screen mode for better security when handling notes\n\t\tif (this.chromeService.isExtension) {\n\t\t\tawait this.chromeService.ensureFullScreen(\"dashboard/notes/new\");\n\t\t}\n\n\t\t// Check if this is a new note or editing existing\n\t\tconst id = this.route.snapshot.paramMap.get(\"id\");\n\t\tthis.isNewNote = id === \"new\";\n\n\t\tif (!this.isNewNote) {\n\t\t\t// TODO: Load existing note data\n\t\t\t// this.loadNoteData(id);\n\t\t}\n\n\t\tthis.checkFormValidity();\n\t}\n\n\ttoggleFolder(): void {\n\t\tthis.noteData.insideFolder = !this.noteData.insideFolder;\n\t}\n\n\ttoggleMasterPassword(): void {\n\t\tthis.noteData.useMasterPassword = !this.noteData.useMasterPassword;\n\t\tif (!this.noteData.useMasterPassword) {\n\t\t\tthis.noteData.masterPassword = \"\"; // Clear password when toggling off\n\t\t}\n\t\tthis.checkFormValidity();\n\t}\n\n\taddKeyValuePair(): void {\n\t\tif (this.noteData.keyValuePairs.length < this.maxKeyValuePairs) {\n\t\t\tthis.noteData.keyValuePairs.push({ key: \"\", value: \"\" });\n\t\t\tthis.checkFormValidity();\n\t\t}\n\t}\n\n\tremoveKeyValuePair(index: number): void {\n\t\tif (this.noteData.keyValuePairs.length > 1) {\n\t\t\tthis.noteData.keyValuePairs.splice(index, 1);\n\t\t\tthis.checkFormValidity();\n\t\t}\n\t}\n\n\tcheckFormValidity(): void {\n\t\tconst hasTitle = !!this.noteData.title.trim();\n\t\tconst hasValidPairs = this.noteData.keyValuePairs.every((pair) => pair.key.trim() && pair.value.trim());\n\n\t\t// Master password is optional - only validate if user chose to use it\n\t\tconst hasValidMasterPassword = !this.noteData.useMasterPassword || (this.noteData.useMasterPassword && !!this.noteData.masterPassword.trim());\n\n\t\t// Backend validation requirements:\n\t\t// - title: required, minLength: 1, maxLength: 100\n\t\t// - keyValuePairs: required, minKeys: 1, maxKeys: 10\n\t\t// - masterPassword: optional (only if user enables it)\n\n\t\tthis.formValid = hasTitle && hasValidPairs && hasValidMasterPassword;\n\t}\n\n\tonCancel(): void {\n\t\tthis.router.navigate([\"/dashboard/notes\"]);\n\t}\n\n\tonSave(): void {\n\t\tif (!this.formValid) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Store data in service instead of query params\n\t\tconst formData = {\n\t\t\t...this.noteData,\n\t\t\ttype: \"notes\",\n\t\t};\n\n\t\tthis.dataPassingService.storeData(\"notes\", formData);\n\t\tconsole.log(\"🔍 DEBUG - Note data stored in service:\", formData);\n\n\t\t// Navigate to biometrics step\n\t\tthis.router.navigate([\"/dashboard/notes/biometrics\"]);\n\t}\n}\n","<div class=\"note-form\">\n\t<div class=\"form-header\">\n\t\t<h2>{{ isNewNote ? \"Add New Note\" : \"Edit Note\" }}</h2>\n\t\t<p>Create a secure note with key-value pairs for easy organization</p>\n\t</div>\n\n\t<div class=\"form-content\">\n\t\t<form (ngSubmit)=\"onSave()\" #noteForm=\"ngForm\">\n\t\t\t<!-- Title Section -->\n\t\t\t<div class=\"form-section\">\n\t\t\t\t<label for=\"title\" class=\"form-label\">Note Title *</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"title\"\n\t\t\t\t\tname=\"title\"\n\t\t\t\t\t[(ngModel)]=\"noteData.title\"\n\t\t\t\t\t(ngModelChange)=\"checkFormValidity()\"\n\t\t\t\t\tclass=\"form-input\"\n\t\t\t\t\tplaceholder=\"Enter note title\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<!-- Key-Value Pairs Section -->\n\t\t\t<div class=\"form-section\">\n\t\t\t\t<div class=\"section-header\">\n\t\t\t\t\t<label class=\"form-label\">Key-Value Pairs *</label>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"btn-add-pair\"\n\t\t\t\t\t\t(click)=\"addKeyValuePair()\"\n\t\t\t\t\t\t[disabled]=\"noteData.keyValuePairs.length >= maxKeyValuePairs\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n\t\t\t\t\t\t\t<path d=\"M12 5v14M5 12h14\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\tAdd Pair\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"key-value-pairs\">\n\t\t\t\t\t<div *ngFor=\"let pair of noteData.keyValuePairs; let i = index\" class=\"key-value-row\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t[(ngModel)]=\"pair.key\"\n\t\t\t\t\t\t\t(ngModelChange)=\"checkFormValidity()\"\n\t\t\t\t\t\t\tclass=\"form-input key-input\"\n\t\t\t\t\t\t\tplaceholder=\"Key\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t[(ngModel)]=\"pair.value\"\n\t\t\t\t\t\t\t(ngModelChange)=\"checkFormValidity()\"\n\t\t\t\t\t\t\tclass=\"form-input value-input\"\n\t\t\t\t\t\t\tplaceholder=\"Value\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclass=\"btn-remove-pair\"\n\t\t\t\t\t\t\t(click)=\"removeKeyValuePair(i)\"\n\t\t\t\t\t\t\t[disabled]=\"noteData.keyValuePairs.length <= 1\"\n\t\t\t\t\t\t\ttitle=\"Remove this key-value pair\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\">\n\t\t\t\t\t\t\t\t<path d=\"M18 6L6 18M6 6l12 12\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"pairs-info\">\n\t\t\t\t\t<span class=\"pairs-count\">{{ noteData.keyValuePairs.length }}/{{ maxKeyValuePairs }} pairs</span>\n\t\t\t\t\t<span class=\"pairs-hint\">Add up to {{ maxKeyValuePairs }} key-value pairs</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Folder Section -->\n\t\t\t<div class=\"form-section\">\n\t\t\t\t<div class=\"folder-toggle\">\n\t\t\t\t\t<label class=\"form-label\">Organize in Folder</label>\n\t\t\t\t\t<div class=\"toggle-switch\" (click)=\"toggleFolder()\">\n\t\t\t\t\t\t<div class=\"toggle-slider\" [class.active]=\"noteData.insideFolder\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"noteData.insideFolder\" class=\"folder-input\">\n\t\t\t\t\t<input type=\"text\" [(ngModel)]=\"noteData.folder\" class=\"form-input\" placeholder=\"Enter folder name\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Master Password Section -->\n\t\t\t<div class=\"form-section\">\n\t\t\t\t<div class=\"password-toggle\">\n\t\t\t\t\t<label class=\"form-label\">Add Master Password (Optional)</label>\n\t\t\t\t\t<div class=\"toggle-switch\" (click)=\"toggleMasterPassword()\">\n\t\t\t\t\t\t<div class=\"toggle-slider\" [class.active]=\"noteData.useMasterPassword\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"noteData.useMasterPassword\" class=\"password-input-field\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"masterPassword\"\n\t\t\t\t\t\tname=\"masterPassword\"\n\t\t\t\t\t\t[(ngModel)]=\"noteData.masterPassword\"\n\t\t\t\t\t\t(ngModelChange)=\"checkFormValidity()\"\n\t\t\t\t\t\tclass=\"form-input\"\n\t\t\t\t\t\tplaceholder=\"Enter your master password (optional)\"\n\t\t\t\t\t/>\n\t\t\t\t\t<small class=\"form-hint\"\n\t\t\t\t\t\t>Adding a master password provides additional security layer. Biometric verification is always required.</small\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<!-- Action Buttons -->\n\t\t\t<div class=\"form-actions\">\n\t\t\t\t<button type=\"button\" class=\"btn-secondary\" (click)=\"onCancel()\">Cancel</button>\n\t\t\t\t<button type=\"submit\" class=\"btn-primary\" [disabled]=\"!formValid\" [class.btn-disabled]=\"!formValid\">\n\t\t\t\t\t{{ isNewNote ? \"Create Note\" : \"Update Note\" }}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</div>\n"],"names":["CommonModule","TranslocoModule","RouterModule","FormsModule","i0","ɵɵelementStart","ɵɵtwoWayListener","NoteFormComponent_div_22_Template_input_ngModelChange_1_listener","$event","pair_r3","ɵɵrestoreView","_r2","$implicit","ɵɵtwoWayBindingSet","key","ɵɵresetView","ɵɵlistener","ctx_r3","ɵɵnextContext","checkFormValidity","ɵɵelementEnd","NoteFormComponent_div_22_Template_input_ngModelChange_2_listener","value","NoteFormComponent_div_22_Template_button_click_3_listener","i_r5","index","removeKeyValuePair","ɵɵelement","ɵɵadvance","ɵɵtwoWayProperty","ɵɵproperty","noteData","keyValuePairs","length","NoteFormComponent_div_34_Template_input_ngModelChange_1_listener","_r6","folder","NoteFormComponent_div_41_Template_input_ngModelChange_1_listener","_r7","masterPassword","ɵɵtext","NoteFormComponent","router","route","chromeService","dataPassingService","title","Date","toLocaleDateString","insideFolder","useMasterPassword","isNewNote","formValid","maxKeyValuePairs","constructor","ngOnInit","_this","_asyncToGenerator","isExtension","ensureFullScreen","id","snapshot","paramMap","get","toggleFolder","toggleMasterPassword","addKeyValuePair","push","splice","hasTitle","trim","hasValidPairs","every","pair","hasValidMasterPassword","onCancel","navigate","onSave","formData","type","storeData","console","log","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","ChromeService","i3","DataPassingService","selectors","decls","vars","consts","template","NoteFormComponent_Template","rf","ctx","NoteFormComponent_Template_form_ngSubmit_7_listener","_r1","NoteFormComponent_Template_input_ngModelChange_12_listener","NoteFormComponent_Template_button_click_17_listener","ɵɵtemplate","NoteFormComponent_div_22_Template","NoteFormComponent_Template_div_click_32_listener","NoteFormComponent_div_34_Template","NoteFormComponent_Template_div_click_39_listener","NoteFormComponent_div_41_Template","NoteFormComponent_Template_button_click_43_listener","ɵɵtextInterpolate","ɵɵtextInterpolate2","ɵɵtextInterpolate1","ɵɵclassProp","i4","NgForOf","NgIf","i5","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}